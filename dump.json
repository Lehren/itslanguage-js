[
  {
    "__docId__": 0,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/administrative-sdk.js",
    "memberof": null,
    "longname": "src/administrative-sdk/administrative-sdk.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ChoiceChallengeController from './choice-challenge/choice-challenge-controller';\nimport ChoiceRecognitionController from './choice-recognition/choice-recognition-controller';\nimport EmailCredentialsController from './email-credentials/email-credentials-controller';\nimport OrganisationController from './organisation/organisation-controller';\nimport ProfileController from './profile/profile-controller';\nimport PronAnalaController from './pronunciation-analysis/pronunciation-analysis-controller';\nimport PronChallController from './pronunciation-challenge/pronunciation-challenge-controller';\nimport RoleController from './role/role-controller';\nimport SpeechChallengeController from './speech-challenge/speech-challenge-controller';\nimport SpeechRecordingController from './speech-recording/speech-recording-controller';\nimport UserController from './user/user-controller';\n\n/**\n * Facade for all methods used in the ITSLanguage Administrative SDK.\n */\nexport default class AdministrativeSDK {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    this._connection = connection;\n    this._choiceChallengeController = new ChoiceChallengeController(this._connection);\n    this._choiceRecognitionController = new ChoiceRecognitionController(this._connection);\n    this._emailCredentialsController = new EmailCredentialsController(this._connection);\n    this._organisationController = new OrganisationController(this._connection);\n    this._profileController = new ProfileController(this._connection);\n    this._pronAnalaController = new PronAnalaController(this._connection);\n    this._pronChallController = new PronChallController(this._connection);\n    this._roleController = new RoleController(this._connection);\n    this._speechChallengeController = new SpeechChallengeController(this._connection);\n    this._speechRecordingController = new SpeechRecordingController(this._connection);\n    this._userController = new UserController(this._connection);\n  }\n\n  /**\n   * Create a choice challenge. The choice challenge will be created in the current active {@link Organisation} derived\n   * from the OAuth2 scope.\n   * It is necessary for a choice challenge to exist for a recording to be valid.\n   *\n   * @param {ChoiceChallenge} choiceChallenge - Object to create.\n   * @returns {Promise.<ChoiceChallenge>} Containing the newly created ChoiceChallenge.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createChoiceChallenge(choiceChallenge) {\n    return this._choiceChallengeController.createChoiceChallenge(choiceChallenge);\n  }\n\n  /**\n   * Get a choice challenge. A choice challenge is identified by its identifier and the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge identifier.\n   * @returns {Promise.<ChoiceChallenge>} Containing a ChoiceChallenge.\n   * @throws {Promise.<Error>} {@link ChoiceChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceChallenge(challengeId) {\n    return this._choiceChallengeController.getChoiceChallenge(challengeId);\n  }\n\n  /**\n   * Get and return all choice challenges in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<ChoiceChallenge[]>} Containing an array of ChoiceChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceChallenges() {\n    return this._choiceChallengeController.getChoiceChallenges();\n  }\n\n  /**\n   * Start a choice recognition from streaming audio.\n   *\n   * @param {ChoiceChallenge} challenge - The choice challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @param {boolean} [trim=true] - Whether to trim the start and end of recorded audio.\n   * @returns {Promise.<ChoiceRecognition>} A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @throws {Promise.<Error>} {@link ChoiceChallenge} parameter is required or invalid.\n   * @throws {Promise.<Error>} {@link ChoiceChallenge#id} field is required.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a recognition session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during analysis.\n   */\n  startStreamingChoiceRecognition(challenge, recorder, trim) {\n    return this._choiceRecognitionController.startStreamingChoiceRecognition(challenge, recorder, trim);\n  }\n\n  /**\n   * Get a choice recognition in a choice challenge from the current active {@link Organisation} derived from\n   * the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge identifier.\n   * @param {string} recognitionId - Specify a choice recognition identifier.\n   * @returns {Promise.<ChoiceRecognition>} Promise containing a ChoiceRecognition.\n   * @throws {Promise.<Error>} {@link ChoiceChallenge#id} field is required.\n   * @throws {Promise.<Error>} {@link ChoiceRecognition#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceRecognition(challengeId, recognitionId) {\n    return this._choiceRecognitionController.getChoiceRecognition(challengeId, recognitionId);\n  }\n\n  /**\n   * Get and return all choice recognitions in a specific {@link ChoiceChallenge} from the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge to list speech recognitions for.\n   * @returns {Promise.<ChoiceRecognition[]>} Promise containing an array of ChoiceRecognitions.\n   * @throws {Promise.<Error>} {@link ChoiceChallenge#id} is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceRecognitions(challengeId) {\n    return this._choiceRecognitionController.getChoiceRecognitions(challengeId);\n  }\n\n  /**\n   * Create an organisation. The organisation will be owned by the current active tenant.\n   *\n   * @param {Organisation} organisation - Object to create.\n   * @returns {Promise.<Organisation>} Promise containing the newly created Organisation.\n   * @throws {Promise.<Error>} organisation field of type \"Organisation\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createOrganisation(organisation) {\n    return this._organisationController.createOrganisation(organisation);\n  }\n\n  /**\n   * Get an organisation. You can only get an organisation the current tenant is the owner of.\n   *\n   * @param {string} organisationId - Specify an organisation identifier.\n   * @returns {Promise.<Organisation>} Promise containing an Organisation.\n   * @throws {Promise.<Error>} {@link Organisation#id} field of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getOrganisation(organisationId) {\n    return this._organisationController.getOrganisation(organisationId);\n  }\n\n  /**\n   * Get and return all organisations the current tenant is the owner of.\n   *\n   * @returns {Promise.<Organisation[]>} Promise containing an array of Organisations.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getOrganisations() {\n    return this._organisationController.getOrganisations();\n  }\n\n  /**\n   * Start a pronunciation analysis from streaming audio.\n   *\n   * @param {PronunciationChallenge} challenge - The pronunciation challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @param {boolean} [trim] - Whether to trim the start and end of recorded audio (default: true).\n   * @returns {Promise.<PronunciationAnalysis>} A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @emits {Object} When the sent audio has finished alignment. Aligning audio is the process of mapping the audio\n   * to spoken words and determining when what is said. An object is sent containing a property 'progress',\n   * which is the sent audio alignment, and a property 'referenceAlignment' which is the alignment of the\n   * reference audio.\n   * @throws {Promise.<Error>} If challenge is not an object or not defined.\n   * @throws {Promise.<Error>} If challenge has no id.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during analysis.\n   */\n  startStreamingPronunciationAnalysis(challenge, recorder, trim) {\n    return this._pronAnalaController.startStreamingPronunciationAnalysis(challenge, recorder, trim);\n  }\n\n  /**\n   * Get a pronunciation analysis in a pronunciation challenge from the current active {@link Organisation} derived\n   * from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier.\n   * @param {string} analysisId - Specify a pronunciation analysis identifier.\n   * @returns {Promise.<PronunciationAnalysis>} Promise containing a PronunciationAnalysis.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} {@link PronunciationAnalysis#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationAnalysis(challengeId, analysisId) {\n    return this._pronAnalaController.getPronunciationAnalysis(challengeId, analysisId);\n  }\n\n  /**\n   * Get and return all pronunciation analyses in a specific pronunciation challenge from the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier to list\n   * speech recordings for.\n   * @param {boolean} [detailed=false] - Returns extra analysis metadata when true.\n   * @returns {Promise.<PronunciationAnalysis[]>} Promise containing an array PronunciationAnalyses.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationAnalyses(challengeId, detailed) {\n    return this._pronAnalaController.getPronunciationAnalyses(challengeId, detailed);\n  }\n\n  /**\n   * Create a pronunciation challenge. The created challenge will be part of the current active {@link Organisation}\n   * derived from the OAuth2 scope.\n   *\n   * @param {PronunciationChallenge} challenge - Object to create..\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the newly created PronunciationChallenge.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#referenceAudio} of type \"Blob\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createPronunciationChallenge(challenge) {\n    return this._pronChallController.createPronunciationChallenge(challenge);\n  }\n\n  /**\n   * Get a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing a PronunciationChallenge.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationChallenge(challengeId) {\n    return this._pronChallController.getPronunciationChallenge(challengeId);\n  }\n\n  /**\n   * Get and return all pronunciation challenges in the current active {@link Organisation} derived from\n   * the OAuth2 scope.\n   *\n   * @returns {Promise.<PronunciationChallenge[]>} Promise containing an array of PronunciationChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationChallenges() {\n    return this._pronChallController.getPronunciationChallenges();\n  }\n\n  /**\n   * Delete a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - A pronunciation challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the given challenge ID.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  deletePronunciationChallenge(challengeId) {\n    return this._pronChallController.deletePronunciationChallenge(challengeId);\n  }\n\n  /**\n   * Create a speech challenge in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {SpeechChallenge} speechChallenge - Object to create.\n   * @param {?Blob} audioBlob - Audio fragment to link to the challenge.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the newly created SpeechChallenge.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createSpeechChallenge(speechChallenge, audioBlob) {\n    return this._speechChallengeController.createSpeechChallenge(speechChallenge, audioBlob);\n  }\n\n  /**\n   * Get a speech challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing a SpeechChallenge.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechChallenge(challengeId) {\n    return this._speechChallengeController.getSpeechChallenge(challengeId);\n  }\n\n  /**\n   * Get and return all speech challenges in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<SpeechChallenge[]>} Promise containing an array of SpeechChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechChallenges() {\n    return this._speechChallengeController.getSpeechChallenges();\n  }\n\n  /**\n   * Start a speech recording from streaming audio.\n   *\n   * @param {SpeechChallenge} challenge - The speech challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @returns {Promise.<SpeechRecording>} A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @throws {Promise.<Error>} If challenge is not an object or not defined.\n   * @throws {Promise.<Error>} If challenge has no id.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during recording.\n   */\n  startStreamingSpeechRecording(challenge, recorder) {\n    return this._speechRecordingController.startStreamingSpeechRecording(challenge, recorder);\n  }\n\n  /**\n   * Get a speech recording in a speech challenge from the current active {@link Organisation} derived from the OAuth2\n   * scope.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier.\n   * @param {string} recordingId - Specify a speech recording identifier.\n   * @returns {Promise.<SpeechRecording>} Promise containing a SpeechRecording.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} field is required.\n   * @throws {Promise.<Error>} {@link SpeechRecording#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechRecording(challengeId, recordingId) {\n    return this._speechRecordingController.getSpeechRecording(challengeId, recordingId);\n  }\n\n  /**\n   * Get and return all speech recordings in a specific speech challenge from the current active {@link Organisation}\n   * derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier to list speech recordings for.\n   * @returns {Promise.<SpeechRecording[]>} Promise containing an array of SpeechRecordings.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechRecordings(challengeId) {\n    return this._speechRecordingController.getSpeechRecordings(challengeId);\n  }\n\n  /**\n   * Create a user. The user will be created in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {User} user - User to create.\n   * @returns {Promise.<User>} Promise containing the newly created User.\n   * @throws {Promise.<Error>} user parameter of type \"User\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createUser(user) {\n    return this._userController.createUser(user);\n  }\n\n  /**\n   * Get a user in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} userId - Specify a user identifier.\n   * @returns {Promise.<User>} Promise containing a User.\n   * @throws {Promise.<Error>} userId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getUser(userId) {\n    return this._userController.getUser(userId);\n  }\n\n  /**\n   * Get the current authenticated user.\n   *\n   * @returns {Promise.<User>} The current authenticated user.\n   * @throws {Promise.<Error>} If something went wrong in the server.\n   */\n  getCurrentUser() {\n    return this._userController.getCurrentUser();\n  }\n\n  /**\n   * Get and return all users in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<User[]>} Promise containing an array of Users.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getUsers() {\n    return this._userController.getUsers();\n  }\n\n  /**\n   * Register credentials to the given user. Multiple credentials can be registered to one user.\n   *\n   * @param {string} userId - The identifier of the user to register credentials to.\n   * @param {EmailCredentials} emailCredentials - The credentials to register to the user.\n   * @returns {Promise.<EmailCredentials>} A promise containing the created EmailCredentials.\n   * @throws {Promise.<Error>} UserId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} EmailCredentials parameter of type \"EmailCredentials\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createEmailCredentials(userId, emailCredentials) {\n    return this._emailCredentialsController.createEmailCredentials(userId, emailCredentials);\n  }\n\n  /**\n   * Get and return all roles available in the API.\n   *\n   * @returns {Promise.<Role[]>} Promise containing an array of Roles.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  getRoles() {\n    return this._roleController.getRoles();\n  }\n\n  /**\n   * Get a single role.\n   *\n   * @param {string} roleId - Identifier of the role.\n   * @returns {Promise.<Role>} Promise containing a Role.\n   * @throws {Promise.<Error>} roleId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getRole(roleId) {\n    return this._roleController.getRole(roleId);\n  }\n\n  /**\n   * Get the profile of the given user active in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} userId - Specify a User identifier.\n   * @returns {Promise.<Profile>} Promise containing a Profile.\n   * @throws {Promise.<Error>} userId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getProfile(userId) {\n    return this._profileController.getProfile(userId);\n  }\n\n  /**\n   * Get and return all profiles of all users in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<Profile[]>} Array of Profiles.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  getProfiles() {\n    return this._profileController.getProfiles();\n  }\n}\n\n\n"
  },
  {
    "__docId__": 1,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AdministrativeSDK",
    "memberof": "src/administrative-sdk/administrative-sdk.js",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/administrative-sdk.js",
    "importStyle": "AdministrativeSDK",
    "description": "Facade for all methods used in the ITSLanguage Administrative SDK.",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 3,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_connection",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_choiceChallengeController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_choiceChallengeController",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 5,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_choiceRecognitionController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_choiceRecognitionController",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_emailCredentialsController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_emailCredentialsController",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_organisationController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_organisationController",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_profileController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_profileController",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 9,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pronAnalaController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_pronAnalaController",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 10,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pronChallController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_pronChallController",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 11,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_roleController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_roleController",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_speechChallengeController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_speechChallengeController",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_speechRecordingController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_speechRecordingController",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_userController",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#_userController",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createChoiceChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createChoiceChallenge",
    "access": null,
    "description": "Create a choice challenge. The choice challenge will be created in the current active {@link Organisation} derived\nfrom the OAuth2 scope.\nIt is necessary for a choice challenge to exist for a recording to be valid.",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge>} Containing the newly created ChoiceChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChoiceChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "choiceChallenge",
        "description": "Object to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge>"
      ],
      "spread": false,
      "description": "Containing the newly created ChoiceChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 16,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getChoiceChallenge",
    "access": null,
    "description": "Get a choice challenge. A choice challenge is identified by its identifier and the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge>} Containing a ChoiceChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge>"
      ],
      "spread": false,
      "description": "Containing a ChoiceChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 17,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceChallenges",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getChoiceChallenges",
    "access": null,
    "description": "Get and return all choice challenges in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 67,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge[]>} Containing an array of ChoiceChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge[]>"
      ],
      "spread": false,
      "description": "Containing an array of ChoiceChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 18,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingChoiceRecognition",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#startStreamingChoiceRecognition",
    "access": null,
    "description": "Start a choice recognition from streaming audio.",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition>} A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChoiceChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The choice challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "trim",
        "description": "Whether to trim the start and end of recorded audio."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceChallenge} parameter is required or invalid."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a recognition session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during analysis."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 19,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceRecognition",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getChoiceRecognition",
    "access": null,
    "description": "Get a choice recognition in a choice challenge from the current active {@link Organisation} derived from\nthe OAuth2 scope.",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition>} Promise containing a ChoiceRecognition."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "recognitionId",
        "description": "Specify a choice recognition identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition>"
      ],
      "spread": false,
      "description": "Promise containing a ChoiceRecognition."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceRecognition#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 20,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceRecognitions",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getChoiceRecognitions",
    "access": null,
    "description": "Get and return all choice recognitions in a specific {@link ChoiceChallenge} from the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition[]>} Promise containing an array of ChoiceRecognitions."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge to list speech recognitions for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of ChoiceRecognitions."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link ChoiceChallenge#id} is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 21,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createOrganisation",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createOrganisation",
    "access": null,
    "description": "Create an organisation. The organisation will be owned by the current active tenant.",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation>} Promise containing the newly created Organisation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Organisation"
        ],
        "spread": false,
        "optional": false,
        "name": "organisation",
        "description": "Object to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation>"
      ],
      "spread": false,
      "description": "Promise containing the newly created Organisation."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "organisation field of type \"Organisation\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 22,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOrganisation",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getOrganisation",
    "access": null,
    "description": "Get an organisation. You can only get an organisation the current tenant is the owner of.",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation>} Promise containing an Organisation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "organisationId",
        "description": "Specify an organisation identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation>"
      ],
      "spread": false,
      "description": "Promise containing an Organisation."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link Organisation#id} field of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 23,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOrganisations",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getOrganisations",
    "access": null,
    "description": "Get and return all organisations the current tenant is the owner of.",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation[]>} Promise containing an array of Organisations."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Organisations."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 24,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingPronunciationAnalysis",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#startStreamingPronunciationAnalysis",
    "access": null,
    "description": "Start a pronunciation analysis from streaming audio.",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis>} A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PronunciationChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The pronunciation challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "trim",
        "description": "Whether to trim the start and end of recorded audio (default: true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge is not an object or not defined."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge has no id."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during analysis."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      },
      {
        "types": [
          "Object"
        ],
        "description": "When the sent audio has finished alignment. Aligning audio is the process of mapping the audio\nto spoken words and determining when what is said. An object is sent containing a property 'progress',\nwhich is the sent audio alignment, and a property 'referenceAlignment' which is the alignment of the\nreference audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 25,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationAnalysis",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getPronunciationAnalysis",
    "access": null,
    "description": "Get a pronunciation analysis in a pronunciation challenge from the current active {@link Organisation} derived\nfrom the OAuth2 scope.",
    "lineNumber": 186,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis>} Promise containing a PronunciationAnalysis."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "analysisId",
        "description": "Specify a pronunciation analysis identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis>"
      ],
      "spread": false,
      "description": "Promise containing a PronunciationAnalysis."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationAnalysis#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 26,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationAnalyses",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getPronunciationAnalyses",
    "access": null,
    "description": "Get and return all pronunciation analyses in a specific pronunciation challenge from the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis[]>} Promise containing an array PronunciationAnalyses."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier to list\nspeech recordings for."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "detailed",
        "description": "Returns extra analysis metadata when true."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis[]>"
      ],
      "spread": false,
      "description": "Promise containing an array PronunciationAnalyses."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 27,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPronunciationChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createPronunciationChallenge",
    "access": null,
    "description": "Create a pronunciation challenge. The created challenge will be part of the current active {@link Organisation}\nderived from the OAuth2 scope.",
    "lineNumber": 214,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the newly created PronunciationChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PronunciationChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "Object to create.."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the newly created PronunciationChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#referenceAudio} of type \"Blob\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 28,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getPronunciationChallenge",
    "access": null,
    "description": "Get a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 226,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing a PronunciationChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing a PronunciationChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 29,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationChallenges",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getPronunciationChallenges",
    "access": null,
    "description": "Get and return all pronunciation challenges in the current active {@link Organisation} derived from\nthe OAuth2 scope.",
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge[]>} Promise containing an array of PronunciationChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of PronunciationChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 30,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deletePronunciationChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#deletePronunciationChallenge",
    "access": null,
    "description": "Delete a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the given challenge ID."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "A pronunciation challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the given challenge ID."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 31,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createSpeechChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createSpeechChallenge",
    "access": null,
    "description": "Create a speech challenge in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 261,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the newly created SpeechChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpeechChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "speechChallenge",
        "description": "Object to create."
      },
      {
        "nullable": true,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "audioBlob",
        "description": "Audio fragment to link to the challenge."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the newly created SpeechChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 32,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechChallenge",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getSpeechChallenge",
    "access": null,
    "description": "Get a speech challenge from the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 273,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing a SpeechChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing a SpeechChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 33,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechChallenges",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getSpeechChallenges",
    "access": null,
    "description": "Get and return all speech challenges in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 283,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechChallenge[]>} Promise containing an array of SpeechChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechChallenge[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of SpeechChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 34,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingSpeechRecording",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#startStreamingSpeechRecording",
    "access": null,
    "description": "Start a speech recording from streaming audio.",
    "lineNumber": 301,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording>} A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpeechChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The speech challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge is not an object or not defined."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge has no id."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during recording."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 35,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechRecording",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getSpeechRecording",
    "access": null,
    "description": "Get a speech recording in a speech challenge from the current active {@link Organisation} derived from the OAuth2\nscope.",
    "lineNumber": 316,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording>} Promise containing a SpeechRecording."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "recordingId",
        "description": "Specify a speech recording identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording>"
      ],
      "spread": false,
      "description": "Promise containing a SpeechRecording."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechRecording#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 36,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechRecordings",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getSpeechRecordings",
    "access": null,
    "description": "Get and return all speech recordings in a specific speech challenge from the current active {@link Organisation}\nderived from the OAuth2 scope.",
    "lineNumber": 329,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording[]>} Promise containing an array of SpeechRecordings."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier to list speech recordings for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of SpeechRecordings."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 37,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createUser",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createUser",
    "access": null,
    "description": "Create a user. The user will be created in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 341,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} Promise containing the newly created User."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "User to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "Promise containing the newly created User."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "user parameter of type \"User\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 38,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUser",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getUser",
    "access": null,
    "description": "Get a user in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 353,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} Promise containing a User."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "Specify a user identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "Promise containing a User."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "userId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 39,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentUser",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getCurrentUser",
    "access": null,
    "description": "Get the current authenticated user.",
    "lineNumber": 363,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} The current authenticated user."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "The current authenticated user."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong in the server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 40,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUsers",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getUsers",
    "access": null,
    "description": "Get and return all users in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 373,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User[]>} Promise containing an array of Users."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Users."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 41,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createEmailCredentials",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#createEmailCredentials",
    "access": null,
    "description": "Register credentials to the given user. Multiple credentials can be registered to one user.",
    "lineNumber": 387,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<EmailCredentials>} A promise containing the created EmailCredentials."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The identifier of the user to register credentials to."
      },
      {
        "nullable": null,
        "types": [
          "EmailCredentials"
        ],
        "spread": false,
        "optional": false,
        "name": "emailCredentials",
        "description": "The credentials to register to the user."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<EmailCredentials>"
      ],
      "spread": false,
      "description": "A promise containing the created EmailCredentials."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "UserId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "EmailCredentials parameter of type \"EmailCredentials\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 42,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRoles",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getRoles",
    "access": null,
    "description": "Get and return all roles available in the API.",
    "lineNumber": 397,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Role[]>} Promise containing an array of Roles."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Role[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Roles."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 43,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRole",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getRole",
    "access": null,
    "description": "Get a single role.",
    "lineNumber": 409,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Role>} Promise containing a Role."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "roleId",
        "description": "Identifier of the role."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Role>"
      ],
      "spread": false,
      "description": "Promise containing a Role."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "roleId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 44,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProfile",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getProfile",
    "access": null,
    "description": "Get the profile of the given user active in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 421,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Profile>} Promise containing a Profile."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "Specify a User identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Profile>"
      ],
      "spread": false,
      "description": "Promise containing a Profile."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "userId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 45,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProfiles",
    "memberof": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK",
    "longname": "src/administrative-sdk/administrative-sdk.js~AdministrativeSDK#getProfiles",
    "access": null,
    "description": "Get and return all profiles of all users in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 431,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Profile[]>} Array of Profiles."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Profile[]>"
      ],
      "spread": false,
      "description": "Array of Profiles."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 46,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/basic-auth/basic-auth.js",
    "memberof": null,
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * BasicAuth domain model.\n */\nexport default class BasicAuth {\n  /**\n   * @param {string} tenantId - The Tenant identifier to create this BasicAuth for.\n   * @param {?string} principal - The principal. If none is given, one is generated.\n   * @param {?string} credentials - The credentials. If none are given, one is generated.\n   * @throws {Error} tenantId parameter of type \"string\" is required.\n   * @throws {Error} principal parameter of type \"string|null\" is required.\n   * @throws {Error} credentials parameter of type \"string|null\" is required.\n   */\n  constructor(tenantId, principal = null, credentials = null) {\n    if (typeof tenantId !== 'string') {\n      throw new Error(\n        'tenantId parameter of type \"string\" is required');\n    }\n\n    if (principal !== null && typeof principal !== 'string') {\n      throw new Error(\n        'principal parameter of type \"string|null\" is required');\n    }\n\n    if (credentials !== null && typeof credentials !== 'string') {\n      throw new Error(\n        'credentials parameter of type \"string|null\" is required');\n    }\n\n    /**\n     * The Tenant identifier to create this BasicAuth for.\n     * @type {string}\n     */\n    this.tenantId = tenantId;\n\n    /**\n     * The principal. If none is given, one is generated.\n     * @type {string}\n     */\n    this.principal = principal;\n\n    /**\n     * The credentials. If none are given, one is generated.\n     * @type {string}\n     */\n    this.credentials = credentials;\n  }\n}\n"
  },
  {
    "__docId__": 47,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BasicAuth",
    "memberof": "src/administrative-sdk/basic-auth/basic-auth.js",
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/basic-auth/basic-auth.js",
    "importStyle": "BasicAuth",
    "description": "BasicAuth domain model.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 48,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth",
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth#constructor",
    "access": null,
    "description": "",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "tenantId",
        "description": "The Tenant identifier to create this BasicAuth for."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "principal",
        "description": "The principal. If none is given, one is generated."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "credentials",
        "description": "The credentials. If none are given, one is generated."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "tenantId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "principal parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "credentials parameter of type \"string|null\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 49,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tenantId",
    "memberof": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth",
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth#tenantId",
    "access": null,
    "description": "The Tenant identifier to create this BasicAuth for.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "principal",
    "memberof": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth",
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth#principal",
    "access": null,
    "description": "The principal. If none is given, one is generated.",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "credentials",
    "memberof": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth",
    "longname": "src/administrative-sdk/basic-auth/basic-auth.js~BasicAuth#credentials",
    "access": null,
    "description": "The credentials. If none are given, one is generated.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/category/category.js",
    "memberof": null,
    "longname": "src/administrative-sdk/category/category.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Progress from '../progress/progress';\n\n/**\n * A category for a challenge.\n * It is used to give a challenge front end attributes such as an icon, a color palette etc.\n */\nexport default class Category {\n  /**\n   * Create a category.\n   *\n   * @param {?string} id - Identifier of this category. If none is given one is generated upon creation in the API.\n   * @param {string} name - Name associated with this category.\n   * @param {?string} description - Description associated with this category.\n   * @param {?string} color - Color associated with this category.\n   * @param {?string} image - Image associated with this category.\n   * @param {string} icon - Icon associated with this category.\n   * @param {?Array.<Category>} categories - Other categories this category contains. A category can only contain\n   * either more categories or challenges.\n   * @param {?Array.<SpeechChallenge>} speechChallenges - Challenges this category contains. A category can only contain\n   * either more categories or challenges.\n   * @param {?Progress} progress - Progress values of this category.\n   * @throws {Error} id parameter of type \"string|null\" is required.\n   * @throws {Error} name parameter of type \"string\" is required.\n   * @throws {Error} description parameter of type \"string\" is required.\n   * @throws {Error} color parameter of type \"string\" is required.\n   * @throws {Error} image parameter of type \"string\" is required.\n   * @throws {Error} icon parameter of type \"string\" is required.\n   * @throws {Error} categories parameter of type \"Array.<Category>|null\" is required.\n   * @throws {Error} speechChallenges parameter of type \"Array.<SpeechChallenge>|null\" is required.\n   * @throws {Error} progress parameter of type \"Progress\" is required.\n   */\n  constructor(id = null, name, description = null, color = null, image = null, icon = null, categories,\n              speechChallenges, progress = null) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error('id parameter of type \"string|null\" is required');\n    }\n\n    if (typeof name !== 'string') {\n      throw new Error('name parameter of type \"string\" is required');\n    }\n\n    if (description !== null && typeof description !== 'string') {\n      throw new Error('description parameter of type \"string|null\" is required');\n    }\n\n    if (color !== null && typeof color !== 'string') {\n      throw new Error('color parameter of type \"string|null\" is required');\n    }\n\n    if (image !== null && typeof image !== 'string') {\n      throw new Error('image parameter of type \"string|null\" is required');\n    }\n\n    if (icon !== null && typeof icon !== 'string') {\n      throw new Error('icon parameter of type \"string|null\" is required');\n    }\n\n    if (categories !== null && (!Array.isArray(categories) || categories.length === 0)) {\n      throw new Error('categories parameter of type \"Array.<Category>|null\" is required');\n    }\n\n    if (speechChallenges !== null && (!Array.isArray(speechChallenges) || speechChallenges.length === 0)) {\n      throw new Error('speechChallenges parameter of type \"Array.<SpeechChallenge>|null\" is required');\n    }\n\n    if (progress !== null && !(progress instanceof Progress)) {\n      throw new Error('progress parameter of type \"Progress|null\" is required');\n    }\n\n    /**\n     * Identifier of this category. If none is given one is generated upon creation in the API.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * Name associated with this category.\n     * @type {string}\n     */\n    this.name = name;\n\n    /**\n     * Description associated with this category.\n     * @type {string}\n     */\n    this.description = description;\n\n    /**\n     * Color associated with this category.\n     * @type {string}\n     */\n    this.color = color;\n\n    /**\n     * Image associated with this category.\n     * @type {string}\n     */\n    this.image = image;\n\n    /**\n     * Icon associated with this category.\n     * @type {string}\n     */\n    this.icon = icon;\n\n    /**\n     * Other categories this category contains. A category can only contain either more categories or challenges.\n     * @type {Array.<Category>}\n     */\n    this.categories = categories;\n\n    /**\n     * Challenges this category contains. A category can only contain either more categories or challenges.\n     * @type {Array.<SpeechChallenge>}\n     */\n    this.speechChallenges = speechChallenges;\n\n    /**\n     * Progress values of this category.\n     * @type {Progress}\n     */\n    this.progress = progress;\n  }\n}\n"
  },
  {
    "__docId__": 53,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Category",
    "memberof": "src/administrative-sdk/category/category.js",
    "longname": "src/administrative-sdk/category/category.js~Category",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/category/category.js",
    "importStyle": "Category",
    "description": "A category for a challenge.\nIt is used to give a challenge front end attributes such as an icon, a color palette etc.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 54,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#constructor",
    "access": null,
    "description": "Create a category.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "Identifier of this category. If none is given one is generated upon creation in the API."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name associated with this category."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "Description associated with this category."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "color",
        "description": "Color associated with this category."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "Image associated with this category."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "icon",
        "description": "Icon associated with this category."
      },
      {
        "nullable": true,
        "types": [
          "Array.<Category>"
        ],
        "spread": false,
        "optional": false,
        "name": "categories",
        "description": "Other categories this category contains. A category can only contain\neither more categories or challenges."
      },
      {
        "nullable": true,
        "types": [
          "Array.<SpeechChallenge>"
        ],
        "spread": false,
        "optional": false,
        "name": "speechChallenges",
        "description": "Challenges this category contains. A category can only contain\neither more categories or challenges."
      },
      {
        "nullable": true,
        "types": [
          "Progress"
        ],
        "spread": false,
        "optional": false,
        "name": "progress",
        "description": "Progress values of this category."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "id parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "name parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "description parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "color parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "image parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "icon parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "categories parameter of type \"Array.<Category>|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "speechChallenges parameter of type \"Array.<SpeechChallenge>|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "progress parameter of type \"Progress\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 55,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#id",
    "access": null,
    "description": "Identifier of this category. If none is given one is generated upon creation in the API.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#name",
    "access": null,
    "description": "Name associated with this category.",
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "description",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#description",
    "access": null,
    "description": "Description associated with this category.",
    "lineNumber": 86,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "color",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#color",
    "access": null,
    "description": "Color associated with this category.",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "image",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#image",
    "access": null,
    "description": "Image associated with this category.",
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "icon",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#icon",
    "access": null,
    "description": "Icon associated with this category.",
    "lineNumber": 104,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "categories",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#categories",
    "access": null,
    "description": "Other categories this category contains. A category can only contain either more categories or challenges.",
    "lineNumber": 110,
    "type": {
      "nullable": null,
      "types": [
        "Array.<Category>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "speechChallenges",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#speechChallenges",
    "access": null,
    "description": "Challenges this category contains. A category can only contain either more categories or challenges.",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "Array.<SpeechChallenge>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "progress",
    "memberof": "src/administrative-sdk/category/category.js~Category",
    "longname": "src/administrative-sdk/category/category.js~Category#progress",
    "access": null,
    "description": "Progress values of this category.",
    "lineNumber": 122,
    "type": {
      "nullable": null,
      "types": [
        "Progress"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import ChoiceChallenge from './choice-challenge';\n\n/**\n * Controller class for the {@link ChoiceChallenge} model.\n * @private\n */\nexport default class ChoiceChallengeController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create a choice challenge. The choice challenge will be created in the current active {@link Organisation} derived\n   * from the OAuth2 scope.\n   * It is necessary for a choice challenge to exist for a recording to be valid.\n   *\n   * @param {ChoiceChallenge} choiceChallenge - Object to create.\n   * @returns {Promise.<ChoiceChallenge>} Containing the newly created ChoiceChallenge.\n   * @throws {Promise.<Error>} choiceChallenge parameter of type \"ChoiceChallenge\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createChoiceChallenge(choiceChallenge) {\n    if (!(choiceChallenge instanceof ChoiceChallenge)) {\n      return Promise.reject(new Error('choiceChallenge parameter of type \"ChoiceChallenge\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/choice';\n    const fd = JSON.stringify(choiceChallenge);\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new ChoiceChallenge(data.id, data.question, data.choices);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        result.status = data.status;\n        data.choices.forEach(pair => {\n          result.choices.push(pair.choice);\n        });\n        return result;\n      });\n  }\n\n  /**\n   * Get a choice challenge. A choice challenge is identified by its identifier and the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge identifier.\n   * @returns {Promise.<ChoiceChallenge>} Containing a ChoiceChallenge.\n   * @throws {Promise.<Error>} challengeId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceChallenge(challengeId) {\n    if (typeof challengeId !== 'string') {\n      return Promise.reject(new Error('challengeId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/choice/' + challengeId;\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenge = new ChoiceChallenge(data.id, data.question, data.choices);\n        challenge.created = new Date(data.created);\n        challenge.updated = new Date(data.updated);\n        challenge.status = data.status;\n        challenge.choices = [];\n        data.choices.forEach(pair => {\n          challenge.choices.push(pair.choice);\n        });\n        return challenge;\n      });\n  }\n\n  /**\n   * Get and return all choice challenges in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<ChoiceChallenge[]>} Containing an array of ChoiceChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceChallenges() {\n    const url = this._connection._settings.apiUrl + '/challenges/choice';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenges = [];\n        data.forEach(datum => {\n          const challenge = new ChoiceChallenge(datum.id, datum.question, datum.choices);\n          challenge.created = new Date(datum.created);\n          challenge.updated = new Date(datum.updated);\n          challenge.status = datum.status;\n          challenge.choices = [];\n          datum.choices.forEach(pair => {\n            challenge.choices.push(pair.choice);\n          });\n          challenges.push(challenge);\n        });\n        return challenges;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 65,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChoiceChallengeController",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/choice-challenge/choice-challenge-controller.js",
    "importStyle": "ChoiceChallengeController",
    "description": "Controller class for the {@link ChoiceChallenge} model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 67,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createChoiceChallenge",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController#createChoiceChallenge",
    "access": null,
    "description": "Create a choice challenge. The choice challenge will be created in the current active {@link Organisation} derived\nfrom the OAuth2 scope.\nIt is necessary for a choice challenge to exist for a recording to be valid.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge>} Containing the newly created ChoiceChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChoiceChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "choiceChallenge",
        "description": "Object to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge>"
      ],
      "spread": false,
      "description": "Containing the newly created ChoiceChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "choiceChallenge parameter of type \"ChoiceChallenge\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 69,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceChallenge",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController#getChoiceChallenge",
    "access": null,
    "description": "Get a choice challenge. A choice challenge is identified by its identifier and the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 57,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge>} Containing a ChoiceChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge>"
      ],
      "spread": false,
      "description": "Containing a ChoiceChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challengeId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 70,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceChallenges",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge-controller.js~ChoiceChallengeController#getChoiceChallenges",
    "access": null,
    "description": "Get and return all choice challenges in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 82,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceChallenge[]>} Containing an array of ChoiceChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceChallenge[]>"
      ],
      "spread": false,
      "description": "Containing an array of ChoiceChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 71,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/choice-challenge/choice-challenge.js",
    "memberof": null,
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * ChoiceChallenge domain model.\n */\nexport default class ChoiceChallenge {\n  /**\n   * Create a choice challenge domain model.\n   *\n   * @param {?string} id - The {@link ChoiceChallenge} identifier. If none is given, one is generated.\n   * @param {?string} question - A hint or question related to the choices.\n   * @param {string[]} choices - The sentences of which at most one may be recognised.\n   * @throws {Error} id parameter of type \"string|null\" is required.\n   * @throws {Error} question parameter of type \"string|null|undefined\" is required.\n   * @throws {Error} choices parameter of type \"Array.<string>\" is required.\n   */\n  constructor(id = null, question = null, choices) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error(\n        'id parameter of type \"string|null\" is required');\n    }\n\n    if (question !== null && typeof question !== 'string') {\n      throw new Error(\n        'question parameter of type \"string|null\" is required');\n    }\n\n    if (!Array.isArray(choices)) {\n      throw new Error(\n        'choices parameter of type \"Array.<string>\" is required');\n    }\n\n    /**\n     * The choice challenge identifier.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * A hint or question related to the choices.\n     * @type {string}\n     */\n    this.question = question;\n\n    /**\n     * The sentences of which at most one may be recognised.\n     * @type {string[]}\n     */\n    this.choices = choices;\n\n    /**\n     * The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'.\n     * @type {string}\n     */\n    this.status = null;\n  }\n}\n"
  },
  {
    "__docId__": 72,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChoiceChallenge",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/choice-challenge/choice-challenge.js",
    "importStyle": "ChoiceChallenge",
    "description": "ChoiceChallenge domain model.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 73,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge#constructor",
    "access": null,
    "description": "Create a choice challenge domain model.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The {@link ChoiceChallenge} identifier. If none is given, one is generated."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "question",
        "description": "A hint or question related to the choices."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "choices",
        "description": "The sentences of which at most one may be recognised."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "id parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "question parameter of type \"string|null|undefined\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "choices parameter of type \"Array.<string>\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 74,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge#id",
    "access": null,
    "description": "The choice challenge identifier.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "question",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge#question",
    "access": null,
    "description": "A hint or question related to the choices.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "choices",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge#choices",
    "access": null,
    "description": "The sentences of which at most one may be recognised.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "status",
    "memberof": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge",
    "longname": "src/administrative-sdk/choice-challenge/choice-challenge.js~ChoiceChallenge#status",
    "access": null,
    "description": "The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'.",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Base64Utils from '../utils/base64-utils';\nimport ChoiceChallenge from '../choice-challenge/choice-challenge';\nimport ChoiceRecognition from './choice-recognition';\nimport Connection from '../connection/connection-controller';\nimport when from 'when';\n/**\n * Controller class for the ChoiceRecognition model.\n * @private\n */\nexport default class ChoiceRecognitionController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Initialise the choice recognition challenge through RPCs.\n   *\n   * @param {ChoiceChallenge} challenge - ChoiceChallenge.\n   * @private\n   */\n  choiceRecognitionInitChallenge(challenge) {\n    return this._connection._session.call('nl.itslanguage.choice.init_challenge',\n      [this._connection._recognitionId, challenge.id])\n      .then(\n        // RPC success callback\n        recognitionId => {\n          console.log('Challenge initialised for recognitionId: ' + this._connection._recognitionId);\n          return recognitionId;\n        });\n  }\n\n  /**\n   * Initialise the pronunciation analysis audio specs through RPCs.\n   *\n   * @param {AudioRecorder} recorder - AudioRecorder.\n   * @param {Function} dataavailableCb - Callback.\n   * @private\n   */\n  choiceRecognitionInitAudio(recorder, dataavailableCb) {\n    // Indicate to the socket server that we're about to start recording a\n    // challenge. This allows the socket server some time to fetch the metadata\n    // and reference audio to start the analysis when audio is actually submitted.\n    const specs = recorder.getAudioSpecs();\n    return this._connection._session.call('nl.itslanguage.choice.init_audio',\n      [this._connection._recognitionId, specs.audioFormat], specs.audioParameters).then(\n      // RPC success callback\n      recognitionId => {\n        console.log('Accepted audio parameters for recognitionId after init_audio: ' + this._connection._recognitionId);\n        // Start listening for streaming data.\n        recorder.addEventListener('dataavailable', dataavailableCb);\n        return recognitionId;\n      });\n  }\n\n  /**\n   * Start a choice recognition from streaming audio.\n   *\n   * @param {ChoiceChallenge} challenge - The choice challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @param {boolean} [trim=true] - Whether to trim the start and end of recorded audio.\n   * @returns {Promise.<ChoiceRecognition>} A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @throws {Promise.<Error>} challenge parameter of type \"ChoiceChallenge\" is required.\n   * @throws {Promise.<Error>} challenge.id field of type \"string\" is required.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a recognition session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during analysis.\n   */\n  startStreamingChoiceRecognition(challenge, recorder, trim) {\n    if (!(challenge instanceof ChoiceChallenge)) {\n      return Promise.reject(new Error('challenge parameter of type \"ChoiceChallenge\" is required'));\n    }\n\n    if (typeof challenge.id !== 'string') {\n      return Promise.reject(new Error('challenge.id field of type \"string\" is required'));\n    }\n\n    // Validate environment prerequisites.\n    if (!this._connection._session) {\n      return Promise.reject(new Error('WebSocket connection was not open.'));\n    }\n\n    if (recorder.isRecording()) {\n      return Promise.reject(new Error('Recorder should not yet be recording.'));\n    }\n\n    if (this._connection._recognitionId !== null) {\n      return Promise.reject(new Error('Session with recognitionId ' + this._connection._recognitionId +\n        ' still in progress.'));\n    }\n\n    const self = this;\n    let trimAudioStart = 0.15;\n    const trimAudioEnd = 0.0;\n    if (trim === false) {\n      trimAudioStart = 0.0;\n    }\n    return new when.Promise((resolve, reject, notify) => {\n      function _cb(data) {\n        const recognition = new ChoiceRecognition(\n          challenge.id, data.userId, data.id,\n          new Date(data.created), new Date(data.updated),\n          self._connection.addAccessToken(data.audioUrl), data.recognised);\n        resolve({recognitionId: self._connection._recognitionId, recognition});\n      }\n\n      function _ecb(data) {\n        // There was an unexpected error.\n        const recognition = new ChoiceRecognition(\n          challenge.id, data.userId, data.id,\n          new Date(data.created), new Date(data.updated),\n          self._connection.addAccessToken(data.audioUrl), null);\n        reject(\n          {\n            recognition,\n            message: data.message\n          }\n        );\n      }\n\n      self._connection._recognitionId = null;\n\n      // Start streaming the binary audio when the user instructs\n      // the audio recorder to start recording.\n      function dataavailableCb(chunk) {\n        const encoded = Base64Utils._arrayBufferToBase64(chunk);\n        console.log('Sending audio chunk to websocket for recognitionId: ' +\n          self._connection._recognitionId);\n        self._connection._session.call('nl.itslanguage.choice.write',\n          [self._connection._recognitionId, encoded, 'base64']).then(\n          // RPC success callback\n          res => {\n            console.debug('Delivered audio successfully');\n            return res;\n          },\n          // RPC error callback\n          res => {\n            console.error('RPC error returned:', res.error);\n            _ecb(res);\n          }\n        );\n      }\n\n      function recognitionInitCb(recognitionId) {\n        self._connection._recognitionId = recognitionId;\n        console.log('Got recognitionId after initialisation: ' + self._connection._recognitionId);\n      }\n      self._connection._session.call('nl.itslanguage.choice.init_recognition', [],\n        {\n          trimStart: trimAudioStart,\n          trimEnd: trimAudioEnd\n        })\n        .then(recognitionInitCb)\n        .then(() =>\n          self.choiceRecognitionInitChallenge(challenge)\n            .then(() => {\n              const p = new Promise(resolve_ => {\n                if (recorder.hasUserMediaApproval()) {\n                  resolve_();\n                } else {\n                  recorder.addEventListener('ready', resolve_);\n                }\n              });\n              p.then(() => {\n                self.choiceRecognitionInitAudio(recorder, dataavailableCb)\n                  .catch(reject);\n              });\n            })\n            .then(() => notify('ReadyToReceive'))\n        )\n            .catch(reject);\n\n      // Stop listening when the audio recorder stopped.\n      function recordedCb() {\n        // When done, submit any plain text (non-JSON) to start analysing.\n        self._connection._session.call('nl.itslanguage.choice.recognise',\n          [self._connection._recognitionId]).then(\n          // RPC success callback\n          res => {\n            // Wait for analysis results to come back.\n            _cb(res);\n          },\n          // RPC error callback\n          res => {\n            console.error('RPC error returned:', res.error);\n            if (res.error === 'nl.itslanguage.recognition_failed') {\n              res.kwargs.recognition.message = 'Recognition failed';\n            } else {\n              res.kwargs.recognition.message = 'Unhandled error';\n            }\n            _ecb(res.kwargs.analysis);\n          });\n\n        recorder.removeEventListener('recorded', recordedCb);\n        recorder.removeEventListener('dataavailable', dataavailableCb);\n      }\n      recorder.addEventListener('recorded', recordedCb);\n    })\n      .then(res => {\n        self._connection._recognitionId = null;\n        return Promise.resolve(res);\n      })\n      .catch(error => {\n        self._connection._recognitionId = null;\n        Connection.logRPCError(error);\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Get a choice recognition in a choice challenge from the current active {@link Organisation} derived from\n   * the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge identifier.\n   * @param {string} recognitionId - Specify a choice recognition identifier.\n   * @returns {Promise.<ChoiceRecognition>} Promise containing a ChoiceRecognition.\n   * @throws {Promise.<Error>} challengeId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} recognitionId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceRecognition(challengeId, recognitionId) {\n    if (typeof challengeId !== 'string') {\n      return Promise.reject(new Error('challengeId parameter of type \"string\" is required'));\n    }\n\n    if (typeof recognitionId !== 'string') {\n      return Promise.reject(new Error('recognitionId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/choice/' +\n      challengeId + '/recognitions/' + recognitionId;\n\n    return this._connection._secureAjaxGet(url)\n      .then(datum => new ChoiceRecognition(challengeId, datum.userId,\n          datum.id, new Date(datum.created), new Date(datum.updated),\n          datum.audioUrl, datum.recognised));\n  }\n\n  /**\n   * Get and return all choice recognitions in a specific {@link ChoiceChallenge} from the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a choice challenge to list speech recognitions for.\n   * @returns {Promise.<ChoiceRecognition[]>} Promise containing an array of ChoiceRecognitions.\n   * @throws {Promise.<Error>} challengeId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getChoiceRecognitions(challengeId) {\n    if (typeof challengeId !== 'string') {\n      return Promise.reject(new Error('challengeId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/choice/' +\n      challengeId + '/recognitions';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const recognitions = [];\n        data.forEach(datum => {\n          const recognition = new ChoiceRecognition(challengeId, datum.userId,\n            datum.id, new Date(datum.created), new Date(datum.updated),\n            datum.audioUrl, datum.recognised);\n          recognitions.push(recognition);\n        });\n        return recognitions;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 79,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChoiceRecognitionController",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/choice-recognition/choice-recognition-controller.js",
    "importStyle": "ChoiceRecognitionController",
    "description": "Controller class for the ChoiceRecognition model.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 80,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 81,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "choiceRecognitionInitChallenge",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#choiceRecognitionInitChallenge",
    "access": "private",
    "description": "Initialise the choice recognition challenge through RPCs.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "ChoiceChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "ChoiceChallenge."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 83,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "choiceRecognitionInitAudio",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#choiceRecognitionInitAudio",
    "access": "private",
    "description": "Initialise the pronunciation analysis audio specs through RPCs.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "AudioRecorder."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "dataavailableCb",
        "description": "Callback."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 84,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingChoiceRecognition",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#startStreamingChoiceRecognition",
    "access": null,
    "description": "Start a choice recognition from streaming audio.",
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition>} A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "ChoiceChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The choice challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "trim",
        "description": "Whether to trim the start and end of recorded audio."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link ChoiceRecognition}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challenge parameter of type \"ChoiceChallenge\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challenge.id field of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a recognition session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during analysis."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 85,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceRecognition",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#getChoiceRecognition",
    "access": null,
    "description": "Get a choice recognition in a choice challenge from the current active {@link Organisation} derived from\nthe OAuth2 scope.",
    "lineNumber": 229,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition>} Promise containing a ChoiceRecognition."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "recognitionId",
        "description": "Specify a choice recognition identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition>"
      ],
      "spread": false,
      "description": "Promise containing a ChoiceRecognition."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challengeId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "recognitionId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 86,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getChoiceRecognitions",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition-controller.js~ChoiceRecognitionController#getChoiceRecognitions",
    "access": null,
    "description": "Get and return all choice recognitions in a specific {@link ChoiceChallenge} from the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 255,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<ChoiceRecognition[]>} Promise containing an array of ChoiceRecognitions."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a choice challenge to list speech recognitions for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<ChoiceRecognition[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of ChoiceRecognitions."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challengeId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 87,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/choice-recognition/choice-recognition.js",
    "memberof": null,
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * ChoiceRecognition domain model.\n */\nexport default class ChoiceRecognition {\n  /**\n   * Create a choice recognition domain model.\n   *\n   * @param {string} challengeId - The {@link ChoiceChallenge} identifier.\n   * @param {string} userId - The {@link User} identifier on whose behalf this audio is uploaded.\n   * @param {string} id - The {@link ChoiceRecognition} identifier.\n   * @param {Date} created - The creation date of the entity.\n   * @param {Date} updated - The most recent update date of the entity.\n   * @param {string} audioUrl - The audio fragment as streaming audio link.\n   * @param {string} recognised - The recognised sentence.\n   */\n  constructor(challengeId, userId, id, created, updated, audioUrl, recognised) {\n    /**\n     *\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     *\n     * @type {string}\n     */\n    this.challengeId = challengeId;\n\n    /**\n     *\n     * @type {string}\n     */\n    this.userId = userId;\n\n    /**\n     *\n     * @type {Date}\n     */\n    this.created = created;\n\n    /**\n     *\n     * @type {Date}\n     */\n    this.updated = updated;\n\n    /**\n     *\n     * @type {string}\n     */\n    this.audioUrl = audioUrl;\n\n    /**\n     *\n     * @type {string}\n     */\n    this.recognised = recognised;\n  }\n}\n"
  },
  {
    "__docId__": 88,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ChoiceRecognition",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/choice-recognition/choice-recognition.js",
    "importStyle": "ChoiceRecognition",
    "description": "ChoiceRecognition domain model.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 89,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#constructor",
    "access": null,
    "description": "Create a choice recognition domain model.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "The {@link ChoiceChallenge} identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The {@link User} identifier on whose behalf this audio is uploaded."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The {@link ChoiceRecognition} identifier."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "created",
        "description": "The creation date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "updated",
        "description": "The most recent update date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "audioUrl",
        "description": "The audio fragment as streaming audio link."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "recognised",
        "description": "The recognised sentence."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 90,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#id",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "challengeId",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#challengeId",
    "access": null,
    "description": "",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userId",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#userId",
    "access": null,
    "description": "",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#created",
    "access": null,
    "description": "",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "updated",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#updated",
    "access": null,
    "description": "",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "audioUrl",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#audioUrl",
    "access": null,
    "description": "",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recognised",
    "memberof": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition",
    "longname": "src/administrative-sdk/choice-recognition/choice-recognition.js~ChoiceRecognition#recognised",
    "access": null,
    "description": "",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/connection/connection-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/connection/connection-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/* eslint-disable\ncamelcase\n */\n\nimport autobahn from 'autobahn';\nimport ee from 'event-emitter';\n/**\n * Controller class for managing connection interaction.\n */\nexport default class Connection {\n\n  /**\n   *\n   * @param {Object} options - Options to configure the connection with.\n   * Valid options include:\n   * * apiUrl - The URL of the REST api.\n   * * wsUrl - The URL of the Websocket server.\n   * * oAuth2Token - An OAuth2 token string.\n   * * adminPrincipal - The username of the admin account.\n   * * adminPassword - The password of the admin account.\n   */\n  constructor(options) {\n    /**\n     * @type {Object}\n     */\n    this._settings = Object.assign({\n      // ITSL connection parameters.\n      apiUrl: 'https://api.itslanguage.nl',\n      oAuth2Token: null,\n      wsUrl: null,\n      wsToken: null\n    }, options);\n    Connection._sdkCompatibility();\n    this._analysisId = null;\n    this._recordingId = null;\n    this._recognitionId = null;\n    this._emitter = ee({});\n    this._connection = null;\n  }\n\n  /**\n   * Add an event listener. Listens to events emitted from the websocket server connection.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to add.\n   */\n  addEventListener(name, handler) {\n    this._emitter.on(name, handler);\n  }\n\n  /**\n   * Remove an event listener of the websocket connection.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to remove.\n   */\n  removeEventListener(name, handler) {\n    this._emitter.off(name, handler);\n  }\n\n  /**\n   * Fire an event.\n   *\n   * @param {string} name - Name of the event.\n   * @param {[]} args - Arguments.\n   * @private\n   */\n  fireEvent(name, args = []) {\n    this._emitter.emit(name, ...args);\n  }\n\n  /**\n   * Assemble a HTTP Authentication header.\n   *\n   * @returns {Promise.<string>} Promise containing an authorization header string.\n   * @throws {Promise.<Error>} If the oAuth2Token in {@link Connection#settings} is not set.\n   */\n  _getAuthHeaders() {\n    if (!this._settings.oAuth2Token) {\n      return Promise.reject('Please set oAuth2Token');\n    }\n    const authHeader = 'Bearer ' + this._settings.oAuth2Token;\n    return Promise.resolve(authHeader);\n  }\n\n  /**\n   * Create a connection to the websocket server.\n   *\n   */\n  webSocketConnect() {\n    const self = this;\n    /**\n     * This callback is fired during Ticket-based authentication.\n     *\n     * @param {Session} session - Session.\n     * @param {string} method - Authentication method.\n     */\n    function onOAuth2Challenge(session, method) {\n      if (method === 'ticket') {\n        return self._settings.oAuth2Token;\n      }\n      throw new Error(`don't know how to authenticate using '${method}'`);\n    }\n\n    const authUrl = this._settings.wsUrl;\n    let connection = null;\n    // Open a websocket connection for streaming audio\n    try {\n      // Set up WAMP connection to router\n      connection = new autobahn.Connection({\n        url: authUrl,\n        realm: 'default',\n        // the following attributes must be set for Ticket-based authentication\n        authmethods: ['ticket'],\n        authid: 'oauth2',\n        details: {\n          ticket: this._settings.oAuth2Token\n        },\n        onchallenge: onOAuth2Challenge\n      });\n    } catch (e) {\n      console.log('WebSocket creation error: ' + e);\n      return;\n    }\n    connection.onerror = function(e) {\n      console.log('WebSocket error: ' + e);\n      self.fireEvent('websocketError', [e]);\n    };\n    connection.onopen = function(session) {\n      console.log('WebSocket connection opened');\n      self._session = session;\n      const _call = self._session.call;\n      self._session.call = function(url, ...args) {\n        console.debug('Calling RPC: ' + url);\n        return _call.call(this, url, ...args);\n      };\n      self.fireEvent('websocketOpened');\n    };\n    connection.onclose = function() {\n      console.log('WebSocket disconnected');\n      self._session = null;\n      self.fireEvent('websocketClosed');\n    };\n    this._connection = connection;\n    this._connection.open();\n  }\n\n  webSocketDisconnect() {\n    this._connection.close(null, 'Requested formal disconnect');\n  }\n\n  /**\n   * Perform a HTTP GET to the API using authentication.\n   *\n   * @param {string} url - Url to retrieve.\n   * @returns {Promise} Promise containing a result.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  _secureAjaxGet(url) {\n    return this._getAuthHeaders()\n      .then(auth => {\n        const headers = new Headers();\n        headers.append('Authorization', auth);\n        const options = {\n          method: 'GET',\n          headers\n        };\n        return fetch(url, options)\n          .then(this.handleResponse);\n      });\n  }\n\n  /**\n   * Perform a HTTP POST to the API using authentication.\n   *\n   * @param {string} url - Url to submit to.\n   * @param {FormData} formdata - The form to POST.\n   * @returns {Promise} Promise containing a result.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  _secureAjaxPost(url, formdata) {\n    return this._getAuthHeaders()\n      .then(auth => {\n        const headers = new Headers();\n        headers.append('Authorization', auth);\n        if (typeof formdata === 'string') {\n          headers.append('Content-Type',\n            'application/json; charset=utf-8');\n        }\n        const options = {\n          method: 'POST',\n          headers,\n          body: formdata\n        };\n        return fetch(url, options)\n          .then(this.handleResponse);\n      });\n  }\n\n  /**\n   * Perform a HTTP DELETE to the API using authentication.\n   *\n   * @param {string} url - Url to submit to.\n   * @returns {Promise} Promise containing a result.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  _secureAjaxDelete(url) {\n    return this._getAuthHeaders()\n      .then(auth => {\n        const headers = new Headers();\n        headers.append('Authorization', auth);\n        const options = {\n          method: 'DELETE',\n          headers\n        };\n        return fetch(url, options)\n          .then(this.handleResponse);\n      });\n  }\n\n  handleResponse(response) {\n    return response.text()\n          .then(textResponse => {\n            if (response.headers.get('Content-type').includes('application/json')) {\n              const result = JSON.parse(textResponse);\n              if (response.ok) {\n                return result;\n              }\n              return Promise.reject(result);\n            } else if (!response.ok) {\n              return Promise.reject(response.status + ': ' + response.statusText);\n            }\n          });\n  }\n\n  /**\n   * Add an access token to the given URL.\n   *\n   * @param {string} url - The URL to add an access token to.\n   * @returns {string} An url with the access token appended.\n   */\n  addAccessToken(url) {\n    if (!this._settings.oAuth2Token) {\n      throw new Error('Please set oAuth2Token');\n    }\n    const secureUrl = url + (url.match(/\\?/) ? '&' : '?') + 'access_token=' +\n      encodeURIComponent(this._settings.oAuth2Token);\n    return secureUrl;\n  }\n\n  /**\n   * Logs browser compatibility for required and optional SDK capabilities.\n   *\n   * @throws {Error} In case of compatibility issues.\n   */\n  static _sdkCompatibility() {\n    // WebSocket\n    // http://caniuse.com/#feat=websockets\n    const canCreateWebSocket = 'WebSocket' in window;\n    console.log('Native WebSocket capability: ' +\n      canCreateWebSocket);\n\n    if (!canCreateWebSocket) {\n      throw new Error('No WebSocket capabilities');\n    }\n  }\n\n  /**\n   * Cancel any current streaming audio recording.\n   *\n   * @param {AudioRecorder} recorder - The audio recorder currently recording.\n   */\n  cancelStreaming(recorder) {\n    const self = this;\n\n    if (this._recordingId === null && this._analysisId === null && this._recognitionId === null) {\n      console.info('No session in progress, nothing to cancel.');\n      return;\n    }\n\n    recorder.removeAllEventListeners();\n    if (recorder.isRecording()) {\n      recorder.stop();\n    }\n\n    // This session is over.\n    self._recordingId = null;\n    self._analysisId = null;\n    self._recognitionId = null;\n  }\n\n  /**\n   * Log an error caught from an RPC call.\n   *\n   * @param {Object} result - Error object.\n   */\n  static logRPCError(result) {\n    console.error('RPC error returned:', result.error);\n  }\n\n  /**\n   * Ask the server for an OAuth2 token.\n   *\n   * @param {BasicAuth} basicAuth - Basic Auth to obtain credentials from.\n   * @param {string} organisationId - Id of the organisation to request a token for.\n   * @param {string} userId - Id of the user to request a token for.\n   * @returns {Promise} Promise containing a access_token, token_type and scope.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  getOauth2Token(basicAuth, organisationId, userId) {\n    const url = this._settings.apiUrl + '/tokens';\n    let scopes = 'tenant/' + basicAuth.tenantId;\n    if (organisationId) {\n      scopes += '/organisation/' + organisationId;\n    }\n    if (organisationId && userId) {\n      scopes += '/user/' + userId;\n    }\n    const headers = new Headers();\n    headers.append('Content-Type',\n      'application/x-www-form-urlencoded; charset=utf8');\n    const formData = 'grant_type=password&scope=' + scopes +\n      '&username=' + basicAuth.principal +\n      '&password=' + basicAuth.credentials;\n    const options = {\n      method: 'POST',\n      headers,\n      body: formData\n    };\n    return fetch(url, options)\n      .then(response =>\n        response.json()\n          .then(data => {\n            if (response.ok) {\n              this._settings.oAuth2Token = data.access_token;\n              return data;\n            }\n            throw data;\n          })\n      );\n  }\n\n  /**\n   * Request authentication for a {@link User}. The basicAuth now contains the user's username and password.\n   *\n   * @param {BasicAuth} basicAuth - Basic Auth to obtain credentials from.\n   * @param {string} organisationId - Id of the organisation this user is part of.\n   */\n  getUserAuth(basicAuth, organisationId) {\n    return this.getOauth2Token(basicAuth, organisationId, basicAuth.principal);\n  }\n}\n"
  },
  {
    "__docId__": 98,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Connection",
    "memberof": "src/administrative-sdk/connection/connection-controller.js",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/connection/connection-controller.js",
    "importStyle": "Connection",
    "description": "Controller class for managing connection interaction.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 99,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#constructor",
    "access": null,
    "description": "",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to configure the connection with.\nValid options include:\n* apiUrl - The URL of the REST api.\n* wsUrl - The URL of the Websocket server.\n* oAuth2Token - An OAuth2 token string.\n* adminPrincipal - The username of the admin account.\n* adminPassword - The password of the admin account."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 100,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_settings",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_settings",
    "access": null,
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 101,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_analysisId",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_analysisId",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recordingId",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_recordingId",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 103,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recognitionId",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_recognitionId",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_emitter",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_emitter",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_connection",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEventListener",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#addEventListener",
    "access": null,
    "description": "Add an event listener. Listens to events emitted from the websocket server connection.",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 107,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeEventListener",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#removeEventListener",
    "access": null,
    "description": "Remove an event listener of the websocket connection.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 108,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fireEvent",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#fireEvent",
    "access": "private",
    "description": "Fire an event.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Arguments."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 109,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getAuthHeaders",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_getAuthHeaders",
    "access": null,
    "description": "Assemble a HTTP Authentication header.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<string>} Promise containing an authorization header string."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<string>"
      ],
      "spread": false,
      "description": "Promise containing an authorization header string."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the oAuth2Token in {@link Connection#settings} is not set."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 110,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "webSocketConnect",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#webSocketConnect",
    "access": null,
    "description": "Create a connection to the websocket server.",
    "lineNumber": 90,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 111,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_connection",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 112,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "webSocketDisconnect",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#webSocketDisconnect",
    "access": null,
    "description": null,
    "lineNumber": 148,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 113,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_secureAjaxGet",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_secureAjaxGet",
    "access": null,
    "description": "Perform a HTTP GET to the API using authentication.",
    "lineNumber": 159,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Promise containing a result."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Url to retrieve."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise containing a result."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 114,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_secureAjaxPost",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_secureAjaxPost",
    "access": null,
    "description": "Perform a HTTP POST to the API using authentication.",
    "lineNumber": 181,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Promise containing a result."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Url to submit to."
      },
      {
        "nullable": null,
        "types": [
          "FormData"
        ],
        "spread": false,
        "optional": false,
        "name": "formdata",
        "description": "The form to POST."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise containing a result."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 115,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_secureAjaxDelete",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#_secureAjaxDelete",
    "access": null,
    "description": "Perform a HTTP DELETE to the API using authentication.",
    "lineNumber": 207,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Promise containing a result."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "Url to submit to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise containing a result."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 116,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "handleResponse",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#handleResponse",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "params": [
      {
        "name": "response",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 117,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addAccessToken",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#addAccessToken",
    "access": null,
    "description": "Add an access token to the given URL.",
    "lineNumber": 242,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} An url with the access token appended."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The URL to add an access token to."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "An url with the access token appended."
    },
    "generator": false
  },
  {
    "__docId__": 118,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_sdkCompatibility",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection._sdkCompatibility",
    "access": null,
    "description": "Logs browser compatibility for required and optional SDK capabilities.",
    "lineNumber": 256,
    "params": [],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "In case of compatibility issues."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 119,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "cancelStreaming",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#cancelStreaming",
    "access": null,
    "description": "Cancel any current streaming audio recording.",
    "lineNumber": 273,
    "params": [
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder currently recording."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 120,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "logRPCError",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection.logRPCError",
    "access": null,
    "description": "Log an error caught from an RPC call.",
    "lineNumber": 297,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": "Error object."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 121,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOauth2Token",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#getOauth2Token",
    "access": null,
    "description": "Ask the server for an OAuth2 token.",
    "lineNumber": 310,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} Promise containing a access_token, token_type and scope."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "BasicAuth"
        ],
        "spread": false,
        "optional": false,
        "name": "basicAuth",
        "description": "Basic Auth to obtain credentials from."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "organisationId",
        "description": "Id of the organisation to request a token for."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "Id of the user to request a token for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise containing a access_token, token_type and scope."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 122,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUserAuth",
    "memberof": "src/administrative-sdk/connection/connection-controller.js~Connection",
    "longname": "src/administrative-sdk/connection/connection-controller.js~Connection#getUserAuth",
    "access": null,
    "description": "Request authentication for a {@link User}. The basicAuth now contains the user's username and password.",
    "lineNumber": 349,
    "params": [
      {
        "nullable": null,
        "types": [
          "BasicAuth"
        ],
        "spread": false,
        "optional": false,
        "name": "basicAuth",
        "description": "Basic Auth to obtain credentials from."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "organisationId",
        "description": "Id of the organisation this user is part of."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 123,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/email-credentials/email-credentials-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/email-credentials/email-credentials-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import EmailCredentials from './email-credentials';\n\n/**\n * Controller class for the Email Credentials model.\n * @private\n */\nexport default class EmailCredentialsController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Register credentials to the given user. Multiple credentials can be registered to one user.\n   *\n   * @param {string} userId - The identifier of the user to register credentials to.\n   * @param {EmailCredentials} emailCredentials - The credentials to register to the user.\n   * @returns {Promise.<EmailCredentials>} A promise containing the created EmailCredentials.\n   * @throws {Promise.<Error>} userId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} emailCredentials parameter of type \"EmailCredentials\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createEmailCredentials(userId, emailCredentials) {\n    if (typeof userId !== 'string') {\n      return Promise.reject(new Error('userId parameter of type \"string\" is required'));\n    }\n\n    if (!(emailCredentials instanceof EmailCredentials)) {\n      return Promise.reject(new Error('emailCredentials parameter of type \"EmailCredentials\" is required'));\n    }\n\n    const url = this._connection._settings.apiUrl + '/users/' + userId + '/emailauths';\n    const fd = JSON.stringify(emailCredentials);\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new EmailCredentials(data.email, data.password);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        return result;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 124,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EmailCredentialsController",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials-controller.js",
    "longname": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/email-credentials/email-credentials-controller.js",
    "importStyle": "EmailCredentialsController",
    "description": "Controller class for the Email Credentials model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 125,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController",
    "longname": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 126,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController",
    "longname": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createEmailCredentials",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController",
    "longname": "src/administrative-sdk/email-credentials/email-credentials-controller.js~EmailCredentialsController#createEmailCredentials",
    "access": null,
    "description": "Register credentials to the given user. Multiple credentials can be registered to one user.",
    "lineNumber": 29,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<EmailCredentials>} A promise containing the created EmailCredentials."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The identifier of the user to register credentials to."
      },
      {
        "nullable": null,
        "types": [
          "EmailCredentials"
        ],
        "spread": false,
        "optional": false,
        "name": "emailCredentials",
        "description": "The credentials to register to the user."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<EmailCredentials>"
      ],
      "spread": false,
      "description": "A promise containing the created EmailCredentials."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "userId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "emailCredentials parameter of type \"EmailCredentials\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 128,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/email-credentials/email-credentials.js",
    "memberof": null,
    "longname": "src/administrative-sdk/email-credentials/email-credentials.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\n * Users can have email based credentials.\n * These credentials can be managed using the REST API. Only users with administrative powers can perform these calls.\n */\nexport default class EmailCredentials {\n  /**\n   * Create an EmailCredentials object.\n   *\n   * @param {string} email - A unique email address.\n   * @param {?string} password - A secure password, if none is given, one will be generated.\n   * @throws {Error} email parameter of type \"string\" is required.\n   * @throws {Error} password parameter of type \"string|null\" is required\n   */\n  constructor(email, password = null) {\n    if (typeof email !== 'string') {\n      throw new Error('email parameter of type \"string\" is required');\n    }\n\n    if (password !== null && typeof password !== 'string') {\n      throw new Error('password parameter of type \"string|null\" is required');\n    }\n\n    /**\n     * @type {string} A unique email address.\n     */\n    this.email = email;\n\n    /**\n     * @type {string} A secure password, if none is given, one will be generated.\n     */\n    this.password = password;\n  }\n}\n"
  },
  {
    "__docId__": 129,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "EmailCredentials",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials.js",
    "longname": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/email-credentials/email-credentials.js",
    "importStyle": "EmailCredentials",
    "description": "Users can have email based credentials.\nThese credentials can be managed using the REST API. Only users with administrative powers can perform these calls.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials",
    "longname": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials#constructor",
    "access": null,
    "description": "Create an EmailCredentials object.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "email",
        "description": "A unique email address."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "A secure password, if none is given, one will be generated."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "email parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "password parameter of type \"string|null\" is required"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 131,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "email",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials",
    "longname": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials#email",
    "access": null,
    "description": "",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "password",
    "memberof": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials",
    "longname": "src/administrative-sdk/email-credentials/email-credentials.js~EmailCredentials#password",
    "access": null,
    "description": "",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/group/group.js",
    "memberof": null,
    "longname": "src/administrative-sdk/group/group.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * Group domain model. A {@link User} can be part of one or multiple groups\n */\nexport default class Group {\n  /**\n   * Create a group.\n   *\n   * @param {?string} id - The group identifier. If none is given, one is generated.\n   * @param {string} name - The name of the group.\n   * @throws {Error} id parameter of type \"string|null\" is required\n   * @throws {Error} name parameter of type \"string\" is required\n   */\n  constructor(id, name) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error('id parameter of type \"string|null\" is required');\n    }\n\n    if (typeof name !== 'string') {\n      throw new Error('name parameter of type \"string\" is required');\n    }\n\n    /**\n     * @type {string} The group identifier. If none is given, one is generated.\n     */\n    this.id = id;\n\n    /**\n     * @type {string} The name of the group.\n     */\n    this.name = name;\n  }\n}\n"
  },
  {
    "__docId__": 134,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Group",
    "memberof": "src/administrative-sdk/group/group.js",
    "longname": "src/administrative-sdk/group/group.js~Group",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/group/group.js",
    "importStyle": "Group",
    "description": "Group domain model. A {@link User} can be part of one or multiple groups",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 135,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/group/group.js~Group",
    "longname": "src/administrative-sdk/group/group.js~Group#constructor",
    "access": null,
    "description": "Create a group.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The group identifier. If none is given, one is generated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the group."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "id parameter of type \"string|null\" is required"
      },
      {
        "types": [
          "Error"
        ],
        "description": "name parameter of type \"string\" is required"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 136,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/group/group.js~Group",
    "longname": "src/administrative-sdk/group/group.js~Group#id",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/administrative-sdk/group/group.js~Group",
    "longname": "src/administrative-sdk/group/group.js~Group#name",
    "access": null,
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/organisation/organisation-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/organisation/organisation-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Organisation from './organisation';\n\n/**\n * Controller class for the Organisation model.\n * @private\n */\nexport default class OrganisationController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create an organisation. The organisation will be owned by the current active tenant.\n   *\n   * @param {Organisation} organisation - Object to create.\n   * @returns {Promise.<Organisation>} Promise containing the newly created Organisation.\n   * @throws {Promise.<Error>} organisation parameter of type \"Organisation\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createOrganisation(organisation) {\n    if (!(organisation instanceof Organisation)) {\n      return Promise.reject(new Error('organisation parameter of type \"Organisation\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/organisations';\n    const fd = JSON.stringify(organisation);\n\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new Organisation(data.id, data.name);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        return result;\n      });\n  }\n\n  /**\n   * Get an organisation the current tenant is the owner of.\n   *\n   * @param {string} organisationId - Specify an organisation identifier.\n   * @returns {Promise.<Organisation>} Promise containing an Organisation.\n   * @throws {Promise.<Error>} organisationId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getOrganisation(organisationId) {\n    if (typeof organisationId !== 'string') {\n      return Promise.reject(new Error('organisationId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/organisations/' + organisationId;\n\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const organisation = new Organisation(data.id, data.name);\n        organisation.created = new Date(data.created);\n        organisation.updated = new Date(data.updated);\n        return organisation;\n      });\n  }\n\n  /**\n   * Get and return all organisations the current tenant is the owner of.\n   *\n   * @returns {Promise.<Organisation[]>} Promise containing an array of Organisations.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getOrganisations() {\n    const url = this._connection._settings.apiUrl + '/organisations';\n\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const organisations = [];\n        data.forEach(datum => {\n          const organisation = new Organisation(datum.id, datum.name);\n          organisation.created = new Date(datum.created);\n          organisation.updated = new Date(datum.updated);\n          organisations.push(organisation);\n        });\n        return organisations;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 139,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "OrganisationController",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/organisation/organisation-controller.js",
    "importStyle": "OrganisationController",
    "description": "Controller class for the Organisation model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 140,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 141,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createOrganisation",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController#createOrganisation",
    "access": null,
    "description": "Create an organisation. The organisation will be owned by the current active tenant.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation>} Promise containing the newly created Organisation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Organisation"
        ],
        "spread": false,
        "optional": false,
        "name": "organisation",
        "description": "Object to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation>"
      ],
      "spread": false,
      "description": "Promise containing the newly created Organisation."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "organisation parameter of type \"Organisation\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 143,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOrganisation",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController#getOrganisation",
    "access": null,
    "description": "Get an organisation the current tenant is the owner of.",
    "lineNumber": 51,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation>} Promise containing an Organisation."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "organisationId",
        "description": "Specify an organisation identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation>"
      ],
      "spread": false,
      "description": "Promise containing an Organisation."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "organisationId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 144,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getOrganisations",
    "memberof": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController",
    "longname": "src/administrative-sdk/organisation/organisation-controller.js~OrganisationController#getOrganisations",
    "access": null,
    "description": "Get and return all organisations the current tenant is the owner of.",
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Organisation[]>} Promise containing an array of Organisations."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Organisation[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Organisations."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 145,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/organisation/organisation.js",
    "memberof": null,
    "longname": "src/administrative-sdk/organisation/organisation.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export default class Organisation {\n  /**\n   * Organisation domain model.\n   *\n   * @param {?string} id - The organisation identifier. If none is given, one is generated.\n   * @param {string} name - Name of the organisation.\n   */\n  constructor(id = null, name) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error('id parameter of type \"string|null\" is required');\n    }\n\n    if (typeof name !== 'string') {\n      throw new Error('name parameter of type \"string\" is required');\n    }\n\n    /**\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * @type {string}\n     */\n    this.name = name;\n  }\n}\n"
  },
  {
    "__docId__": 146,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Organisation",
    "memberof": "src/administrative-sdk/organisation/organisation.js",
    "longname": "src/administrative-sdk/organisation/organisation.js~Organisation",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/organisation/organisation.js",
    "importStyle": "Organisation",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 147,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/organisation/organisation.js~Organisation",
    "longname": "src/administrative-sdk/organisation/organisation.js~Organisation#constructor",
    "access": null,
    "description": "Organisation domain model.",
    "lineNumber": 8,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The organisation identifier. If none is given, one is generated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the organisation."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 148,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/organisation/organisation.js~Organisation",
    "longname": "src/administrative-sdk/organisation/organisation.js~Organisation#id",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/administrative-sdk/organisation/organisation.js~Organisation",
    "longname": "src/administrative-sdk/organisation/organisation.js~Organisation#name",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/phoneme/phoneme.js",
    "memberof": null,
    "longname": "src/administrative-sdk/phoneme/phoneme.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "export default class Phoneme {\n  /**\n   * Create a phoneme domain model.\n   *\n   * @param {string} ipa - The pronunciation of the grapheme(s) indicated as International Phonetic Alphabet (IPA).\n   * @param {float} score - The audio is scored per phoneme and consists of several measurements. 0 would be bad,\n   * 1 the perfect score.\n   * @param {float} confidenceScore - This value provides a reliable prediction that the pronounced phoneme is\n   * actually the phoneme that is supposed to be pronounced. There is no absolute scale defined yet.\n   * @param {string} verdict - Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\n   * good when the score is 0.6 or above.\n   */\n  constructor(ipa, score, confidenceScore, verdict) {\n    /**\n     * @type {string}\n     */\n    this.ipa = ipa;\n\n    /**\n     * @type {float}\n     */\n    this.score = score;\n\n    /**\n     * @type {float}\n     */\n    this.confidenceScore = confidenceScore;\n\n    /**\n     * @type {string}\n     */\n    this.verdict = verdict;\n  }\n}\n"
  },
  {
    "__docId__": 151,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Phoneme",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/phoneme/phoneme.js",
    "importStyle": "Phoneme",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme#constructor",
    "access": null,
    "description": "Create a phoneme domain model.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ipa",
        "description": "The pronunciation of the grapheme(s) indicated as International Phonetic Alphabet (IPA)."
      },
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "The audio is scored per phoneme and consists of several measurements. 0 would be bad,\n1 the perfect score."
      },
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "confidenceScore",
        "description": "This value provides a reliable prediction that the pronounced phoneme is\nactually the phoneme that is supposed to be pronounced. There is no absolute scale defined yet."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "verdict",
        "description": "Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\ngood when the score is 0.6 or above."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 153,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "ipa",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme#ipa",
    "access": null,
    "description": "",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "score",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme#score",
    "access": null,
    "description": "",
    "lineNumber": 22,
    "type": {
      "nullable": null,
      "types": [
        "float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "confidenceScore",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme#confidenceScore",
    "access": null,
    "description": "",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "verdict",
    "memberof": "src/administrative-sdk/phoneme/phoneme.js~Phoneme",
    "longname": "src/administrative-sdk/phoneme/phoneme.js~Phoneme#verdict",
    "access": null,
    "description": "",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/profile/profile-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/profile/profile-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Profile from './profile';\n\n/**\n * Controller class for the Profile model.\n * @private\n */\nexport default class ProfileController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Get the profile of the given user active in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} userId - Specify a User identifier.\n   * @returns {Promise.<Profile>} Promise containing a Profile.\n   * @throws {Promise.<Error>} userId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getProfile(userId) {\n    if (typeof userId !== 'string') {\n      return Promise.reject(new Error('userId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/profiles/' + userId;\n\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const profile = new Profile(data.firstName, data.lastName, data.infix, data.gender, new Date(data.birthDate));\n        profile.created = new Date(data.created);\n        profile.updated = new Date(data.updated);\n        return profile;\n      });\n  }\n\n  /**\n   * Get and return all profiles of all users in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<Profile[]>} Array of Profiles.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  getProfiles() {\n    const url = this._connection._settings.apiUrl + '/profiles';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const profiles = [];\n        data.forEach(datum => {\n          const profile = new Profile(datum.firstName, datum.lastName, datum.infix, datum.gender,\n            new Date(datum.birthDate));\n          profile.created = new Date(datum.created);\n          profile.updated = new Date(datum.updated);\n          profiles.push(profile);\n        });\n        return profiles;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 158,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ProfileController",
    "memberof": "src/administrative-sdk/profile/profile-controller.js",
    "longname": "src/administrative-sdk/profile/profile-controller.js~ProfileController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/profile/profile-controller.js",
    "importStyle": "ProfileController",
    "description": "Controller class for the Profile model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 159,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/profile/profile-controller.js~ProfileController",
    "longname": "src/administrative-sdk/profile/profile-controller.js~ProfileController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 160,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/profile/profile-controller.js~ProfileController",
    "longname": "src/administrative-sdk/profile/profile-controller.js~ProfileController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProfile",
    "memberof": "src/administrative-sdk/profile/profile-controller.js~ProfileController",
    "longname": "src/administrative-sdk/profile/profile-controller.js~ProfileController#getProfile",
    "access": null,
    "description": "Get the profile of the given user active in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Profile>} Promise containing a Profile."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "Specify a User identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Profile>"
      ],
      "spread": false,
      "description": "Promise containing a Profile."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "userId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 162,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getProfiles",
    "memberof": "src/administrative-sdk/profile/profile-controller.js~ProfileController",
    "longname": "src/administrative-sdk/profile/profile-controller.js~ProfileController#getProfiles",
    "access": null,
    "description": "Get and return all profiles of all users in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 48,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Profile[]>} Array of Profiles."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Profile[]>"
      ],
      "spread": false,
      "description": "Array of Profiles."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 163,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/profile/profile.js",
    "memberof": null,
    "longname": "src/administrative-sdk/profile/profile.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * Profile domain model. A profile is part of a {@link User} and stores general information about the user.\n */\nexport default class Profile {\n  /**\n   * Create a Profile.\n   *\n   * @param {string} firstName - The first name of the {@link User}.\n   * @param {string} lastName - The last name of the {@link User}.\n   * @param {?string} [infix] - The infix of the {@link User}'s name.\n   * @param {string} gender - The gender of the {@link User}.\n   * @param {Date} birthDate - The birth date of the {@link User}.\n   * @throws {Error} firstName parameter of type \"string\" is required.\n   * @throws {Error} lastName parameter of type \"string\" is required.\n   * @throws {Error} gender parameter of type \"string\" is required.\n   * @throws {Error} birthDate parameter of type \"Date\" is required.\n   */\n  constructor(firstName, lastName, infix = null, gender, birthDate) {\n    if (typeof firstName !== 'string') {\n      throw new Error('firstName parameter of type \"string\" is required');\n    }\n\n    if (typeof lastName !== 'string') {\n      throw new Error('lastName parameter of type \"string\" is required');\n    }\n\n    if (infix !== null && typeof infix !== 'string') {\n      throw new Error('infix parameter of type \"string|null\" is required');\n    }\n\n    if (typeof gender !== 'string') {\n      throw new Error('gender parameter of type \"string\" is required');\n    }\n\n    if (!(birthDate instanceof Date)) {\n      throw new Error('birthDate parameter of type \"Date\" is required');\n    }\n\n    /**\n     * The first name of the {@link User}.\n     * @type {string}\n     */\n    this.firstName = firstName;\n\n    /**\n     * The last name of the {@link User}.\n     * @type {string}\n     */\n    this.lastName = lastName;\n\n    /**\n     * @type {string} The infix of the {@link User}'s name.\n     */\n    this.infix = infix;\n\n    /**\n     * The gender of the {@link User}.\n     * @type {string}\n     */\n    this.gender = gender;\n\n    /**\n     * The birth date of the {@link User}.\n     * @type {Date}\n     */\n    this.birthDate = birthDate;\n  }\n}\n"
  },
  {
    "__docId__": 164,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Profile",
    "memberof": "src/administrative-sdk/profile/profile.js",
    "longname": "src/administrative-sdk/profile/profile.js~Profile",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/profile/profile.js",
    "importStyle": "Profile",
    "description": "Profile domain model. A profile is part of a {@link User} and stores general information about the user.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 165,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#constructor",
    "access": null,
    "description": "Create a Profile.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstName",
        "description": "The first name of the {@link User}."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastName",
        "description": "The last name of the {@link User}."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "infix",
        "description": "The infix of the {@link User}'s name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "gender",
        "description": "The gender of the {@link User}."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "birthDate",
        "description": "The birth date of the {@link User}."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "firstName parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "lastName parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "gender parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "birthDate parameter of type \"Date\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 166,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "firstName",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#firstName",
    "access": null,
    "description": "The first name of the {@link User}.",
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lastName",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#lastName",
    "access": null,
    "description": "The last name of the {@link User}.",
    "lineNumber": 49,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "infix",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#infix",
    "access": null,
    "description": "",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "gender",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#gender",
    "access": null,
    "description": "The gender of the {@link User}.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "birthDate",
    "memberof": "src/administrative-sdk/profile/profile.js~Profile",
    "longname": "src/administrative-sdk/profile/profile.js~Profile#birthDate",
    "access": null,
    "description": "The birth date of the {@link User}.",
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/progress/progress.js",
    "memberof": null,
    "longname": "src/administrative-sdk/progress/progress.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\n * Progress counter for challenges. Progress keeps track of the total challenges in a category and the amount\n * of challenges that are completed.\n */\nexport default class Progress {\n  constructor(done, total) {\n    this.done = done;\n    this.total = total;\n  }\n}\n"
  },
  {
    "__docId__": 172,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Progress",
    "memberof": "src/administrative-sdk/progress/progress.js",
    "longname": "src/administrative-sdk/progress/progress.js~Progress",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/progress/progress.js",
    "importStyle": "Progress",
    "description": "Progress counter for challenges. Progress keeps track of the total challenges in a category and the amount\nof challenges that are completed.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 173,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/progress/progress.js~Progress",
    "longname": "src/administrative-sdk/progress/progress.js~Progress#constructor",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "done",
        "types": [
          "*"
        ]
      },
      {
        "name": "total",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 174,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "done",
    "memberof": "src/administrative-sdk/progress/progress.js~Progress",
    "longname": "src/administrative-sdk/progress/progress.js~Progress#done",
    "access": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "total",
    "memberof": "src/administrative-sdk/progress/progress.js~Progress",
    "longname": "src/administrative-sdk/progress/progress.js~Progress#total",
    "access": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/* eslint-disable\n camelcase\n */\nimport Base64Utils from '../utils/base64-utils';\nimport Connection from '../connection/connection-controller';\nimport Phoneme from '../phoneme/phoneme';\nimport PronunciationAnalysis from './pronunciation-analysis';\nimport PronunciationChallenge from '../pronunciation-challenge/pronunciation-challenge';\nimport Word from '../word/word';\nimport WordChunk from '../word-chunk/word-chunk';\nimport when from 'when';\n\n/**\n * Controller class for the PronunciationAnalysis model.\n * @private\n */\nexport default class PronunciationAnalysisController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create a `its.Word` domain model from JSON data.\n   *\n   * @param {object[]} inWords - The words array from the PronunciationAnalysis API.\n   * @returns {Word[]} An array of {@link Word} domain models.\n   */\n  static _wordsToModels(inWords) {\n    const words = [];\n    inWords.forEach(word => {\n      const chunks = [];\n      word.chunks.forEach(chunk => {\n        const phonemes = [];\n        // Phonemes are only provided on detailed analysis.\n        chunk.phonemes = chunk.phonemes || [];\n        chunk.phonemes.forEach(phoneme => {\n          const newPhoneme = new Phoneme(\n            phoneme.ipa, phoneme.score, phoneme.confidenceScore,\n            phoneme.verdict);\n          // Copy all properties as API docs indicate there may be a\n          // variable amount of phoneme properties.\n          Object.assign(newPhoneme, phoneme);\n          phonemes.push(newPhoneme);\n        });\n        const wordChunk = new WordChunk(chunk.graphemes, chunk.score,\n          chunk.verdict, phonemes);\n        chunks.push(wordChunk);\n      });\n      const newWord = new Word(chunks);\n      words.push(newWord);\n    });\n    return words;\n  }\n\n  /**\n   * Initialise the pronunciation analysis challenge through RPCs.\n   *\n   * @param {PronunciationChallenge} challenge - Challenge.\n   * @private\n   */\n  pronunciationAnalysisInitChallenge(challenge) {\n    return this._connection._session.call('nl.itslanguage.pronunciation.init_challenge',\n      [this._connection._analysisId, challenge.id])\n      .then(analysisId => {\n        console.log('Challenge initialised for analysisId: ' + this._connection._analysisId);\n        return analysisId;\n      })\n      .then(() => this._connection._session.call('nl.itslanguage.pronunciation.alignment',\n        [this._connection._analysisId]))\n      .then(alignment => {\n        this._referenceAlignment = alignment;\n        console.log('Reference alignment retrieved', alignment);\n      });\n  }\n\n  /**\n   * Initialise the pronunciation analysis audio specs through RPCs.\n   *\n   * @param {AudioRecorder} recorder - AudioRecorder.\n   * @param {Function} dataavailableCb - Callback.\n   * @private\n   */\n  pronunciationAnalysisInitAudio(recorder, dataavailableCb) {\n    // Indicate to the socket server that we're about to start recording a\n    // challenge. This allows the socket server some time to fetch the metadata\n    // and reference audio to start the analysis when audio is actually submitted.\n    const specs = recorder.getAudioSpecs();\n    return this._connection._session.call('nl.itslanguage.pronunciation.init_audio',\n      [this._connection._analysisId, specs.audioFormat], specs.audioParameters)\n      .then(analysisId => {\n        console.log('Accepted audio parameters for analysisId after init_audio: ' + this._connection._analysisId);\n        // Start listening for streaming data.\n        recorder.addEventListener('dataavailable', dataavailableCb);\n        return analysisId;\n      });\n  }\n\n  /**\n   * Start a pronunciation analysis from streaming audio.\n   *\n   * @param {PronunciationChallenge} challenge - The pronunciation challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @param {?boolean} trim - Whether to trim the start and end of recorded audio (default: true).\n   * @returns {Promise.<PronunciationAnalysis>} A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @emits {Object} When the sent audio has finished alignment. Aligning audio is the process of mapping the audio\n   * to spoken words and determining when what is said. An object is sent containing a property 'progress',\n   * which is the sent audio alignment, and a property 'referenceAlignment' which is the alignment of the\n   * reference audio.\n   * @throws {Promise.<Error>} challenge parameter of type \"PronunciationChallenge\" is required.\n   * @throws {Promise.<Error>} challenge.id field of type \"string\" is required.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during analysis.\n   */\n  startStreamingPronunciationAnalysis(challenge, recorder, trim) {\n    if (!(challenge instanceof PronunciationChallenge)) {\n      return Promise.reject(new Error('challenge parameter of type \"PronunciationChallenge\" is required'));\n    }\n    if (typeof challenge.id !== 'string') {\n      return Promise.reject(new Error('challenge.id field of type \"string\" is required'));\n    }\n    if (!this._connection._session) {\n      return Promise.reject(new Error('WebSocket connection was not open.'));\n    }\n    if (recorder.isRecording()) {\n      return Promise.reject(new Error('Recorder should not yet be recording.'));\n    }\n\n    if (this._connection._analysisId !== null) {\n      return Promise.reject(new Error('Session with analysisId ' + this._connection._analysisId +\n        ' still in progress.'));\n    }\n    const self = this;\n    this._connection._analyisId = null;\n    let trimAudioStart = 0.15;\n    const trimAudioEnd = 0.0;\n    if (trim === false) {\n      trimAudioStart = 0.0;\n    }\n    return new when.Promise((resolve, reject, notify) => {\n      function reportDone(data) {\n        const analysis = new PronunciationAnalysis(\n          challenge.id, data.userId, data.id,\n          new Date(data.created), new Date(data.updated),\n          self._connection.addAccessToken(data.audioUrl),\n          data.score, data.confidenceScore,\n          PronunciationAnalysisController._wordsToModels(data.words)\n        );\n        resolve({analysisId: self._connection._analysisId, analysis});\n      }\n\n      function reportProgress(progress) {\n        notify({progress, referenceAlignment: self._referenceAlignment});\n      }\n\n      function reportError(data) {\n        // Either there was an unexpected error, or the audio failed to\n        // align, in which case no analysis is provided, but just the\n        // basic metadata.\n        const analysis = new PronunciationAnalysis(\n          challenge.id, data.userId, data.id,\n          new Date(data.created), new Date(data.updated),\n          self._connection.addAccessToken(data.audioUrl));\n        reject({analysis, message: data.message});\n      }\n\n      // Start streaming the binary audio when the user instructs\n      // the audio recorder to start recording.\n      function startStreaming(chunk) {\n        const encoded = Base64Utils._arrayBufferToBase64(chunk);\n        console.log('Sending audio chunk to websocket for analysisId: ' +\n          self._connection._analysisId);\n        self._connection._session.call('nl.itslanguage.pronunciation.write',\n          [self._connection._analysisId, encoded, 'base64'])\n          .then(() => {\n            console.debug('Delivered audio successfully');\n          })\n          .catch(res => {\n            Connection.logRPCError(res);\n            reportError(res);\n          });\n      }\n\n      function initAnalysis(analysisId) {\n        self._connection._analysisId = analysisId;\n        console.log('Got analysisId after initialisation: ' + self._connection._analysisId);\n      }\n\n      // Stop listening when the audio recorder stopped.\n      function stopListening() {\n        recorder.removeEventListener('recorded', stopListening);\n        recorder.removeEventListener('dataavailable', startStreaming);\n\n        // When done, submit any plain text (non-JSON) to start analysing.\n        self._connection._session.call('nl.itslanguage.pronunciation.analyse',\n          [self._connection._analysisId], {}, {receive_progress: true})\n          .progress(progress => {\n            reportProgress(progress);\n          })\n          .then(reportDone)\n          .catch(res => {\n            if (res.error === 'nl.itslanguage.ref_alignment_failed') {\n              res.kwargs.analysis.message = 'Reference alignment failed';\n            } else if (res.error === 'nl.itslanguage.alignment_failed') {\n              res.kwargs.analysis.message = 'Alignment failed';\n            } else if (res.error === 'nl.itslanguage.analysis_failed') {\n              res.kwargs.analysis.message = 'Analysis failed';\n            } else {\n              res.kwargs.analysis.message = 'Unhandled error';\n              Connection.logRPCError(res);\n            }\n            reportError(res.kwargs.analysis);\n          });\n      }\n\n      recorder.addEventListener('recorded', stopListening);\n      self._connection._session.call('nl.itslanguage.pronunciation.init_analysis', [],\n        {\n          trimStart: trimAudioStart,\n          trimEnd: trimAudioEnd\n        })\n        .then(initAnalysis)\n        .then(() =>\n          self.pronunciationAnalysisInitChallenge(challenge)\n            .then(() => {\n              const p = new Promise(resolve_ => {\n                if (recorder.hasUserMediaApproval()) {\n                  resolve_();\n                } else {\n                  recorder.addEventListener('ready', resolve_);\n                }\n              });\n\n              p.then(() => {\n                self.pronunciationAnalysisInitAudio(recorder, startStreaming)\n                  .catch(reject);\n              });\n            })\n            .then(() => notify('ReadyToReceive'))\n        )\n        .catch(reject);\n    })\n      .then(res => {\n        self._connection._analysisId = null;\n        return Promise.resolve(res);\n      })\n      .catch(error => {\n        self._connection._analysisId = null;\n        Connection.logRPCError(error);\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Get a pronunciation analysis in a pronunciation challenge from the current active {@link Organisation} derived\n   * from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier.\n   * @param {string} analysisId - Specify a pronunciation analysis identifier.\n   * @returns {Promise.<PronunciationAnalysis>} Promise containing a PronunciationAnalysis.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} {@link PronunciationAnalysis#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationAnalysis(challengeId, analysisId) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    if (!analysisId) {\n      return Promise.reject(new Error('analysisId field is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/pronunciation/' +\n      challengeId + '/analyses/' + analysisId;\n    return this._connection._secureAjaxGet(url)\n      .then(datum => {\n        const analysis = new PronunciationAnalysis(challengeId, datum.userId,\n          datum.id, new Date(datum.created), new Date(datum.updated),\n          datum.audioUrl, datum.score, datum.confidenceScore, null);\n        // Alignment may not be successful, in which case the analysis\n        // is not available, but it's still an attempt that is available,\n        // albeit without extended attributes like score and phonemes.\n        if (datum.words) {\n          analysis.words = PronunciationAnalysisController._wordsToModels(datum.words);\n        }\n        return analysis;\n      });\n  }\n\n  /**\n   * Get and return all pronunciation analyses in a specific pronunciation challenge from the current active\n   * {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier to list\n   * speech recordings for.\n   * @param {boolean} [detailed=false] - Returns extra analysis metadata when true.\n   * @returns {Promise.<PronunciationAnalysis[]>} Promise containing an array PronunciationAnalyses.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationAnalyses(challengeId, detailed) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    let url = this._connection._settings.apiUrl + '/challenges/pronunciation/' +\n      challengeId + '/analyses';\n    if (detailed) {\n      url += '?detailed=true';\n    }\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const analyses = [];\n        data.forEach(datum => {\n          const analysis = new PronunciationAnalysis(challengeId, datum.userId,\n            datum.id, new Date(datum.created), new Date(datum.updated),\n            datum.audioUrl, datum.score, datum.confidenceScore, null);\n          // Alignment may not be successful, in which case the analysis\n          // is not available, but it's still an attempt that is available,\n          // albeit without extended attributes like score and phonemes.\n          if (datum.words) {\n            analysis.words = PronunciationAnalysisController._wordsToModels(datum.words);\n          }\n          analyses.push(analysis);\n        });\n        return analyses;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 177,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PronunciationAnalysisController",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js",
    "importStyle": "PronunciationAnalysisController",
    "description": "Controller class for the PronunciationAnalysis model.",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 178,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 179,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_wordsToModels",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController._wordsToModels",
    "access": null,
    "description": "Create a `its.Word` domain model from JSON data.",
    "lineNumber": 35,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Word[]} An array of {@link Word} domain models."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "inWords",
        "description": "The words array from the PronunciationAnalysis API."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Word[]"
      ],
      "spread": false,
      "description": "An array of {@link Word} domain models."
    },
    "generator": false
  },
  {
    "__docId__": 181,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pronunciationAnalysisInitChallenge",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#pronunciationAnalysisInitChallenge",
    "access": "private",
    "description": "Initialise the pronunciation analysis challenge through RPCs.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "PronunciationChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "Challenge."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 182,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_referenceAlignment",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#_referenceAlignment",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pronunciationAnalysisInitAudio",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#pronunciationAnalysisInitAudio",
    "access": "private",
    "description": "Initialise the pronunciation analysis audio specs through RPCs.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "AudioRecorder."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "dataavailableCb",
        "description": "Callback."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 184,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingPronunciationAnalysis",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#startStreamingPronunciationAnalysis",
    "access": null,
    "description": "Start a pronunciation analysis from streaming audio.",
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis>} A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PronunciationChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The pronunciation challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      },
      {
        "nullable": true,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "trim",
        "description": "Whether to trim the start and end of recorded audio (default: true)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link PronunciationAnalysis}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challenge parameter of type \"PronunciationChallenge\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challenge.id field of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during analysis."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      },
      {
        "types": [
          "Object"
        ],
        "description": "When the sent audio has finished alignment. Aligning audio is the process of mapping the audio\nto spoken words and determining when what is said. An object is sent containing a property 'progress',\nwhich is the sent audio alignment, and a property 'referenceAlignment' which is the alignment of the\nreference audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 185,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationAnalysis",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#getPronunciationAnalysis",
    "access": null,
    "description": "Get a pronunciation analysis in a pronunciation challenge from the current active {@link Organisation} derived\nfrom the OAuth2 scope.",
    "lineNumber": 274,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis>} Promise containing a PronunciationAnalysis."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "analysisId",
        "description": "Specify a pronunciation analysis identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis>"
      ],
      "spread": false,
      "description": "Promise containing a PronunciationAnalysis."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationAnalysis#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 186,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationAnalyses",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis-controller.js~PronunciationAnalysisController#getPronunciationAnalyses",
    "access": null,
    "description": "Get and return all pronunciation analyses in a specific pronunciation challenge from the current active\n{@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 309,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationAnalysis[]>} Promise containing an array PronunciationAnalyses."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier to list\nspeech recordings for."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "detailed",
        "description": "Returns extra analysis metadata when true."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationAnalysis[]>"
      ],
      "spread": false,
      "description": "Promise containing an array PronunciationAnalyses."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 187,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js",
    "memberof": null,
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class PronunciationAnalysis\n */\nexport default class PronunciationAnalysis {\n  /**\n   * Create a pronunciation analysis domain model.\n   *\n   * @param {string} challengeId - The challenge identifier.\n   * @param {string} userId - The user identifier on whose behalf this audio is uploaded.\n   * @param {string} id - The pronunciation analysis identifier.\n   * @param {Date} created - The creation date of the entity.\n   * @param {Date} updated - The most recent update date of the entity.\n   * @param {string} audioUrl - The audio fragment as streaming audio link.\n   * @param {number} score - The average score of all phonemes grading the entire attempt.\n   * @param {float} confidenceScore - This value provides a reliable prediction that the pronounced phonemes are\n   * actually the phonemes that are supposed to be pronounced. There is no absolute scale defined yet.\n   * @param {Word[]} words - The spoken sentence, split in graphemes per word.\n   */\n  constructor(challengeId, userId, id, created, updated, audioUrl, score, confidenceScore, words) {\n    /**\n     * The pronunciation analysis identifier.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * The {@link PronunciationChallenge} identifier.\n     * @type {string}\n     */\n    this.challengeId = challengeId;\n\n    /**\n     * The user identifier on whose behalf this audio is uploaded.\n     * @type {string}\n     */\n    this.userId = userId;\n\n    /**\n     * The creation date of the entity.\n     * @type {Date}\n     */\n    this.created = created;\n\n    /**\n     * The most recent update date of the entity.\n     * @type {Date}\n     */\n    this.updated = updated;\n\n    /**\n     * The audio fragment as streaming audio link.\n     * @type {string}\n     */\n    this.audioUrl = audioUrl;\n\n    /**\n     * The average score of all phonemes grading the entire attempt.\n     * @type {number}\n     */\n    this.score = score;\n\n    /**\n     * This value provides a reliable prediction that the pronounced phonemes are\n     * actually the phonemes that are supposed to be pronounced. There is no absolute scale defined yet.\n     * @type {float}\n     */\n    this.confidenceScore = confidenceScore;\n\n    /**\n     * The spoken sentence, split in graphemes per word.\n     * @type {Word[][]}\n     */\n    this.words = words;\n  }\n}\n"
  },
  {
    "__docId__": 188,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PronunciationAnalysis",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js",
    "importStyle": "PronunciationAnalysis",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PronunciationAnalysis"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 189,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#constructor",
    "access": null,
    "description": "Create a pronunciation analysis domain model.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "The challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The user identifier on whose behalf this audio is uploaded."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The pronunciation analysis identifier."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "created",
        "description": "The creation date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "updated",
        "description": "The most recent update date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "audioUrl",
        "description": "The audio fragment as streaming audio link."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "The average score of all phonemes grading the entire attempt."
      },
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "confidenceScore",
        "description": "This value provides a reliable prediction that the pronounced phonemes are\nactually the phonemes that are supposed to be pronounced. There is no absolute scale defined yet."
      },
      {
        "nullable": null,
        "types": [
          "Word[]"
        ],
        "spread": false,
        "optional": false,
        "name": "words",
        "description": "The spoken sentence, split in graphemes per word."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 190,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#id",
    "access": null,
    "description": "The pronunciation analysis identifier.",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "challengeId",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#challengeId",
    "access": null,
    "description": "The {@link PronunciationChallenge} identifier.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userId",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#userId",
    "access": null,
    "description": "The user identifier on whose behalf this audio is uploaded.",
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#created",
    "access": null,
    "description": "The creation date of the entity.",
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "updated",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#updated",
    "access": null,
    "description": "The most recent update date of the entity.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "audioUrl",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#audioUrl",
    "access": null,
    "description": "The audio fragment as streaming audio link.",
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "score",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#score",
    "access": null,
    "description": "The average score of all phonemes grading the entire attempt.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "confidenceScore",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#confidenceScore",
    "access": null,
    "description": "This value provides a reliable prediction that the pronounced phonemes are\nactually the phonemes that are supposed to be pronounced. There is no absolute scale defined yet.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "words",
    "memberof": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis",
    "longname": "src/administrative-sdk/pronunciation-analysis/pronunciation-analysis.js~PronunciationAnalysis#words",
    "access": null,
    "description": "The spoken sentence, split in graphemes per word.",
    "lineNumber": 73,
    "type": {
      "nullable": null,
      "types": [
        "Word[][]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import PronunciationChallenge from './pronunciation-challenge';\n\n/**\n * Controller class for the PronunciationChallenge model.\n * @private\n */\nexport default class PronunciationChallengeController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create a pronunciation challenge. The created challenge will be part of the current active {@link Organisation}\n   * derived from the OAuth2 scope.\n   *\n   * @param {PronunciationChallenge} challenge - Object to create.\n   * @param {Blob} audioBlob - Audio fragment to link to the challenge.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the newly created PronunciationChallenge.\n   * @throws {Promise.<Error>} challenge parameter of type \"PronunciationChallenge\" is required.\n   * @throws {Promise.<Error>} audioBlob parameter of type \"Blob\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createPronunciationChallenge(challenge, audioBlob) {\n    if (!(challenge instanceof PronunciationChallenge)) {\n      return Promise.reject(new Error('challenge parameter of type \"PronunciationChallenge\" is required'));\n    }\n\n    if (!(audioBlob instanceof Blob)) {\n      return Promise.reject(new Error(\n        'audioBlob parameter of type \"Blob\" is required'));\n    }\n\n    challenge.referenceAudio = audioBlob;\n    const url = this._connection._settings.apiUrl + '/challenges/pronunciation';\n    const fd = JSON.stringify(challenge);\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new PronunciationChallenge(data.id, data.transcription, data.referenceAudioUrl);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        result.status = data.status;\n        return result;\n      });\n  }\n\n  /**\n   * Get a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a pronunciation challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing a PronunciationChallenge.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationChallenge(challengeId) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/pronunciation/' + challengeId;\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenge = new PronunciationChallenge(data.id, data.transcription, data.referenceAudioUrl);\n        challenge.created = new Date(data.created);\n        challenge.updated = new Date(data.updated);\n        challenge.status = data.status;\n        return challenge;\n      });\n  }\n\n  /**\n   * Get and return all pronunciation challenges in the current active {@link Organisation} derived from\n   * the OAuth2 scope.\n   *\n   * @returns {Promise.<PronunciationChallenge[]>} Promise containing a list of PronunciationChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getPronunciationChallenges() {\n    const url = this._connection._settings.apiUrl + '/challenges/pronunciation';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenges = [];\n        data.forEach(datum => {\n          const challenge = new PronunciationChallenge(datum.id, datum.transcription, datum.referenceAudioUrl);\n          challenge.created = new Date(datum.created);\n          challenge.updated = new Date(datum.updated);\n          challenge.status = datum.status;\n          challenges.push(challenge);\n        });\n        return challenges;\n      });\n  }\n\n  /**\n   * Delete a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - A pronunciation challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the given challenge ID.\n   * @throws {Promise.<Error>} {@link PronunciationChallenge#id} field is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  deletePronunciationChallenge(challengeId) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/pronunciation/' +\n      challengeId;\n    return this._connection._secureAjaxDelete(url)\n      .then(() => challengeId);\n  }\n}\n"
  },
  {
    "__docId__": 200,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PronunciationChallengeController",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js",
    "importStyle": "PronunciationChallengeController",
    "description": "Controller class for the PronunciationChallenge model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 202,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createPronunciationChallenge",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#createPronunciationChallenge",
    "access": null,
    "description": "Create a pronunciation challenge. The created challenge will be part of the current active {@link Organisation}\nderived from the OAuth2 scope.",
    "lineNumber": 30,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the newly created PronunciationChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PronunciationChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "Object to create."
      },
      {
        "nullable": null,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "audioBlob",
        "description": "Audio fragment to link to the challenge."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the newly created PronunciationChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "challenge parameter of type \"PronunciationChallenge\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "audioBlob parameter of type \"Blob\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 204,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationChallenge",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#getPronunciationChallenge",
    "access": null,
    "description": "Get a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 61,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing a PronunciationChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a pronunciation challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing a PronunciationChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 205,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPronunciationChallenges",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#getPronunciationChallenges",
    "access": null,
    "description": "Get and return all pronunciation challenges in the current active {@link Organisation} derived from\nthe OAuth2 scope.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge[]>} Promise containing a list of PronunciationChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge[]>"
      ],
      "spread": false,
      "description": "Promise containing a list of PronunciationChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 206,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "deletePronunciationChallenge",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge-controller.js~PronunciationChallengeController#deletePronunciationChallenge",
    "access": null,
    "description": "Delete a pronunciation challenge from the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the given challenge ID."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "A pronunciation challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the given challenge ID."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link PronunciationChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 207,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js",
    "memberof": null,
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class PronunciationChallenge domain model\n */\nexport default class PronunciationChallenge {\n  /**\n   * Create a pronunciation challenge domain model.\n   *\n   * @param {?string} id - The pronunciation challenge identifier. If none is given, one is generated.\n   * @param {string} transcription - The spoken word or sentence as plain text.\n   * @param {?string} referenceAudioUrl - The reference audio fragment URL. If one is not yet available or audio is\n   * not yet registered to the challenge it can be set to 'null'.\n   * @throws {Error} id parameter of type \"string|null\" is required.\n   * @throws {Error} transcription parameter of type \"string\" is required.\n   * @throws {Error} referenceAudioUrl parameter of type \"string|null\" is required.\n   */\n  constructor(id = null, transcription, referenceAudioUrl = null) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error(\n        'id parameter of type \"string|null\" is required');\n    }\n\n    if (typeof transcription !== 'string') {\n      throw new Error(\n        'transcription parameter of type \"string\" is required');\n    }\n\n    if (referenceAudioUrl !== null && typeof referenceAudioUrl !== 'string') {\n      throw new Error('referenceAudioUrl parameter of type \"string|null\" is required');\n    }\n\n    /**\n     * The pronunciation challenge identifier. If none is given, one is generated.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * The spoken word or sentence as plain text.\n     * @type {string}\n     */\n    this.transcription = transcription;\n\n    /**\n     * The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'.\n     * @type {string}\n     */\n    this.status = null;\n\n    /**\n     * The reference audio fragment as streaming audio link.\n     * @type {string}\n     */\n    this.referenceAudioUrl = referenceAudioUrl;\n  }\n}\n"
  },
  {
    "__docId__": 208,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PronunciationChallenge",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js",
    "importStyle": "PronunciationChallenge",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "PronunciationChallenge domain model"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 209,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge#constructor",
    "access": null,
    "description": "Create a pronunciation challenge domain model.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The pronunciation challenge identifier. If none is given, one is generated."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "transcription",
        "description": "The spoken word or sentence as plain text."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceAudioUrl",
        "description": "The reference audio fragment URL. If one is not yet available or audio is\nnot yet registered to the challenge it can be set to 'null'."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "id parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "transcription parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "referenceAudioUrl parameter of type \"string|null\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 210,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge#id",
    "access": null,
    "description": "The pronunciation challenge identifier. If none is given, one is generated.",
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 211,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "transcription",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge#transcription",
    "access": null,
    "description": "The spoken word or sentence as plain text.",
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 212,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "status",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge#status",
    "access": null,
    "description": "The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 213,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "referenceAudioUrl",
    "memberof": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge",
    "longname": "src/administrative-sdk/pronunciation-challenge/pronunciation-challenge.js~PronunciationChallenge#referenceAudioUrl",
    "access": null,
    "description": "The reference audio fragment as streaming audio link.",
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/role/role-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/role/role-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Role from './role';\n\n/**\n * Controller class for the Role model.\n * @private\n */\nexport default class RoleController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Get and return all roles available in the API.\n   *\n   * @returns {Promise.<Role[]>} Promise containing an array of Roles.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  getRoles() {\n    const url = this._connection._settings.apiUrl + '/roles';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const roles = [];\n        data.forEach(datum => {\n          const role = new Role(datum.name, datum.permissions);\n          roles.push(role);\n        });\n        return roles;\n      });\n  }\n\n  /**\n   * Get a single role.\n   *\n   * @param {string} roleId - Identifier of the role.\n   * @returns {Promise.<Role>} Promise containing a Role.\n   * @throws {Promise.<Error>} roleId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getRole(roleId) {\n    if (typeof roleId !== 'string') {\n      return Promise.reject(new Error('roleId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/roles/' + roleId;\n    return this._connection._secureAjaxGet(url)\n      .then(data => new Role(data.name, data.permissions));\n  }\n}\n"
  },
  {
    "__docId__": 215,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RoleController",
    "memberof": "src/administrative-sdk/role/role-controller.js",
    "longname": "src/administrative-sdk/role/role-controller.js~RoleController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/role/role-controller.js",
    "importStyle": "RoleController",
    "description": "Controller class for the Role model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 216,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/role/role-controller.js~RoleController",
    "longname": "src/administrative-sdk/role/role-controller.js~RoleController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 217,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/role/role-controller.js~RoleController",
    "longname": "src/administrative-sdk/role/role-controller.js~RoleController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRoles",
    "memberof": "src/administrative-sdk/role/role-controller.js~RoleController",
    "longname": "src/administrative-sdk/role/role-controller.js~RoleController#getRoles",
    "access": null,
    "description": "Get and return all roles available in the API.",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Role[]>} Promise containing an array of Roles."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Role[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Roles."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 219,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getRole",
    "memberof": "src/administrative-sdk/role/role-controller.js~RoleController",
    "longname": "src/administrative-sdk/role/role-controller.js~RoleController#getRole",
    "access": null,
    "description": "Get a single role.",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<Role>} Promise containing a Role."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "roleId",
        "description": "Identifier of the role."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<Role>"
      ],
      "spread": false,
      "description": "Promise containing a Role."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "roleId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 220,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/role/role.js",
    "memberof": null,
    "longname": "src/administrative-sdk/role/role.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * Role domain model. Represents a role a {@link User} can take on.\n */\nexport default class Role {\n  /**\n   * Create a Role.\n   *\n   * @param {string} name - Name of the role.\n   * @param {Array.<string>} permissions - Permissions this role can take on.\n   * @throws {Error} role parameter of type \"string\" is required.\n   * @throws {Error} permission parameter of type \"Array.<string>\" is required.\n   */\n  constructor(name, permissions) {\n    if (typeof name !== 'string') {\n      throw new Error('role parameter of type \"string\" is required');\n    }\n\n    if (!(permissions instanceof Array) || permissions.length === 0) {\n      throw new Error('permission parameter of type \"Array.<string>\" is required');\n    }\n\n    /**\n     * @type {string} Name of the role.\n     */\n    this.name = name;\n\n    /**\n     * @type {Array.<string>} Permissions this role can take on.\n     */\n    this.permissions = permissions;\n  }\n}\n"
  },
  {
    "__docId__": 221,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Role",
    "memberof": "src/administrative-sdk/role/role.js",
    "longname": "src/administrative-sdk/role/role.js~Role",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/role/role.js",
    "importStyle": "Role",
    "description": "Role domain model. Represents a role a {@link User} can take on.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 222,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/role/role.js~Role",
    "longname": "src/administrative-sdk/role/role.js~Role#constructor",
    "access": null,
    "description": "Create a Role.",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the role."
      },
      {
        "nullable": null,
        "types": [
          "Array.<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "permissions",
        "description": "Permissions this role can take on."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "role parameter of type \"string\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "permission parameter of type \"Array.<string>\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 223,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "src/administrative-sdk/role/role.js~Role",
    "longname": "src/administrative-sdk/role/role.js~Role#name",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "permissions",
    "memberof": "src/administrative-sdk/role/role.js~Role",
    "longname": "src/administrative-sdk/role/role.js~Role#permissions",
    "access": null,
    "description": "",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Array.<string>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 225,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import SpeechChallenge from './speech-challenge';\n\n/**\n * Controller class for the SpeechChallenge model.\n * @private\n */\nexport default class SpeechChallengeController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create a speech challenge in the current active {@link Organisation} derived from the OAuth2 scope.\n   * The created speech challenge will not contain the submitted audio file, but instead a property\n   * `referenceAudioUrl` which is the URL to download the submitted audio file.\n   * Additional information like .srt files or images can also be added in HTML5 Blob format.\n   * The returned SpeechChallenge will contain links to download the given files.\n   *\n   * @param {SpeechChallenge} speechChallenge - Object to create.\n   * @param {?Blob} audioBlob - Audio fragment to link to the challenge.\n   * @param {?Blob} srtFile - SRT file in HTML5 Blob format to accompany the challenge.\n   * @param {?Blob} image - Image file in HTML5 Blob format to accompany the challenge.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing the newly created SpeechChallenge.\n   * @throws {Promise.<Error>} speechChallenge field of type \"SpeechChallenge\" is required\n   * @throws {Promise.<Error>} audioBlob parameter of type \"Blob\" is required.\n   * @throws {Promise.<Error>} srtFile parameter of type \"Blob\" is required.\n   * @throws {Promise.<Error>} image parameter of type \"Blob\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createSpeechChallenge(speechChallenge, audioBlob = null, srtFile = null, image = null) {\n    if (!(speechChallenge instanceof SpeechChallenge)) {\n      return Promise.reject(new Error('speechChallenge field of type \"SpeechChallenge\" is required'));\n    }\n    if (audioBlob !== null && !(audioBlob instanceof Blob)) {\n      return Promise.reject(new Error('audioBlob parameter of type \"Blob|null\" is required'));\n    }\n    if (srtFile !== null && !(srtFile instanceof Blob)) {\n      return Promise.reject(new Error('srtFile parameter of type \"Blob|null\" is required'));\n    }\n    if (image !== null && !(image instanceof Blob)) {\n      return Promise.reject(new Error('image parameter of type \"Blob|null\" is required'));\n    }\n    speechChallenge.referenceAudio = audioBlob;\n    speechChallenge.srt = srtFile;\n    speechChallenge.image = image;\n    const fd = JSON.stringify(speechChallenge);\n    const url = this._connection._settings.apiUrl + '/challenges/speech';\n\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new SpeechChallenge(data.id, data.topic, data.referenceAudioUrl, data.srtUrl, data.imageUrl);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        return result;\n      });\n  }\n\n  /**\n   * Get a speech challenge from the current active {@link Organisation} derived from the OAuth2 scope.\n   * The returned speech challenge will not contain an audio file, but instead a property\n   * `referenceAudioUrl` which is the URL to download the submitted audio file.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier.\n   * @returns {Promise.<PronunciationChallenge>} Promise containing a SpeechChallenge.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} field of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechChallenge(challengeId) {\n    if (typeof challengeId !== 'string') {\n      return Promise.reject(new Error('challengeId field of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/speech/' + challengeId;\n\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenge = new SpeechChallenge(data.id, data.topic, data.referenceAudioUrl, data.srtUrl, data.imageUrl);\n        challenge.created = new Date(data.created);\n        challenge.updated = new Date(data.updated);\n        return challenge;\n      });\n  }\n\n  /**\n   * Get and return all speech challenges in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<SpeechChallenge[]>} Promise containing an array of SpeechChallenges.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechChallenges() {\n    const url = this._connection._settings.apiUrl + '/challenges/speech';\n\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const challenges = [];\n        data.forEach(datum => {\n          const challenge = new SpeechChallenge(datum.id,\n            datum.topic, datum.referenceAudioUrl, data.srtUrl, data.imageUrl);\n          challenge.created = new Date(datum.created);\n          challenge.updated = new Date(datum.updated);\n          challenges.push(challenge);\n        });\n        return challenges;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 226,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SpeechChallengeController",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/speech-challenge/speech-challenge-controller.js",
    "importStyle": "SpeechChallengeController",
    "description": "Controller class for the SpeechChallenge model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 227,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 228,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createSpeechChallenge",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController#createSpeechChallenge",
    "access": null,
    "description": "Create a speech challenge in the current active {@link Organisation} derived from the OAuth2 scope.\nThe created speech challenge will not contain the submitted audio file, but instead a property\n`referenceAudioUrl` which is the URL to download the submitted audio file.\nAdditional information like .srt files or images can also be added in HTML5 Blob format.\nThe returned SpeechChallenge will contain links to download the given files.",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing the newly created SpeechChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpeechChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "speechChallenge",
        "description": "Object to create."
      },
      {
        "nullable": true,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "audioBlob",
        "description": "Audio fragment to link to the challenge."
      },
      {
        "nullable": true,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "srtFile",
        "description": "SRT file in HTML5 Blob format to accompany the challenge."
      },
      {
        "nullable": true,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "image",
        "description": "Image file in HTML5 Blob format to accompany the challenge."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing the newly created SpeechChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "speechChallenge field of type \"SpeechChallenge\" is required"
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "audioBlob parameter of type \"Blob\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "srtFile parameter of type \"Blob\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "image parameter of type \"Blob\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 230,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechChallenge",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController#getSpeechChallenge",
    "access": null,
    "description": "Get a speech challenge from the current active {@link Organisation} derived from the OAuth2 scope.\nThe returned speech challenge will not contain an audio file, but instead a property\n`referenceAudioUrl` which is the URL to download the submitted audio file.",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<PronunciationChallenge>} Promise containing a SpeechChallenge."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<PronunciationChallenge>"
      ],
      "spread": false,
      "description": "Promise containing a SpeechChallenge."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} field of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 231,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechChallenges",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge-controller.js~SpeechChallengeController#getSpeechChallenges",
    "access": null,
    "description": "Get and return all speech challenges in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 96,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechChallenge[]>} Promise containing an array of SpeechChallenges."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechChallenge[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of SpeechChallenges."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 232,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/speech-challenge/speech-challenge.js",
    "memberof": null,
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class SpeechChallenge domain model.\n */\nexport default class SpeechChallenge {\n  /**\n   * Create a speech SpeechChallenge domain model.\n   *\n   * @param {?string} id - The speech challenge identifier. If none is given, one is generated.\n   * @param {?string} topic - A question or topic serving as guidance.\n   * @param {?string} referenceAudioUrl - The reference audio fragment URL. If one is not yet available or audio is\n   * not yet registered to the challenge it can be set to 'null'.\n   * @param {?string} srtUrl - URL of a possible .srt file to accompany this challenge.\n   * @param {?string} imageUrl - URL of a possible image file to accompany this challenge.\n   * @throws {Error} srtUrl parameter of type \"string|null\" is required.\n   * @throws {Error} imageUrl parameter of type \"string|null\" is required.\n   */\n  constructor(id = null, topic = null, referenceAudioUrl = null, srtUrl = null, imageUrl = null) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error(\n        'id parameter of type \"string|null\" is required');\n    }\n\n    if (topic !== null && typeof topic !== 'string') {\n      throw new Error(\n        'topic parameter of type \"string|null\" is required');\n    }\n\n    if (referenceAudioUrl !== null && typeof referenceAudioUrl !== 'string') {\n      throw new Error(\n        'referenceAudioUrl parameter of type \"string|null\" is required');\n    }\n\n    if (srtUrl !== null && typeof srtUrl !== 'string') {\n      throw new Error('srtUrl parameter of type \"string|null\" is required');\n    }\n\n    if (imageUrl !== null && typeof imageUrl !== 'string') {\n      throw new Error('imageUrl parameter of type \"string|null\" is required');\n    }\n\n    /**\n     * The speech challenge identifier. If none is given, one is generated.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * A question or topic serving as guidance.\n     * @type {string}\n     */\n    this.topic = topic;\n\n    /**\n     * The reference audio fragment as streaming audio link.\n     * @type {string}\n     */\n    this.referenceAudioUrl = referenceAudioUrl;\n\n    /**\n     * URL of a possible .srt file to accompany this challenge.\n     * @type {string}\n     */\n    this.srtUrl = srtUrl;\n\n    /**\n     * URL of a possible image file to accompany this challenge.\n     * @type {string}\n     */\n    this.imageUrl = imageUrl;\n  }\n}\n"
  },
  {
    "__docId__": 233,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SpeechChallenge",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/speech-challenge/speech-challenge.js",
    "importStyle": "SpeechChallenge",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SpeechChallenge domain model."
      }
    ],
    "interface": false
  },
  {
    "__docId__": 234,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#constructor",
    "access": null,
    "description": "Create a speech SpeechChallenge domain model.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The speech challenge identifier. If none is given, one is generated."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "A question or topic serving as guidance."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "referenceAudioUrl",
        "description": "The reference audio fragment URL. If one is not yet available or audio is\nnot yet registered to the challenge it can be set to 'null'."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "srtUrl",
        "description": "URL of a possible .srt file to accompany this challenge."
      },
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "imageUrl",
        "description": "URL of a possible image file to accompany this challenge."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "srtUrl parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "imageUrl parameter of type \"string|null\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 235,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#id",
    "access": null,
    "description": "The speech challenge identifier. If none is given, one is generated.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 236,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "topic",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#topic",
    "access": null,
    "description": "A question or topic serving as guidance.",
    "lineNumber": 51,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 237,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "referenceAudioUrl",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#referenceAudioUrl",
    "access": null,
    "description": "The reference audio fragment as streaming audio link.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "srtUrl",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#srtUrl",
    "access": null,
    "description": "URL of a possible .srt file to accompany this challenge.",
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "imageUrl",
    "memberof": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge",
    "longname": "src/administrative-sdk/speech-challenge/speech-challenge.js~SpeechChallenge#imageUrl",
    "access": null,
    "description": "URL of a possible image file to accompany this challenge.",
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/speech-recording/speech-recording-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Base64Utils from '../utils/base64-utils';\nimport Connection from '../connection/connection-controller';\nimport SpeechRecording from './speech-recording';\nimport when from 'when';\n\n/**\n * Controller class for the SpeechRecording model.\n * @private\n */\nexport default class SpeechRecordingController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    this._connection = connection;\n  }\n\n  /**\n   * Initialise the speech recording challenge through RPCs.\n   *\n   * @param {SpeechChallenge} challenge - SpeechChallenge.\n   * @private\n   */\n  speechRecordingInitChallenge(challenge) {\n    return this._connection._session.call('nl.itslanguage.recording.init_challenge',\n      [this._connection._recordingId, challenge.id]).then(\n      // RPC success callback\n      recordingId => {\n        console.log('Challenge initialised for recordingId: ' + this._connection._recordingId);\n        return recordingId;\n      });\n  }\n\n  /**\n   * Initialise the speech recording audio specs through RPCs.\n   *\n   * @param {AudioRecorder} recorder - AudioRecorder.\n   * @param {Function} dataavailableCb - Callback.\n   * @private\n   */\n  speechRecordingInitAudio(recorder, dataavailableCb) {\n    // Indicate to the socket server that we're about to start recording a\n    // challenge. This allows the socket server some time to fetch the metadata\n    // and reference audio to start the recording when audio is actually submitted.\n    const specs = recorder.getAudioSpecs();\n    return this._connection._session.call('nl.itslanguage.recording.init_audio',\n      [this._connection._recordingId, specs.audioFormat], specs.audioParameters)\n      .then(recordingId => {\n        console.log('Accepted audio parameters for recordingId after init_audio: ' + this._connection._recordingId);\n        // Start listening for streaming data.\n        recorder.addEventListener('dataavailable', dataavailableCb);\n        return recordingId;\n      });\n  }\n\n  /**\n   * Start a speech recording from streaming audio.\n   *\n   * @param {SpeechChallenge} challenge - The speech challenge to perform.\n   * @param {AudioRecorder} recorder - The audio recorder to extract audio from.\n   * @returns {Promise.<SpeechRecording>} A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}.\n   * @emits {string} 'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio.\n   * @throws {Promise.<Error>} If challenge is not an object or not defined.\n   * @throws {Promise.<Error>} If challenge has no id.\n   * @throws {Promise.<Error>} If the connection is not open.\n   * @throws {Promise.<Error>} If the recorder is already recording.\n   * @throws {Promise.<Error>} If a session is already in progress.\n   * @throws {Promise.<Error>} If something went wrong during recording.\n   */\n  startStreamingSpeechRecording(challenge, recorder) {\n    // Validate required domain model.\n    // Validate environment prerequisites.\n    if (typeof challenge !== 'object' || !challenge) {\n      return Promise.reject(new Error('\"challenge\" parameter is required or invalid'));\n    }\n    if (!challenge.id) {\n      return Promise.reject(new Error('challenge.id field is required'));\n    }\n    if (!this._connection._session) {\n      return Promise.reject(new Error('WebSocket connection was not open.'));\n    }\n    if (recorder.isRecording()) {\n      return Promise.reject(new Error('Recorder should not yet be recording.'));\n    }\n    if (this._connection._recordingId !== null) {\n      return Promise.reject(new Error('Session with recordingId ' + this._connection._recordingId +\n        ' still in progress.'));\n    }\n    const self = this;\n    return new when.Promise((resolve, reject, notify) => {\n      self._connection._recordingId = null;\n\n      function _cb(data) {\n        const recording = new SpeechRecording(\n          challenge.id, data.userId, data.id, new Date(data.created), new Date(data.updated),\n          self._connection.addAccessToken(data.audioUrl));\n        resolve({recordingId: self._connection._recordingId, recording});\n      }\n\n      function recordedCb(activeRecordingId, audioBlob, forcedStop) {\n        self._connection._session.call('nl.itslanguage.recording.close',\n          [self._connection._recordingId]).then(\n          // RPC success callback\n          res => {\n            // Pass along details to the success callback\n            _cb(res, forcedStop);\n          },\n          // RPC error callback\n          res => {\n            Connection.logRPCError(res);\n            reject(res);\n          });\n        recorder.removeEventListener('recorded', recordedCb);\n        recorder.removeEventListener('dataavailable', startStreaming);\n      }\n\n      // Start streaming the binary audio when the user instructs\n      // the audio recorder to start recording.\n      function startStreaming(chunk) {\n        const encoded = Base64Utils._arrayBufferToBase64(chunk);\n        console.log('Sending audio chunk to websocket for recordingId: ' +\n          self._connection._recordingId);\n        self._connection._session.call('nl.itslanguage.recording.write',\n          [self._connection._recordingId, encoded, 'base64']).then(\n          // RPC success callback\n          res => {\n            // Wrote data.\n            console.log('Wrote data');\n            return res;\n          },\n          // RPC error callback\n          res => {\n            Connection.logRPCError(res);\n            reject(res);\n          }\n        );\n      }\n\n      function startRecording(recordingId) {\n        self._connection._recordingId = recordingId;\n        console.log('Got recordingId after initialisation: ' + self._connection._recordingId);\n      }\n\n      recorder.addEventListener('recorded', recordedCb);\n      self._connection._session.call('nl.itslanguage.recording.init_recording', [])\n        .then(startRecording)\n        .then(() =>\n          self.speechRecordingInitChallenge(challenge)\n              .then(() => {\n                const p = new Promise(resolve_ => {\n                  if (recorder.hasUserMediaApproval()) {\n                    resolve_();\n                  } else {\n                    recorder.addEventListener('ready', resolve_);\n                  }\n                });\n                p.then(() => {\n                  self.speechRecordingInitAudio(recorder, startStreaming)\n                    .catch(reject);\n                });\n              })\n            .then(() => notify('ReadyToReceive'))\n        )\n            .catch(reject);\n    })\n      .then(res => {\n        self._connection._recordingId = null;\n        return Promise.resolve(res);\n      })\n      .catch(error => {\n        self._connection._recordingId = null;\n        Connection.logRPCError(error);\n        return Promise.reject(error);\n      });\n  }\n\n  /**\n   * Get a speech recording in a speech challenge from the current active {@link Organisation} derived from the OAuth2\n   * scope.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier.\n   * @param {string} recordingId - Specify a speech recording identifier.\n   * @returns {Promise.<SpeechRecording>} Promise containing a SpeechRecording.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} field is required.\n   * @throws {Promise.<Error>} {@link SpeechRecording#id} field is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechRecording(challengeId, recordingId) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    if (!recordingId) {\n      return Promise.reject(new Error('recordingId field is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/speech/' + challengeId + '/recordings/' + recordingId;\n    return this._connection._secureAjaxGet(url)\n      .then(data => new SpeechRecording(challengeId, data.userId, data.id, new Date(data.created),\n          new Date(data.updated), this._connection.addAccessToken(data.audioUrl)));\n  }\n\n  /**\n   * Get and return all speech recordings in a specific speech challenge from the current active {@link Organisation}\n   * derived from the OAuth2 scope.\n   *\n   * @param {string} challengeId - Specify a speech challenge identifier to list speech recordings for.\n   * @returns {Promise.<SpeechRecording[]>} Promise containing an array of SpeechRecording.\n   * @throws {Promise.<Error>} {@link SpeechChallenge#id} is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getSpeechRecordings(challengeId) {\n    if (!challengeId) {\n      return Promise.reject(new Error('challengeId field is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/challenges/speech/' + challengeId + '/recordings';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const recordings = [];\n        data.forEach(datum => {\n          const recording = new SpeechRecording(challengeId, datum.userId, datum.id, new Date(datum.created),\n            new Date(datum.updated), this._connection.addAccessToken(datum.audioUrl));\n          recordings.push(recording);\n        });\n        return recordings;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 241,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SpeechRecordingController",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/speech-recording/speech-recording-controller.js",
    "importStyle": "SpeechRecordingController",
    "description": "Controller class for the SpeechRecording model.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 242,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 243,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#_connection",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "speechRecordingInitChallenge",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#speechRecordingInitChallenge",
    "access": "private",
    "description": "Initialise the speech recording challenge through RPCs.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "SpeechChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "SpeechChallenge."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 245,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "speechRecordingInitAudio",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#speechRecordingInitAudio",
    "access": "private",
    "description": "Initialise the speech recording audio specs through RPCs.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "AudioRecorder."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "dataavailableCb",
        "description": "Callback."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 246,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startStreamingSpeechRecording",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#startStreamingSpeechRecording",
    "access": null,
    "description": "Start a speech recording from streaming audio.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording>} A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpeechChallenge"
        ],
        "spread": false,
        "optional": false,
        "name": "challenge",
        "description": "The speech challenge to perform."
      },
      {
        "nullable": null,
        "types": [
          "AudioRecorder"
        ],
        "spread": false,
        "optional": false,
        "name": "recorder",
        "description": "The audio recorder to extract audio from."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording>"
      ],
      "spread": false,
      "description": "A {@link https://github.com/cujojs/when} Promise containing a {@link SpeechRecording}."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge is not an object or not defined."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If challenge has no id."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the connection is not open."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the recorder is already recording."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If a session is already in progress."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong during recording."
      }
    ],
    "emits": [
      {
        "types": [
          "string"
        ],
        "description": "'ReadyToReceive' when the call is made to receive audio. The recorder can now send audio."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 247,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechRecording",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#getSpeechRecording",
    "access": null,
    "description": "Get a speech recording in a speech challenge from the current active {@link Organisation} derived from the OAuth2\nscope.",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording>} Promise containing a SpeechRecording."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "recordingId",
        "description": "Specify a speech recording identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording>"
      ],
      "spread": false,
      "description": "Promise containing a SpeechRecording."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechRecording#id} field is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 248,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSpeechRecordings",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController",
    "longname": "src/administrative-sdk/speech-recording/speech-recording-controller.js~SpeechRecordingController#getSpeechRecordings",
    "access": null,
    "description": "Get and return all speech recordings in a specific speech challenge from the current active {@link Organisation}\nderived from the OAuth2 scope.",
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<SpeechRecording[]>} Promise containing an array of SpeechRecording."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "Specify a speech challenge identifier to list speech recordings for."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<SpeechRecording[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of SpeechRecording."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "{@link SpeechChallenge#id} is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 249,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/speech-recording/speech-recording.js",
    "memberof": null,
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class SpeechRecording domain model\n */\nexport default class SpeechRecording {\n  /**\n   * Create a speech recording domain model.\n   *\n   * @param {string} challengeId - The SpeechChallenge identifier this speech is recorded for.\n   * @param {string} userId - The User identifier on whose behalf this audio is recorded.\n   * @param {string} id - The speech recording identifier.\n   * @param {Date} created - The creation date of the entity.\n   * @param {Date} updated - The most recent update date of the entity.\n   * @param {string} audioUrl - The audio fragment as streaming audio link.\n   */\n  constructor(challengeId, userId, id, created, updated, audioUrl) {\n    /**\n     * The speech recording identifier.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * The SpeechChallenge identifier this speech is recorded for.\n     * @type {string}\n     */\n    this.challengeId = challengeId;\n\n    /**\n     * The User instance on whose behalf this audio is recorded.\n     * @type {string}\n     */\n    this.userId = userId;\n\n    /**\n     * The creation date of the entity.\n     * @type {Date}\n     */\n    this.created = created;\n\n    /**\n     * The most recent update date of the entity.\n     * @type {Date}\n     */\n    this.updated = updated;\n\n    /**\n     * The audio fragment as streaming audio link.\n     * @type {string}\n     */\n    this.audioUrl = audioUrl;\n  }\n}\n"
  },
  {
    "__docId__": 250,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SpeechRecording",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/speech-recording/speech-recording.js",
    "importStyle": "SpeechRecording",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "SpeechRecording domain model"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 251,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#constructor",
    "access": null,
    "description": "Create a speech recording domain model.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "challengeId",
        "description": "The SpeechChallenge identifier this speech is recorded for."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "The User identifier on whose behalf this audio is recorded."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The speech recording identifier."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "created",
        "description": "The creation date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "Date"
        ],
        "spread": false,
        "optional": false,
        "name": "updated",
        "description": "The most recent update date of the entity."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "audioUrl",
        "description": "The audio fragment as streaming audio link."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 252,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#id",
    "access": null,
    "description": "The speech recording identifier.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "challengeId",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#challengeId",
    "access": null,
    "description": "The SpeechChallenge identifier this speech is recorded for.",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 254,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userId",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#userId",
    "access": null,
    "description": "The User instance on whose behalf this audio is recorded.",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#created",
    "access": null,
    "description": "The creation date of the entity.",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 256,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "updated",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#updated",
    "access": null,
    "description": "The most recent update date of the entity.",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 257,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "audioUrl",
    "memberof": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording",
    "longname": "src/administrative-sdk/speech-recording/speech-recording.js~SpeechRecording#audioUrl",
    "access": null,
    "description": "The audio fragment as streaming audio link.",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/user/user-controller.js",
    "memberof": null,
    "longname": "src/administrative-sdk/user/user-controller.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import User from './user';\n\n/**\n * Controller class for the User model.\n * @private\n */\nexport default class UserController {\n  /**\n   * @param {Connection} connection - Object to use for making a connection to the REST API and Websocket server.\n   */\n  constructor(connection) {\n    /**\n     * Object to use for making a connection to the REST API and Websocket server.\n     * @type {Connection}\n     */\n    this._connection = connection;\n  }\n\n  /**\n   * Create a user. The user will be created in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {User} user - User to create.\n   * @returns {Promise.<User>} Promise containing the newly created User.\n   * @throws {Promise.<Error>} user parameter of type \"User\" is required.\n   * @throws {Promise.<Error>} If the server returned an error.\n   */\n  createUser(user) {\n    if (!(user instanceof User)) {\n      return Promise.reject(new Error('user parameter of type \"User\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/users';\n    const fd = JSON.stringify(user);\n    return this._connection._secureAjaxPost(url, fd)\n      .then(data => {\n        const result = new User(data.id, data.profile, data.groups, data.roles);\n        result.created = new Date(data.created);\n        result.updated = new Date(data.updated);\n        return result;\n      });\n  }\n\n  /**\n   * Get a user in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @param {string} userId - Specify a user identifier.\n   * @returns {Promise.<User>} Promise containing a User.\n   * @throws {Promise.<Error>} userId parameter of type \"string\" is required.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getUser(userId) {\n    if (typeof userId !== 'string') {\n      return Promise.reject(new Error('userId parameter of type \"string\" is required'));\n    }\n    const url = this._connection._settings.apiUrl + '/users/' + userId;\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const user = new User(data.id, data.profile, data.groups, data.roles);\n        user.created = new Date(data.created);\n        user.updated = new Date(data.updated);\n        return user;\n      });\n  }\n\n  /**\n   * List all users in the current active {@link Organisation} derived from the OAuth2 scope.\n   *\n   * @returns {Promise.<User[]>} Promise containing an array of Users.\n   * @throws {Promise.<Error>} If no result could not be found.\n   */\n  getUsers() {\n    const url = this._connection._settings.apiUrl + '/users';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const users = [];\n        data.forEach(datum => {\n          const user = new User(datum.id, datum.profile, datum.groups, datum.roles);\n          user.created = new Date(datum.created);\n          user.updated = new Date(datum.updated);\n          users.push(user);\n        });\n        return users;\n      });\n  }\n\n  /**\n   * Get the current authenticated user.\n   *\n   * @returns {Promise.<User>} The current authenticated user.\n   * @throws {Promise.<Error>} If something went wrong in the server.\n   */\n  getCurrentUser() {\n    const url = this._connection._settings.apiUrl + '/user';\n    return this._connection._secureAjaxGet(url)\n      .then(data => {\n        const user = new User(data.id, data.profile, data.groups, data.roles);\n        user.created = new Date(data.created);\n        user.updated = new Date(data.updated);\n        return user;\n      });\n  }\n}\n"
  },
  {
    "__docId__": 259,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "UserController",
    "memberof": "src/administrative-sdk/user/user-controller.js",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/user/user-controller.js",
    "importStyle": "UserController",
    "description": "Controller class for the User model.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 260,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#constructor",
    "access": null,
    "description": "",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Connection"
        ],
        "spread": false,
        "optional": false,
        "name": "connection",
        "description": "Object to use for making a connection to the REST API and Websocket server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 261,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_connection",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#_connection",
    "access": null,
    "description": "Object to use for making a connection to the REST API and Websocket server.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Connection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createUser",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#createUser",
    "access": null,
    "description": "Create a user. The user will be created in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} Promise containing the newly created User."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "User"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "User to create."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "Promise containing the newly created User."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "user parameter of type \"User\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If the server returned an error."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 263,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUser",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#getUser",
    "access": null,
    "description": "Get a user in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 50,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} Promise containing a User."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "userId",
        "description": "Specify a user identifier."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "Promise containing a User."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "userId parameter of type \"string\" is required."
      },
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 264,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getUsers",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#getUsers",
    "access": null,
    "description": "List all users in the current active {@link Organisation} derived from the OAuth2 scope.",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User[]>} Promise containing an array of Users."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User[]>"
      ],
      "spread": false,
      "description": "Promise containing an array of Users."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If no result could not be found."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 265,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentUser",
    "memberof": "src/administrative-sdk/user/user-controller.js~UserController",
    "longname": "src/administrative-sdk/user/user-controller.js~UserController#getCurrentUser",
    "access": null,
    "description": "Get the current authenticated user.",
    "lineNumber": 91,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise.<User>} The current authenticated user."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise.<User>"
      ],
      "spread": false,
      "description": "The current authenticated user."
    },
    "throws": [
      {
        "types": [
          "Promise.<Error>"
        ],
        "description": "If something went wrong in the server."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 266,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/user/user.js",
    "memberof": null,
    "longname": "src/administrative-sdk/user/user.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Profile from '../profile/profile';\n\n/**\n * @class User domain model\n */\nexport default class User {\n  /**\n   * Create a User domain model.\n   *\n   * @param {?string} id - The user identifier. If none is given, one is generated.\n   * @param {?Profile} profile - Profile of the User.\n   * @param {?Array.<Group>} groups - Groups this User is part of.\n   * @param {Array<.string>} roles - Names of the {@link Role}s this user can take on.\n   * @throws {Error} id parameter of type \"string|null\" is required.\n   * @throws {Error} profile parameter of type \"Profile|null\" is required.\n   * @throws {Error} groups parameter of type \"Array.<Groups>|null\" is required.\n   * @throws {Error} non-empty roles parameter of type \"Array.<String>\" is required.\n   */\n  constructor(id, profile, groups, roles) {\n    if (id !== null && typeof id !== 'string') {\n      throw new Error('id parameter of type \"string|null\" is required');\n    }\n\n    if (profile !== null && !(profile instanceof Profile)) {\n      throw new Error('profile parameter of type \"Profile|null\" is required');\n    }\n\n    if (groups !== null && !Array.isArray(groups)) {\n      throw new Error('groups parameter of type \"Array.<Groups>|null\" is required');\n    }\n\n    if (!Array.isArray(roles) || roles.length === 0) {\n      throw new Error('non-empty roles parameter of type \"Array.<string>\" is required');\n    }\n\n    /**\n     * The user identifier. If none is given, one is generated.\n     * @type {string}\n     */\n    this.id = id;\n\n    /**\n     * Profile of the User.\n     * @type {Profile}\n     */\n    this.profile = profile;\n\n    /**\n     * Groups this User is part of.\n     * @type {Array.<Group>}\n     */\n    this.groups = groups;\n\n    /**\n     * Names of the {@link Role}s this user can take on.\n     * @type {Array.<.Role>}\n     */\n    this.roles = roles;\n\n    /**\n     * The creation date of the entity.\n     * @type {Date}\n     */\n    this.created = null;\n\n    /**\n     * The most recent update date of the entity.\n     * @type {Date}\n     */\n    this.updated = null;\n  }\n}\n"
  },
  {
    "__docId__": 267,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "User",
    "memberof": "src/administrative-sdk/user/user.js",
    "longname": "src/administrative-sdk/user/user.js~User",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/user/user.js",
    "importStyle": "User",
    "description": "",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "User domain model"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 268,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#constructor",
    "access": null,
    "description": "Create a User domain model.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": true,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The user identifier. If none is given, one is generated."
      },
      {
        "nullable": true,
        "types": [
          "Profile"
        ],
        "spread": false,
        "optional": false,
        "name": "profile",
        "description": "Profile of the User."
      },
      {
        "nullable": true,
        "types": [
          "Array.<Group>"
        ],
        "spread": false,
        "optional": false,
        "name": "groups",
        "description": "Groups this User is part of."
      },
      {
        "nullable": null,
        "types": [
          "Array<.string>"
        ],
        "spread": false,
        "optional": false,
        "name": "roles",
        "description": "Names of the {@link Role}s this user can take on."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "id parameter of type \"string|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "profile parameter of type \"Profile|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "groups parameter of type \"Array.<Groups>|null\" is required."
      },
      {
        "types": [
          "Error"
        ],
        "description": "non-empty roles parameter of type \"Array.<String>\" is required."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 269,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#id",
    "access": null,
    "description": "The user identifier. If none is given, one is generated.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "profile",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#profile",
    "access": null,
    "description": "Profile of the User.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Profile"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "groups",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#groups",
    "access": null,
    "description": "Groups this User is part of.",
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Array.<Group>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 272,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "roles",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#roles",
    "access": null,
    "description": "Names of the {@link Role}s this user can take on.",
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Array.<.Role>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#created",
    "access": null,
    "description": "The creation date of the entity.",
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 274,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "updated",
    "memberof": "src/administrative-sdk/user/user.js~User",
    "longname": "src/administrative-sdk/user/user.js~User#updated",
    "access": null,
    "description": "The most recent update date of the entity.",
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 275,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/utils/base64-utils.js",
    "memberof": null,
    "longname": "src/administrative-sdk/utils/base64-utils.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @private\n */\nexport default class Base64Utils {\n\n  /**\n   * Convert an array buffer to a base64 encoded binary string.\n   *\n   * @param {buffer} buffer - Buffer of data.\n   * @returns {string} Base64 encoded binary string.\n   */\n  static _arrayBufferToBase64(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    const len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n}\n"
  },
  {
    "__docId__": 276,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Base64Utils",
    "memberof": "src/administrative-sdk/utils/base64-utils.js",
    "longname": "src/administrative-sdk/utils/base64-utils.js~Base64Utils",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/utils/base64-utils.js",
    "importStyle": "Base64Utils",
    "description": "",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 277,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_arrayBufferToBase64",
    "memberof": "src/administrative-sdk/utils/base64-utils.js~Base64Utils",
    "longname": "src/administrative-sdk/utils/base64-utils.js~Base64Utils._arrayBufferToBase64",
    "access": null,
    "description": "Convert an array buffer to a base64 encoded binary string.",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} Base64 encoded binary string."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "Buffer of data."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Base64 encoded binary string."
    },
    "generator": false
  },
  {
    "__docId__": 278,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/word/word.js",
    "memberof": null,
    "longname": "src/administrative-sdk/word/word.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class Word\n */\n  export default class Word {\n  /**\n   * Create a word domain model.\n   *\n   * @param {WordChunk[]} chunks - The spoken sentence, split in graphemes per word.\n   */\n    constructor(chunks) {\n    /**\n     * The spoken sentence, split in graphemes per word.\n     * @type {WordChunk[]}\n     */\n      this.chunks = chunks;\n    }\n}\n"
  },
  {
    "__docId__": 279,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Word",
    "memberof": "src/administrative-sdk/word/word.js",
    "longname": "src/administrative-sdk/word/word.js~Word",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/word/word.js",
    "importStyle": "Word",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Word"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 280,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/word/word.js~Word",
    "longname": "src/administrative-sdk/word/word.js~Word#constructor",
    "access": null,
    "description": "Create a word domain model.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "WordChunk[]"
        ],
        "spread": false,
        "optional": false,
        "name": "chunks",
        "description": "The spoken sentence, split in graphemes per word."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 281,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "chunks",
    "memberof": "src/administrative-sdk/word/word.js~Word",
    "longname": "src/administrative-sdk/word/word.js~Word#chunks",
    "access": null,
    "description": "The spoken sentence, split in graphemes per word.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "WordChunk[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/administrative-sdk/word-chunk/word-chunk.js",
    "memberof": null,
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js",
    "access": null,
    "description": null,
    "lineNumber": 4,
    "content": "/**\n * @class WordChunk domain model\n */\nexport default class WordChunk {\n  /**\n   * Create a word chunk domain model.\n   *\n   * @param {string} graphemes - The graphemes this chunk consists of.\n   * @param {float} score - The audio is scored per grapheme and consists of several measurements. 0 would be bad,\n   * 1 the perfect score.\n   * @param {string} verdict - Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\n   * good when the score is 0.6 or above.\n   * @param {Phoneme[]} phonemes - The phonemes this chunk consists of.\n   */\n  constructor(graphemes, score, verdict, phonemes) {\n    /**\n     * The graphemes this chunk consists of.\n     * @type {string}\n     */\n    this.graphemes = graphemes;\n\n    /**\n     * The audio is scored per grapheme and consists of several measurements. 0 would be bad,\n     * 1 the perfect score.\n     * @type {float}\n     */\n    this.score = score;\n\n    /**\n     * Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\n     * good when the score is 0.6 or above.\n     * @type {string}\n     */\n    this.verdict = verdict;\n\n    /**\n     * The phonemes this chunk consists of.\n     * @type {any}\n     */\n    this.phonemes = phonemes || [];\n  }\n}\n"
  },
  {
    "__docId__": 283,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WordChunk",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/administrative-sdk/word-chunk/word-chunk.js",
    "importStyle": "WordChunk",
    "description": "",
    "lineNumber": 4,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "WordChunk domain model"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk#constructor",
    "access": null,
    "description": "Create a word chunk domain model.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "graphemes",
        "description": "The graphemes this chunk consists of."
      },
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "score",
        "description": "The audio is scored per grapheme and consists of several measurements. 0 would be bad,\n1 the perfect score."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "verdict",
        "description": "Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\ngood when the score is 0.6 or above."
      },
      {
        "nullable": null,
        "types": [
          "Phoneme[]"
        ],
        "spread": false,
        "optional": false,
        "name": "phonemes",
        "description": "The phonemes this chunk consists of."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 285,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "graphemes",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk#graphemes",
    "access": null,
    "description": "The graphemes this chunk consists of.",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "score",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk#score",
    "access": null,
    "description": "The audio is scored per grapheme and consists of several measurements. 0 would be bad,\n1 the perfect score.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "float"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "verdict",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk#verdict",
    "access": null,
    "description": "Bad when the score is below 0.4, moderate when equal to 0.4 or between 0.4 and 0.6.\ngood when the score is 0.6 or above.",
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "phonemes",
    "memberof": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk",
    "longname": "src/administrative-sdk/word-chunk/word-chunk.js~WordChunk#phonemes",
    "access": null,
    "description": "The phonemes this chunk consists of.",
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 289,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/audio-player.js",
    "memberof": null,
    "longname": "src/audio/audio-player.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import CordovaMediaPlayer from './cordova-media-player';\nimport Stopwatch from './tools';\nimport WebAudioPlayer from './web-audio-player';\nimport allOff from 'event-emitter/all-off';\nimport ee from 'event-emitter';\n/**\n * ITSLanguage AudioPlayer non-graphical component.\n */\nexport default class AudioPlayer {\n  /**\n   * Construct an AudioPlayer for playing .wav or .mp3 files.\n   *\n   * @param {?Object} options - Override any of the default settings.\n   * @emits {Event} 'playbackstopped' When playback has ended, been stopped or been paused.\n   * @emits {Event} All events the HTML5 Audio also fires. {@link http://www.w3schools.com/tags/ref_av_dom.asp}\n   */\n  constructor(options) {\n    this._settings = Object.assign({}, options);\n\n    this._playbackCompatibility();\n    const self = this;\n    const callbacks = {\n      playingCb() {\n        self._emitter.emit('playing', []);\n      },\n      timeupdateCb() {\n        self._emitter.emit('timeupdate', []);\n      },\n      durationchangeCb() {\n        self._emitter.emit('durationchange', []);\n      },\n      canplayCb() {\n        self._emitter.emit('canplay', []);\n      },\n      endedCb() {\n        self._emitter.emit('ended', []);\n      },\n      pauseCb() {\n        self._emitter.emit('pause', []);\n      },\n      stoppedCb() {\n        self._emitter.emit('stopped', []);\n      },\n      playbackStoppedCb() {\n        self._emitter.emit('playbackstopped', []);\n        if (self._stopwatch) {\n          self._stopwatch.stop();\n        }\n      },\n      progressCb() {\n        self._emitter.emit('progress', []);\n      },\n      errorCb() {\n        self._emitter.emit('error', []);\n      }\n    };\n    /**\n     * @type {CordovaMediaPlayer|WebAudioPlayer} player - Specific audio player.\n     */\n    this._player = this._getBestPlayer(callbacks);\n    this._emitter = ee({});\n    this._stopwatch = null;\n    this._audioLevel = 1;\n    this._audioMuted = false;\n  }\n\n  /**\n   * Turn off all event listeners for this player.\n   */\n  resetEventListeners() {\n    allOff(this._emitter);\n  }\n\n  /**\n   * Add an event listener. Listens to events emitted from the player.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to add.\n   */\n  addEventListener(name, handler) {\n    this._emitter.on(name, handler);\n  }\n\n  /**\n   * Remove an event listener of the player.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to remove.\n   */\n  removeEventListener(name, handler) {\n    this._emitter.off(name, handler);\n  }\n\n  /**\n   * Check for mandatory browser compatibility.\n   * Logs detailed browser compatibilities related to for audio playback.\n   *\n   * @throws {Error} If no native wave or MP3 playback is available.\n   */\n  _playbackCompatibility() {\n    // Detect audio playback capabilities.\n\n    // Detect HTML5 Audio playback.\n    // http://caniuse.com/#feat=audio\n    this.canUseAudio = Boolean(Audio);\n    console.log('Native HTML5 Audio playback capability: ' +\n      this.canUseAudio);\n\n    // Detect Cordova Media Playback\n    // It allows playing audio using the native bridge inside WebView Apps.\n    // https://github.com/apache/cordova-plugin-media/blob/master/doc/index.md\n    this.canUseCordovaMedia = Boolean(window.Media);\n    console.log('Cordova Media playback capability: ' +\n      this.canUseCordovaMedia);\n\n    if (!this.canUseAudio && !this.canUseCordovaMedia) {\n      throw new Error(\n        'Some form of audio playback capability is required');\n    }\n    if (this.canUseAudio) {\n      const _audio = new Audio();\n      if (!(_audio.canPlayType && _audio.canPlayType instanceof Function)) {\n        throw new Error(\n          'Unable to detect audio playback capabilities');\n      }\n      const canPlayOggVorbis = _audio.canPlayType(\n          'audio/ogg; codecs=\"vorbis\"') !== '';\n      const canPlayOggOpus = _audio.canPlayType(\n          'audio/ogg; codecs=\"opus\"') !== '';\n      const canPlayWave = _audio.canPlayType('audio/wav') !== '';\n      const canPlayMP3 = _audio.canPlayType('audio/mpeg; codecs=\"mp3\"') !== '';\n      const canPlayAAC = _audio.canPlayType(\n          'audio/mp4; codecs=\"mp4a.40.2\"') !== '';\n      const canPlay3GPP = _audio.canPlayType(\n          'audio/3gpp; codecs=\"samr\"') !== '';\n\n      console.log('Native Vorbis audio in Ogg container playback capability: ' +\n        canPlayOggVorbis);\n      console.log('Native Opus audio in Ogg container playback capability: ' +\n        canPlayOggOpus);\n      console.log('Native PCM audio in Waveform Audio File Format (WAVE) ' +\n        'playback capability: ' + canPlayWave);\n      console.log('Native MPEG Audio Layer 3 (MP3) playback capability: ' +\n        canPlayMP3);\n      console.log('Native Low-Complexity AAC audio in MP4 container playback ' +\n        'capability: ' + canPlayAAC);\n      console.log('Native AMR audio in 3GPP container playback capability: ' +\n        canPlay3GPP);\n\n      if (!(canPlayWave || canPlayMP3)) {\n        throw new Error(\n          'Native Wave or MP3 playback is required');\n      }\n    }\n  }\n\n  /**\n   * Get a player object that performs audio compression, when available.\n   *\n   * Using the Media Stream Recording API for recording is the preferred\n   * solution. It allows recording compressed audio which makes it quicker to\n   * submit. If not available, use a default createScriptProcessor is used.\n   *\n   * @param {Function} callbacks - Callbacks to add to the chosen player.\n   * @private\n   */\n  _getBestPlayer(callbacks) {\n    let player = null;\n    // Start by checking for a Cordova environment.\n    // When running under a debugger like Ripple, both Cordova and WebAudio\n    // environments get detected. While this is technically valid -Ripple is\n    // running in Chrome, which supports WebAudio-, it's not a sandbox that\n    // also disables functionality that would not be available on a device.\n    if (this.canUseCordovaMedia) {\n      // Use Cordova audio encoding (used codec depends on the platform).\n      player = new CordovaMediaPlayer(callbacks);\n    } else if (this.canUseAudio) {\n      // Use the recorder with MediaRecorder implementation.\n      player = new WebAudioPlayer(callbacks);\n    } else {\n      throw new Error('Unable to find a proper player.');\n    }\n    console.log('Player initialised.');\n    return player;\n  }\n\n  /**\n   * Preload audio from an URL.\n   *\n   * @param {string} url - The URL that contains the audio.\n   * @param {boolean} [preload=true] - Try preloading metadata and possible some audio. Set to false to not download\n   * anything until playing.\n   * @param {?Function} loadedCb - The callback that is invoked when the duration of the audio file\n   * is first known.\n   * @emits {Event} 'canplay' When the player is ready to play.\n   */\n  load(url, preload, loadedCb) {\n    this.reset();\n    this._player.load(url, preload, loadedCb);\n    this._audioLevel = 1;\n\n    // If preloading is disabled, the 'canplay' event won't be triggered.\n    // In that case, fire it manually.\n    if (!preload) {\n      this._emitter.emit('canplay', []);\n    }\n  }\n\n  /**\n   * Unload previously loaded audio. Stops the player and any stopwatch.\n   *\n   * @emits {Event} 'unloaded'\n   */\n  reset() {\n    this.stop();\n    this._player.reset();\n    this._emitter.emit('unloaded', []);\n  }\n\n  /**\n   * Start or continue playback of audio. Also starts the stopwatch at the given position.\n   *\n   * @param {?number} position - When position is given, start playing from this position (seconds).\n   */\n  play(position) {\n    if (this._player.isPlaying()) {\n      return;\n    }\n    this._player.play(position);\n    if (this._stopwatch) {\n      const time = Math.round(this._player.getCurrentTime() * 10);\n      this._stopwatch._value = time;\n      this._stopwatch.start();\n    }\n  }\n\n  /**\n   * Stop playback of audio. Stops and resets the stopwatch.\n   */\n  stop() {\n    if (this._stopwatch) {\n      this._stopwatch.reset();\n      this._stopwatch.stop();\n    }\n    this._player.stop();\n  }\n\n  /**\n   * Pause playback of audio. Stops the stopwatch.\n   */\n  pause() {\n    if (this._stopwatch) {\n      this._stopwatch.stop();\n    }\n    this._player.pause();\n  }\n\n  /**\n   * Toggle audio playback. Switch from playing to paused state and back.\n   */\n  togglePlayback() {\n    if (this._player.isPlaying()) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  /**\n   * Start preloading audio.\n   */\n  preload() {\n    this._player.preload();\n  }\n\n  /**\n   * Start playing audio at the given offset. Corrects a percentage under 0 or above 100 to the respective values.\n   *\n   * @param {number} percentage - Start at this percentage (0..100) of the audio stream.\n   */\n  scrub(percentage) {\n    if (percentage < 0) {\n      this._player.scrub(0);\n    } else if (percentage > 100) {\n      this._player.scrub(100);\n    } else {\n      this._player.scrub(percentage);\n    }\n    if (this._stopwatch) {\n      this._stopwatch._value = Math.round(this._player.getCurrentTime() * 10);\n    }\n  }\n\n  /**\n   * Returns the percentage of which the buffer is filled.\n   *\n   * @returns {number} Percentage of buffer fill.\n   */\n  getBufferFill() {\n    return this._player.getBufferFill();\n  }\n\n  /**\n   * Returns the current playing time as offset in seconds from the start.\n   *\n   * @returns {number} Time in seconds as offset from the start.\n   */\n  getCurrentTime() {\n    return this._player.getCurrentTime();\n  }\n\n  /**\n   * Returns the total duration in seconds.\n   *\n   * @returns {number} Time in seconds of fragment duration.\n   */\n  getDuration() {\n    return this._player.getDuration();\n  }\n\n  /**\n   * Check if there is playback in progress.\n   *\n   * @returns {boolean} True if user is currently playing audio. False otherwise.\n   */\n  isPlaying() {\n    return this._player.isPlaying();\n  }\n\n  /**\n   * Returns ready state of the player.\n   *\n   * @returns {boolean} True when player is ready to start loading data or play. False when no audio is loaded\n   * or the player is preparing.\n   */\n  canPlay() {\n    return this._player.canPlay();\n  }\n\n  /**\n   * Set the playback rate of the audio. Values are used according to HTML5 Audio.\n   * Example values:\n   * *1.0 is normal speed.\n   * *0.5 is half speed (slower).\n   * *2.0 is double speed (faster).\n   * *-1.0 is backwards, normal speed.\n   * *-0.5 is backwards, half speed.\n   *\n   * @param {number} rate - Rate at which to change the audio playback.\n   */\n  setPlaybackRate(rate) {\n    this._player.setPlaybackRate(rate);\n  }\n\n  /**\n   * Get the playback rate of the current loaded audio.\n   *\n   * @returns {number} Playback rate of the audio.\n   */\n  getPlaybackRate() {\n    return this._player.getPlaybackRate();\n  }\n\n  /**\n   * Bind a stopwatch to sync with the playing and stopping functionality of the player.\n   *\n   * @param {Function} tickCb - Callback to invoke on every tick. A tick occurs once every 100 ms.\n   * @throws {Error} If _tickCb is null.\n   * @returns {Stopwatch} New Stopwatch object.\n   */\n  bindStopwatch(tickCb) {\n    this._stopwatch = new Stopwatch(time => {\n      const duration = this.getDuration() * 10 / this._player.sound.playbackRate;\n      if (time > duration) {\n        tickCb(duration);\n      } else {\n        tickCb(time);\n      }\n    });\n    return this._stopwatch;\n  }\n\n  /**\n   * Sets the audio level of the current loaded audio. Valid values are from 0 (0%) to 1 (100%).\n   *\n   * @param {number} volume - Volume value from 0 to 1.\n   */\n  setAudioVolume(volume) {\n    if (volume !== 0) {\n      this._audioMuted = false;\n    }\n    if (volume === 0) {\n      this._audioMuted = true;\n    }\n    this._player.setAudioVolume(volume);\n  }\n\n  /**\n   * Gets the audio level of the current loaded audio. Valid values are from 0 (0%) to 1 (100%).\n   *\n   * @returns {number} Volume level of the current loaded audio.\n   */\n  getAudioVolume() {\n    return this._player.getAudioVolume();\n  }\n\n  /**\n   * Toggle the current playing audio to be muted or not. If the audio will be muted, the current audio level\n   * is remembered and can be unmuted to continue at this same audio level.\n   */\n  toggleAudioMute() {\n    this.setAudioMute(!this._audioMuted);\n  }\n\n  /**\n   * Manually set the muted state of the current loaded audio.\n   *\n   * @param {boolean} shouldMute - Whether the audio should be muted or unmuted.\n   */\n  setAudioMute(shouldMute) {\n    if (shouldMute) {\n      this._audioLevel = this.getAudioVolume();\n      this.setAudioVolume(0);\n    } else {\n      this.setAudioVolume(this._audioLevel);\n    }\n  }\n\n  /**\n   * Return the muted state of the current loaded audio.\n   *\n   * @returns {boolean} The muted state of the current loaded audio.\n   */\n  isAudioMuted() {\n    return this._audioMuted;\n  }\n}\n\n\n"
  },
  {
    "__docId__": 290,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AudioPlayer",
    "memberof": "src/audio/audio-player.js",
    "longname": "src/audio/audio-player.js~AudioPlayer",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/audio/audio-player.js",
    "importStyle": "AudioPlayer",
    "description": "ITSLanguage AudioPlayer non-graphical component.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 291,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#constructor",
    "access": null,
    "description": "Construct an AudioPlayer for playing .wav or .mp3 files.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Override any of the default settings."
      }
    ],
    "emits": [
      {
        "types": [
          "Event"
        ],
        "description": "'playbackstopped' When playback has ended, been stopped or been paused."
      },
      {
        "types": [
          "Event"
        ],
        "description": "All events the HTML5 Audio also fires. {@link http://www.w3schools.com/tags/ref_av_dom.asp}"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 292,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_settings",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_settings",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 293,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_player",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_player",
    "access": null,
    "description": "",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "CordovaMediaPlayer",
        "WebAudioPlayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_emitter",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_emitter",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_stopwatch",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_stopwatch",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 296,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioLevel",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioLevel",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 297,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioMuted",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioMuted",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resetEventListeners",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#resetEventListeners",
    "access": null,
    "description": "Turn off all event listeners for this player.",
    "lineNumber": 70,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 299,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEventListener",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#addEventListener",
    "access": null,
    "description": "Add an event listener. Listens to events emitted from the player.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 300,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeEventListener",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#removeEventListener",
    "access": null,
    "description": "Remove an event listener of the player.",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 301,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_playbackCompatibility",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_playbackCompatibility",
    "access": null,
    "description": "Check for mandatory browser compatibility.\nLogs detailed browser compatibilities related to for audio playback.",
    "lineNumber": 100,
    "params": [],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If no native wave or MP3 playback is available."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 302,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canUseAudio",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#canUseAudio",
    "access": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canUseCordovaMedia",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#canUseCordovaMedia",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getBestPlayer",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_getBestPlayer",
    "access": "private",
    "description": "Get a player object that performs audio compression, when available.\n\nUsing the Media Stream Recording API for recording is the preferred\nsolution. It allows recording compressed audio which makes it quicker to\nsubmit. If not available, use a default createScriptProcessor is used.",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "Callbacks to add to the chosen player."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 305,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#load",
    "access": null,
    "description": "Preload audio from an URL.",
    "lineNumber": 197,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The URL that contains the audio."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "preload",
        "description": "Try preloading metadata and possible some audio. Set to false to not download\nanything until playing."
      },
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "loadedCb",
        "description": "The callback that is invoked when the duration of the audio file\nis first known."
      }
    ],
    "emits": [
      {
        "types": [
          "Event"
        ],
        "description": "'canplay' When the player is ready to play."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 306,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioLevel",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioLevel",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#reset",
    "access": null,
    "description": "Unload previously loaded audio. Stops the player and any stopwatch.",
    "lineNumber": 214,
    "params": [],
    "emits": [
      {
        "types": [
          "Event"
        ],
        "description": "'unloaded'"
      }
    ],
    "generator": false
  },
  {
    "__docId__": 308,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#play",
    "access": null,
    "description": "Start or continue playback of audio. Also starts the stopwatch at the given position.",
    "lineNumber": 225,
    "params": [
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "When position is given, start playing from this position (seconds)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 309,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#stop",
    "access": null,
    "description": "Stop playback of audio. Stops and resets the stopwatch.",
    "lineNumber": 240,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 310,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#pause",
    "access": null,
    "description": "Pause playback of audio. Stops the stopwatch.",
    "lineNumber": 251,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 311,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "togglePlayback",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#togglePlayback",
    "access": null,
    "description": "Toggle audio playback. Switch from playing to paused state and back.",
    "lineNumber": 261,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 312,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preload",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#preload",
    "access": null,
    "description": "Start preloading audio.",
    "lineNumber": 272,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 313,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scrub",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#scrub",
    "access": null,
    "description": "Start playing audio at the given offset. Corrects a percentage under 0 or above 100 to the respective values.",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "percentage",
        "description": "Start at this percentage (0..100) of the audio stream."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 314,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBufferFill",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#getBufferFill",
    "access": null,
    "description": "Returns the percentage of which the buffer is filled.",
    "lineNumber": 299,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Percentage of buffer fill."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Percentage of buffer fill."
    },
    "generator": false
  },
  {
    "__docId__": 315,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentTime",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#getCurrentTime",
    "access": null,
    "description": "Returns the current playing time as offset in seconds from the start.",
    "lineNumber": 308,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds as offset from the start."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds as offset from the start."
    },
    "generator": false
  },
  {
    "__docId__": 316,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDuration",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#getDuration",
    "access": null,
    "description": "Returns the total duration in seconds.",
    "lineNumber": 317,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds of fragment duration."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds of fragment duration."
    },
    "generator": false
  },
  {
    "__docId__": 317,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isPlaying",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#isPlaying",
    "access": null,
    "description": "Check if there is playback in progress.",
    "lineNumber": 326,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if user is currently playing audio. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if user is currently playing audio. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 318,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "canPlay",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#canPlay",
    "access": null,
    "description": "Returns ready state of the player.",
    "lineNumber": 336,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when player is ready to start loading data or play. False when no audio is loaded\nor the player is preparing."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when player is ready to start loading data or play. False when no audio is loaded\nor the player is preparing."
    },
    "generator": false
  },
  {
    "__docId__": 319,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPlaybackRate",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#setPlaybackRate",
    "access": null,
    "description": "Set the playback rate of the audio. Values are used according to HTML5 Audio.\nExample values:\n*1.0 is normal speed.\n*0.5 is half speed (slower).\n*2.0 is double speed (faster).\n*-1.0 is backwards, normal speed.\n*-0.5 is backwards, half speed.",
    "lineNumber": 351,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "rate",
        "description": "Rate at which to change the audio playback."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 320,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPlaybackRate",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#getPlaybackRate",
    "access": null,
    "description": "Get the playback rate of the current loaded audio.",
    "lineNumber": 360,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Playback rate of the audio."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Playback rate of the audio."
    },
    "generator": false
  },
  {
    "__docId__": 321,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bindStopwatch",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#bindStopwatch",
    "access": null,
    "description": "Bind a stopwatch to sync with the playing and stopping functionality of the player.",
    "lineNumber": 371,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stopwatch} New Stopwatch object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "tickCb",
        "description": "Callback to invoke on every tick. A tick occurs once every 100 ms."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stopwatch"
      ],
      "spread": false,
      "description": "New Stopwatch object."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If _tickCb is null."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 322,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_stopwatch",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_stopwatch",
    "access": null,
    "description": null,
    "lineNumber": 372,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAudioVolume",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#setAudioVolume",
    "access": null,
    "description": "Sets the audio level of the current loaded audio. Valid values are from 0 (0%) to 1 (100%).",
    "lineNumber": 388,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": "Volume value from 0 to 1."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 324,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioMuted",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioMuted",
    "access": null,
    "description": null,
    "lineNumber": 390,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioMuted",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioMuted",
    "access": null,
    "description": null,
    "lineNumber": 393,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAudioVolume",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#getAudioVolume",
    "access": null,
    "description": "Gets the audio level of the current loaded audio. Valid values are from 0 (0%) to 1 (100%).",
    "lineNumber": 403,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Volume level of the current loaded audio."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Volume level of the current loaded audio."
    },
    "generator": false
  },
  {
    "__docId__": 327,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleAudioMute",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#toggleAudioMute",
    "access": null,
    "description": "Toggle the current playing audio to be muted or not. If the audio will be muted, the current audio level\nis remembered and can be unmuted to continue at this same audio level.",
    "lineNumber": 411,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 328,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAudioMute",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#setAudioMute",
    "access": null,
    "description": "Manually set the muted state of the current loaded audio.",
    "lineNumber": 420,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "shouldMute",
        "description": "Whether the audio should be muted or unmuted."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 329,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_audioLevel",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#_audioLevel",
    "access": null,
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isAudioMuted",
    "memberof": "src/audio/audio-player.js~AudioPlayer",
    "longname": "src/audio/audio-player.js~AudioPlayer#isAudioMuted",
    "access": null,
    "description": "Return the muted state of the current loaded audio.",
    "lineNumber": 434,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} The muted state of the current loaded audio."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "The muted state of the current loaded audio."
    },
    "generator": false
  },
  {
    "__docId__": 331,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/audio-recorder.js",
    "memberof": null,
    "longname": "src/audio/audio-recorder.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import CordovaMediaRecorder from './cordova-media-recorder';\nimport MediaRecorder from './media-recorder';\nimport Stopwatch from './tools';\nimport WavePacker from './wave-packer';\nimport WebAudioRecorder from './web-audio-recorder';\nimport allOff from 'event-emitter/all-off';\nimport ee from 'event-emitter';\nimport uuid from 'node-uuid';\n\n/**\n * Audio recording component.\n*/\n\nexport default class AudioRecorder {\n  /**\n   * ITSLanguage AudioRecorder.\n   *\n   * @param {?Object} options - Override any of the default settings.\n   *\n   */\n  constructor(options) {\n    this._settings = Object.assign({}, options);\n\n    this._recordingCompatibility();\n\n    this.userMediaApproval = false;\n\n    /**\n     *\n     * @type {CordovaMediaRecorder|WebAudioRecorder|MediaRecorder} The specific recorder type.\n     */\n    this._recorder = null;\n\n    this._emitter = ee({});\n\n\n    if (this.canUseCordovaMedia) {\n      // Through the App permissions, access to the microphone was\n      // already granted.\n      this.userMediaApproval = true;\n      this._recorder = this._getBestRecorder();\n    }\n    this._stopwatch = null;\n  }\n\n  /**\n   * Turn off all event listeners for this recorder.\n   */\n  removeAllEventListeners() {\n    allOff(this._emitter);\n  }\n\n  /**\n   * Add an event listener. Listens to events emitted from the recorder.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to add.\n   */\n  addEventListener(name, handler) {\n    this._emitter.on(name, handler);\n  }\n\n  /**\n   * Remove an event listener of the recorder.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Function} handler - Handler function to remove.\n   */\n  removeEventListener(name, handler) {\n    this._emitter.off(name, handler);\n  }\n\n  /**\n   * Fire an event.\n   *\n   * @param {string} name - Name of the event.\n   * @param {Object[]} args - Arguments.\n   * @private\n   */\n  fireEvent(name, args = []) {\n    this._emitter.emit(name, ...args);\n  }\n\n  /**\n   * Check if the user has already given permission to access the microphone.\n   *\n   * @returns {boolean} True if user has granted access to the microphone. False otherwise.\n   */\n  hasUserMediaApproval() {\n    return this.userMediaApproval || false;\n  }\n\n  /**\n   * Logs browser compatibility for audio recording.\n   * In case of compatibility issues, an error is thrown.\n   *\n   * @private\n   */\n  _recordingCompatibility/* istanbul ignore next */() {\n    // Detect audio recording capabilities.\n    // http://caniuse.com/#feat=stream\n    // https://developer.mozilla.org/en-US/docs/Web/API/Navigator.getUserMedia\n    navigator.getUserMedia = navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n    this.canGetUserMedia = Boolean(navigator.getUserMedia);\n    console.log('Native deprecated navigator.getUserMedia API capability: ' +\n      this.canGetUserMedia);\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/mediaDevices.getUserMedia\n    this.canMediaDevicesGetUserMedia = false;\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices.getUserMedia = navigator.mediaDevices.getUserMedia ||\n        navigator.mediaDevices.webkitGetUserMedia ||\n        navigator.mediaDevices.mozGetUserMedia;\n      this.canMediaDevicesGetUserMedia = Boolean(navigator.mediaDevices.getUserMedia);\n    }\n    console.log('Native navigator.mediaDevices.getUserMedia API capability:',\n      this.canMediaDevicesGetUserMedia);\n\n    // Detect MediaStream Recording\n    // It allows recording audio using the MediaStream from the above\n    // getUserMedia directly with a native codec better than Wave.\n    // http://www.w3.org/TR/mediastream-recording/\n    this.canUseMediaRecorder = Boolean(window.MediaRecorder);\n    console.log('Native MediaRecorder recording capability: ' +\n      this.canUseMediaRecorder);\n\n    // Web Audio API\n    // High-level JavaScript API for processing and synthesizing audio\n    // http://caniuse.com/#feat=audio-api\n    window.AudioContext = window.AudioContext ||\n      window.webkitAudioContext || window.mozAudioContext;\n    const canCreateAudioContext = Boolean(window.AudioContext);\n    console.log('Native Web Audio API (AudioContext) processing capability: ' +\n      canCreateAudioContext);\n\n    // Detect Cordova Media Recording\n    // It allows recording audio using the native bridge inside WebView Apps.\n    // Note that it may also require native playback when codecs were used for\n    // recording that are not yet supported in the WebView.\n    // https://github.com/apache/cordova-plugin-media/blob/master/doc/index.md\n    this.canUseCordovaMedia = Boolean(window.Media);\n    console.log('Cordova Media recording capability: ' +\n      this.canUseCordovaMedia);\n\n    if (!(this.canGetUserMedia || this.canUseCordovaMedia)) {\n      throw new Error(\n        'Some form of audio recording capability is required');\n    }\n\n    window.URL = window.URL || window.webkitURL;\n    const hasWindowURL = Boolean(window.URL);\n    console.log('Native window.URL capability: ' +\n      hasWindowURL);\n    if (!hasWindowURL) {\n      throw new Error(\n        'No window.URL blob conversion capabilities');\n    }\n  }\n\n\n  /**\n   * Request microphone access.\n   *\n   * Calling this function may result in thrown exceptions when browser\n   * doesn't support provide live audio input.\n   *\n   * @throws {Error} If no live audio input is available or permitted.\n   */\n  requestUserMedia() {\n    const self = this;\n    function success(stream) {\n      console.log('Got getUserMedia stream');\n\n      // checking audio presence\n      if (self.canMediaDevicesGetUserMedia) {\n        if (stream.getAudioTracks().length) {\n          console.log('Got audio tracks:', stream.getAudioTracks().length);\n        }\n      }\n\n      // Modify state of userMediaApproval now access is granted.\n      self.userMediaApproval = true;\n\n      const micInputGain = self._startUserMedia(stream);\n      self.fireEvent('ready', [self.audioContext, micInputGain]);\n    }\n    function failure(e) {\n      console.log(e);\n      throw new Error('No live audio input available or permitted');\n    }\n\n    if (this.canMediaDevicesGetUserMedia) {\n      // Use of promises is required.\n      navigator.mediaDevices.getUserMedia({audio: true}).then(success).catch(failure);\n    } else if (this.canGetUserMedia) {\n      navigator.getUserMedia({audio: true}, success, failure);\n    }\n  }\n\n  /**\n   * Audio access was granted, start analysing.\n   *\n   * @param {MediaStream} stream - Media Stream.\n   * @private\n   */\n  _startUserMedia(stream) {\n    if (!this.audioContext) {\n      // Initialize the context once, and only when getUserMedia was\n      // successful.\n      this.audioContext = new window.AudioContext();\n    }\n\n    if (!this.audioContext.createMediaStreamSource) {\n      throw new Error('AudioContext has no property createMediaStreamSource');\n    }\n\n    // Creates an audio node from the microphone incoming stream.\n    const micInput = this.audioContext.createMediaStreamSource(stream);\n\n    // This is a workaround for a bug in Firefox that would otherwise lead to\n    // the sound input stopping after ~5 seconds.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=934512\n    // the important thing is to save a reference to the MediaStreamAudioSourceNode\n    this.micInput = micInput;\n\n    // Create a gain node\n    const micInputGain = this.audioContext.createGain();\n    // Connect the microphone source to a gain node.\n    micInput.connect(micInputGain);\n\n    this._recorder = this._getBestRecorder(micInputGain);\n\n    return micInputGain;\n  }\n\n  /**\n   * Get a recorder object that performs audio compression, when available.\n   *\n   * Using the Media Stream Recording API for recording is the prefered\n   * solution. It allows recording compressed audio which makes it quicker to\n   * submit. If not available, use a default createScriptProcessor is used.\n   *\n   * @param {GainNode} micInputGain - The GainNode to analyze.\n   * @private\n   */\n  _getBestRecorder(micInputGain) {\n    let recorder = null;\n    // Start by checking for a Cordova environment.\n    // When running under a debugger like Ripple, both Cordova and WebAudio\n    // environments get detected. While this is technically valid -Ripple is\n    // running in Chrome, which supports WebAudio-, it's not a sandbox that\n    // also disables functionality that would not be available on a device.\n    if (this.canUseCordovaMedia && !this._settings.forceWave) {\n      // Use Cordova audio encoding (used codec depends on the platform).\n      recorder = new CordovaMediaRecorder();\n    } else if (this.canUserMediaRecorder && !this._settings.forceWave) {\n      // Use the recorder with MediaRecorder implementation.\n      recorder = new MediaRecorder(micInputGain);\n    } else if (this.canGetUserMedia) {\n      // Fall back to raw (WAVE) audio encoding.\n      const self = this;\n      recorder = new WebAudioRecorder(micInputGain, data => {\n        self.streamCallback(data);\n      }, new WavePacker());\n    } else {\n      throw new Error('Unable to find a proper recorder.');\n    }\n    console.log('Recorder initialised.');\n    return recorder;\n  }\n\n  /**\n   * Called when a chunk of audio becomes available.\n   *\n   * @param {ArrayBuffer} chunk - A chunk of audio (Int16 formatted).\n   */\n  streamCallback(chunk) {\n    this.fireEvent('dataavailable', [chunk]);\n  }\n\n  /**\n   * Throw an error if the user is not yet logged in.\n   *\n   * @returns {boolean} True when permission was already granted. False otherwise.\n   */\n  _requireGetUserMedia() {\n    if (this._recorder) {\n      return true;\n    }\n    console.log('Requesting getUserMedia permission first.');\n    this.requestUserMedia();\n    return false;\n  }\n\n  /**\n   * Set a new recording session id.\n   *\n   * @param {number} id - When defined, stick this id to the recorded blob.\n   *\n   * @returns {number} The id that was given or a unique generated one.\n   */\n  startRecordingSession(id) {\n    // Generate a uuid to remember this recording by (locally).\n    const uuid_ = id === undefined ? uuid.v4() : id;\n    this.activeRecordingId = uuid_;\n    return uuid_;\n  }\n\n  /**\n   * Start recording microphone input until stopped.\n   *\n   * @param {?Function} cb - The callback that provides a piece of raw audio when\n   * it becomes available. It may be used for streaming.\n   * @emits {Event} 'recording' With arguments: [recording ID].\n   */\n  record(cb) {\n    if (!this._requireGetUserMedia()) {\n      return;\n    }\n\n    if (this.isRecording()) {\n      throw new Error('Already recording, stop recording first.');\n    }\n\n    this._recorder.record();\n    if (this._stopwatch) {\n      this._stopwatch._value = 0;\n      this._stopwatch.start();\n    }\n\n    if (!this.activeRecordingId) {\n      this.startRecordingSession();\n    }\n    console.log('Recording as id: ' + this.activeRecordingId);\n\n    this.fireEvent('recording', [this.activeRecordingId]);\n    return cb;\n  }\n\n  /**\n   * Stop recording microphone input.\n   *\n   * @param {boolean} [forced=false] - Set whether to force the microphone to stop recording or let it end normally.\n   * @emits {Event} 'recorded' With arguments: [recording ID, audio Blob, forced].\n   */\n  stop(forced) {\n    if (!this._recorder.isRecording()) {\n      console.error('Recorder was already stopped.');\n      return;\n    }\n    this._recorder.stop();\n    if (this._stopwatch) {\n      this._stopwatch.stop();\n    }\n    console.log('Stopped recording for id: ' + this.activeRecordingId);\n\n    const self = this;\n    this._recorder.getEncodedAudio(blob => {\n      console.log('Received encoded audio of type: ' + blob.type);\n      // Allow direct playback from local blob.\n      self.fireEvent('recorded', [self.activeRecordingId, blob, Boolean(forced)]);\n    });\n  }\n\n  /**\n   * Check if there is a recording in progress.\n   *\n   * @returns {boolean} True if user is currently recording audio. False` otherwise.\n   */\n  isRecording() {\n    if (!this._recorder) {\n      return false;\n    }\n    return this._recorder.isRecording();\n  }\n\n  /**\n   * Toggle audio playback. Switch from playing to paused state and back.\n   */\n  toggleRecording() {\n    if (this.isRecording()) {\n      this.stop();\n    } else {\n      this.record();\n    }\n  }\n\n  /**\n   * Get the recorded audio specifications.\n   *\n   * @returns {Object} Containing audioFormat and audioParameters describing the format.\n   */\n  getAudioSpecs() {\n    return this._recorder.getAudioSpecs();\n  }\n\n  /**\n   * Bind a stopwatch to sync with the playing and stopping functionality of the recorder.\n   *\n   * @param {Function} tickCb - Callback to invoke on every tick. A tick occurs once every 100 ms.\n   * @throws {Error} If _tickCb is null.\n   * @returns {Stopwatch} New Stopwatch object.\n   */\n  bindStopwatch(tickCb) {\n    this._stopwatch = new Stopwatch(tickCb);\n    return this._stopwatch;\n  }\n}\n"
  },
  {
    "__docId__": 332,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "AudioRecorder",
    "memberof": "src/audio/audio-recorder.js",
    "longname": "src/audio/audio-recorder.js~AudioRecorder",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/audio/audio-recorder.js",
    "importStyle": "AudioRecorder",
    "description": "Audio recording component.",
    "lineNumber": 14,
    "interface": false
  },
  {
    "__docId__": 333,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#constructor",
    "access": null,
    "description": "ITSLanguage AudioRecorder.",
    "lineNumber": 21,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Override any of the default settings."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 334,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_settings",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_settings",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userMediaApproval",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#userMediaApproval",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recorder",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_recorder",
    "access": null,
    "description": "",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "CordovaMediaRecorder",
        "WebAudioRecorder",
        "MediaRecorder"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_emitter",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_emitter",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "userMediaApproval",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#userMediaApproval",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recorder",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_recorder",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_stopwatch",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_stopwatch",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeAllEventListeners",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#removeAllEventListeners",
    "access": null,
    "description": "Turn off all event listeners for this recorder.",
    "lineNumber": 49,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 342,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addEventListener",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#addEventListener",
    "access": null,
    "description": "Add an event listener. Listens to events emitted from the recorder.",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to add."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 343,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeEventListener",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#removeEventListener",
    "access": null,
    "description": "Remove an event listener of the recorder.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Handler function to remove."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 344,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fireEvent",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#fireEvent",
    "access": "private",
    "description": "Fire an event.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the event."
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Arguments."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 345,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasUserMediaApproval",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#hasUserMediaApproval",
    "access": null,
    "description": "Check if the user has already given permission to access the microphone.",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if user has granted access to the microphone. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if user has granted access to the microphone. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 346,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_recordingCompatibility",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_recordingCompatibility",
    "access": "private",
    "description": "Logs browser compatibility for audio recording.\nIn case of compatibility issues, an error is thrown.",
    "lineNumber": 99,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 347,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canGetUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#canGetUserMedia",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 348,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canMediaDevicesGetUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#canMediaDevicesGetUserMedia",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canMediaDevicesGetUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#canMediaDevicesGetUserMedia",
    "access": null,
    "description": null,
    "lineNumber": 117,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canUseMediaRecorder",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#canUseMediaRecorder",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "canUseCordovaMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#canUseCordovaMedia",
    "access": null,
    "description": null,
    "lineNumber": 144,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "requestUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#requestUserMedia",
    "access": null,
    "description": "Request microphone access.\n\nCalling this function may result in thrown exceptions when browser\ndoesn't support provide live audio input.",
    "lineNumber": 172,
    "params": [],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If no live audio input is available or permitted."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 353,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_startUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_startUserMedia",
    "access": "private",
    "description": "Audio access was granted, start analysing.",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": "Media Stream."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 354,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "audioContext",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#audioContext",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "micInput",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#micInput",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recorder",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_recorder",
    "access": null,
    "description": null,
    "lineNumber": 234,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getBestRecorder",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_getBestRecorder",
    "access": "private",
    "description": "Get a recorder object that performs audio compression, when available.\n\nUsing the Media Stream Recording API for recording is the prefered\nsolution. It allows recording compressed audio which makes it quicker to\nsubmit. If not available, use a default createScriptProcessor is used.",
    "lineNumber": 249,
    "params": [
      {
        "nullable": null,
        "types": [
          "GainNode"
        ],
        "spread": false,
        "optional": false,
        "name": "micInputGain",
        "description": "The GainNode to analyze."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 358,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "streamCallback",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#streamCallback",
    "access": null,
    "description": "Called when a chunk of audio becomes available.",
    "lineNumber": 280,
    "params": [
      {
        "nullable": null,
        "types": [
          "ArrayBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "chunk",
        "description": "A chunk of audio (Int16 formatted)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 359,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_requireGetUserMedia",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_requireGetUserMedia",
    "access": null,
    "description": "Throw an error if the user is not yet logged in.",
    "lineNumber": 289,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when permission was already granted. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when permission was already granted. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 360,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startRecordingSession",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#startRecordingSession",
    "access": null,
    "description": "Set a new recording session id.",
    "lineNumber": 305,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} The id that was given or a unique generated one."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "When defined, stick this id to the recorded blob."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "The id that was given or a unique generated one."
    },
    "generator": false
  },
  {
    "__docId__": 361,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "activeRecordingId",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#activeRecordingId",
    "access": null,
    "description": null,
    "lineNumber": 308,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 362,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "record",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#record",
    "access": null,
    "description": "Start recording microphone input until stopped.",
    "lineNumber": 319,
    "params": [
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "The callback that provides a piece of raw audio when\nit becomes available. It may be used for streaming."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "emits": [
      {
        "types": [
          "Event"
        ],
        "description": "'recording' With arguments: [recording ID]."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 363,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#stop",
    "access": null,
    "description": "Stop recording microphone input.",
    "lineNumber": 349,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "forced",
        "description": "Set whether to force the microphone to stop recording or let it end normally."
      }
    ],
    "emits": [
      {
        "types": [
          "Event"
        ],
        "description": "'recorded' With arguments: [recording ID, audio Blob, forced]."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 364,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isRecording",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#isRecording",
    "access": null,
    "description": "Check if there is a recording in progress.",
    "lineNumber": 373,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True if user is currently recording audio. False` otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if user is currently recording audio. False` otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 365,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleRecording",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#toggleRecording",
    "access": null,
    "description": "Toggle audio playback. Switch from playing to paused state and back.",
    "lineNumber": 383,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 366,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAudioSpecs",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#getAudioSpecs",
    "access": null,
    "description": "Get the recorded audio specifications.",
    "lineNumber": 396,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Containing audioFormat and audioParameters describing the format."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Containing audioFormat and audioParameters describing the format."
    },
    "generator": false
  },
  {
    "__docId__": 367,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bindStopwatch",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#bindStopwatch",
    "access": null,
    "description": "Bind a stopwatch to sync with the playing and stopping functionality of the recorder.",
    "lineNumber": 407,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Stopwatch} New Stopwatch object."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "tickCb",
        "description": "Callback to invoke on every tick. A tick occurs once every 100 ms."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Stopwatch"
      ],
      "spread": false,
      "description": "New Stopwatch object."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If _tickCb is null."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 368,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_stopwatch",
    "memberof": "src/audio/audio-recorder.js~AudioRecorder",
    "longname": "src/audio/audio-recorder.js~AudioRecorder#_stopwatch",
    "access": null,
    "description": null,
    "lineNumber": 408,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 369,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/audio-tools.js",
    "memberof": null,
    "longname": "src/audio/audio-tools.js",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "content": "/* eslint-disable\n new-cap\n */\n/**\n * @title ITSLanguage Javascript Audio\n * @overview This is part of the ITSLanguage Javascript SDK to perform audio related functions.\n * @copyright (c) 2014 ITSLanguage\n * @license MIT\n * @author d-centralize\n */\n\n\n/**\n@module its.Audio.Tools\nITSLanguage Audio tools.\n*/\n\n\nimport pcm from 'pcmjs';\n\n\n/**\n * Generate a dummy Wave file for testing purposes.\n *\n * @param {number} duration - Length of audio in seconds.\n * @returns {string} A new URL containing the Wave file.\n */\nexport function generateWaveSample(duration) {\n  const effect = [];\n  const sampleRate = 22000;\n  const loops = duration * sampleRate;\n  for (let i = 0; i < loops; i++) {\n    effect[i] = 64 + Math.round(\n      32 * (Math.cos(i * i / 2000) + Math.sin(i * i / 4000)));\n  }\n  const wave = new pcm({channels: 1, rate: 22000, depth: 8}).toWav(effect);\n  return wave.encode();\n}\n\n\nexport default class VolumeMeter {\n  /**\n   * Represents a volume meter.\n   *\n   * @param {AudioContext} audioContext - The WebAudio context.\n   * @param {MediaStream} inputStream - The MediaStream to analyze.\n   */\n  constructor(audioContext, inputStream) {\n    this.audioContext = audioContext;\n    this.stream = inputStream;\n  }\n\n\n  /**\n   * Start analysing the audio stream and provide updates to the specified callback function.\n   *\n   * @param {Function} callback - This function is called when there's a new volume reading is available.\n   * First parameter is the volume.\n   * @param {?Array} args - Optional array of parameters to pass to the callback after the volume parameter.\n   */\n  getVolumeIndication(callback, args) {\n    if (!callback) {\n      throw new Error('Callback parameter unspecified.');\n    }\n\n    // Convert single callback to Array of callbacks\n    if (!(callback instanceof Array)) {\n      callback = [callback];\n    }\n\n    this.volumeIndicationCallback = callback;\n    this.volumeIndicationCallbackArgs = args || [];\n\n    this.analyserNode = this.audioContext.createAnalyser();\n    this.analyserNode.fftSize = 2048;\n    this.stream.connect(this.analyserNode);\n\n    this._updateAnalysers();\n  }\n\n  static _getAverageVolume(array) {\n    let values = 0;\n\n    const length = array.length;\n\n    // Get all the frequency amplitudes\n    for (let i = 0; i < length; i++) {\n      values += array[i];\n    }\n\n    const average = values / length;\n    return average;\n  }\n\n  /**\n   * Calculate the volume, inform listeners by executing the callback.\n   * Repeat indefinitely.\n   */\n  _updateAnalysers() {\n    const volumeIndicationCallback = this.volumeIndicationCallback;\n    const volumeIndicationCallbackArgs = this.volumeIndicationCallbackArgs;\n    const analyserNode = this.analyserNode;\n    const willAnimate = this.willAnimate = {\n      anim: true\n    };\n    let skippedCallbacks = 0;\n    let lastVolume = -1;\n\n    animloop();\n\n    function animloop() {\n      /* The Window.requestAnimationFrame() method tells the\n       * browser that you wish to perform an animation and\n       * requests that the browser call a specified function to\n       * update an animation before the next repaint. The method\n       * takes as an argument a callback to be invoked before\n       * the repaint.\n       */\n      const requestAnimationFrame = window.requestAnimationFrame ||\n        window.mozRequestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.msRequestAnimationFrame;\n\n      const freqByteData = new Uint8Array(analyserNode.frequencyBinCount);\n\n      analyserNode.getByteFrequencyData(freqByteData);\n      let averageVolume = VolumeMeter._getAverageVolume(freqByteData);\n\n      if (willAnimate.anim) {\n        requestAnimationFrame(animloop);\n      } else {\n        // Stop animating, provide callback with zero volume so the\n        // meter doesn't appear to be stuck at the last volume level.\n        averageVolume = 0;\n      }\n\n      // Callback only on substantial changes.\n      const minDiff = 1;\n      if (parseInt(averageVolume) >= lastVolume - minDiff &&\n        parseInt(averageVolume) <= lastVolume + minDiff) {\n        // console.log('Skip same average: ' + lastVolume);\n        return true;\n      }\n      // console.log('Got new volume: ' + parseInt(averageVolume) +\n      // ' (old: ' + lastVolume + ')');\n      lastVolume = parseInt(averageVolume);\n\n      const args = [averageVolume].concat(volumeIndicationCallbackArgs);\n      // Fire all callbacks.\n      volumeIndicationCallback.forEach(cb => {\n        // This kludge prevents firing an averageVolume of zero\n        // right away. The buffer probably needs filling before useful\n        // values become available. 5 seems to be the magic number.\n        if (skippedCallbacks < 5) {\n          skippedCallbacks += 1;\n          return true;\n        }\n        return cb(args);\n      });\n    }\n  }\n\n  /**\n   * Stop calculating the volume.\n   */\n  stopAnalyser() {\n    this.willAnimate.anim = false;\n  }\n}\n"
  },
  {
    "__docId__": 370,
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "generateWaveSample",
    "memberof": "src/audio/audio-tools.js",
    "longname": "src/audio/audio-tools.js~generateWaveSample",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/audio/audio-tools.js",
    "importStyle": "{generateWaveSample}",
    "description": "Generate a dummy Wave file for testing purposes.",
    "lineNumber": 28,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} A new URL containing the Wave file."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "Length of audio in seconds."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A new URL containing the Wave file."
    },
    "generator": false
  },
  {
    "__docId__": 371,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "VolumeMeter",
    "memberof": "src/audio/audio-tools.js",
    "longname": "src/audio/audio-tools.js~VolumeMeter",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/audio/audio-tools.js",
    "importStyle": "VolumeMeter",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 372,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#constructor",
    "access": null,
    "description": "Represents a volume meter.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "AudioContext"
        ],
        "spread": false,
        "optional": false,
        "name": "audioContext",
        "description": "The WebAudio context."
      },
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "inputStream",
        "description": "The MediaStream to analyze."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 373,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "audioContext",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#audioContext",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 374,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "stream",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#stream",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 375,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getVolumeIndication",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#getVolumeIndication",
    "access": null,
    "description": "Start analysing the audio stream and provide updates to the specified callback function.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "This function is called when there's a new volume reading is available.\nFirst parameter is the volume."
      },
      {
        "nullable": true,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "Optional array of parameters to pass to the callback after the volume parameter."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 376,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volumeIndicationCallback",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#volumeIndicationCallback",
    "access": null,
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 377,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "volumeIndicationCallbackArgs",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#volumeIndicationCallbackArgs",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 378,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "analyserNode",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#analyserNode",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 379,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "_getAverageVolume",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter._getAverageVolume",
    "access": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [
      {
        "name": "array",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 380,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_updateAnalysers",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#_updateAnalysers",
    "access": null,
    "description": "Calculate the volume, inform listeners by executing the callback.\nRepeat indefinitely.",
    "lineNumber": 99,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 381,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopAnalyser",
    "memberof": "src/audio/audio-tools.js~VolumeMeter",
    "longname": "src/audio/audio-tools.js~VolumeMeter#stopAnalyser",
    "access": null,
    "description": "Stop calculating the volume.",
    "lineNumber": 166,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 382,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/cordova-media-player.js",
    "memberof": null,
    "longname": "src/audio/cordova-media-player.js",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "content": "/*\nglobal\ndevice\n */\n\n/**\n * @title ITSLanguage Javascript Audio\n * @overview This is part of the ITSLanguage Javascript SDK to perform audio related functions.\n * @copyright (c) 2014 ITSLanguage\n * @license MIT\n * @author d-centralize\n */\n\n/**\n * @private\n */\nexport default class CordovaMediaPlayer {\n  /**\n   * ITSLanguage CordovaMediaPlayer non-graphical component.\n   *\n   * It uses the Cordova Media component to provide playback capability\n   * through native Android or iOS code.\n   *\n   * @param {?Object} options - Override any of the default settings.\n   *\n   */\n  constructor(options) {\n    this._settings = Object.assign({}, options);\n\n    this._isPlaying = false;\n    this._canPlay = false;\n\n    const platform = device.platform;\n    if (platform === 'Android') {\n      // See the 'cordova-plugin-media' documentation for more Android quirks:\n      // Android devices record audio in Adaptive Multi-Rate format.\n      // The specified file should end with a .3gp extension.\n      this.filename = 'tempfile.3gp';\n      this.mimetype = 'audio/3gpp';\n      this.filepath = this.filename;\n    } else if (platform === 'iOS') {\n      // iOS only records to files of type .wav and returns an error if the\n      // file name extension is not correct.\n      this.filename = 'tempfile.wav';\n      this.mimetype = 'audio/wav';\n      this.filepath = 'documents://' + this.filename;\n    } else {\n      throw new Error('Unable to detect Android or iOS platform for ' +\n        'determining audio format.');\n    }\n  }\n\n  _writeFile(\n    filename, callback) {\n    // org.apache.cordova.file provides the HTML5 Filesystem API.\n\n    // var fs = window.TEMPORARY;\n    const fs = window.PERSISTENT;\n\n    window.requestFileSystem(\n      fs, 0, fileSystemCallback, fileSystemErrorCallback);\n\n    function fileSystemCallback(fileSystem) {\n      // www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileSystem\n      console.debug('Got filesystem name: ' + fileSystem.name);\n\n      // getFile Creates or looks up a file.\n      // By setting options to create:false, only a lookup will be performed.\n      console.debug('Calling getFile in read mode: ' + filename);\n      fileSystem.root.getFile(filename, {\n        create: true\n      },\n        entryCallback, entryErrorCallback);\n    }\n\n    function fileSystemErrorCallback(domError) {\n      console.debug('Error calling requestFileSystem: ' + domError.name);\n    }\n\n    function entryCallback(entry) {\n      // http://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-Entry\n      console.debug('Got file entry: ' + entry.name);\n      callback(entry);\n    }\n\n    function entryErrorCallback(fileError) {\n      console.debug('Error calling getFile: ' + fileError.code);\n    }\n  }\n\n  _loadMedia(\n        filepath, closure, loadedCb) {\n    console.debug('Loading media: ' + filepath);\n    const self = this;\n    // Cordova Media can only be loaded during instantiation.\n    this.sound = new window.Media(filepath, () => {\n      console.debug('Playback ended successfully.');\n    },\n      e => {\n        console.debug('Playback failed: ' + e.code);\n      },\n      mediaStatus => {\n        console.debug('Playback status update: ' + mediaStatus);\n        if (mediaStatus === window.Media.MEDIA_STARTING) {\n          console.debug('Metadata is being loaded.');\n        }\n        // We could have the duration known by now,\n        // but Cordova should do better. Improvement reported:\n        // https://issues.apache.org/jira/browse/CB-6880\n        const duration = self.sound.getDuration();\n        console.debug('Duration: ' + duration);\n\n        if (duration > 0 && closure._settings.durationchangeCb) {\n          closure._settings.durationchangeCb();\n        }\n      });\n\n    // Trigger 'canplay' event on sound (which is what HTML5 would do).\n    this._canPlay = true;\n    if (closure._settings.canplayCb) {\n      closure._settings.canplayCb();\n    }\n\n    // When Media is initialised, nothing is preloaded. Trigger loading of\n    // the audio (without actually starting playback) by seeking.\n    this.sound.seekTo(0);\n\n    if (loadedCb) {\n      loadedCb(this.sound);\n    }\n  }\n\n\n  /**\n   * Preload audio from an URL.\n   *\n   * @param {string} url - The URL that contains the audio.\n   * @param {boolean} [preload=true] - Try preloading metadata and possible some audio (default).\n   * Set to false to not download anything until playing.\n   * @param {?Function} loadedCb - The callback that is invoked when the duration of\n   * the audio file is first known.\n   */\n  load(url, preload, loadedCb) {\n    const self = this;\n\n    // The incoming url is actually a blob URL. (blob:file://xyz)\n    // This blob URL needs to be 'downloaded' first.\n    const xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'blob';\n    xhr.onload = function() {\n      if (this.status === 200) {\n        const blob = this.response;\n        console.debug('Downloaded blob');\n\n        console.debug('Writing blob to file');\n        self._writeFile(self.filename, file => {\n          file.createWriter(writer => {\n            writer.onwriteend = function() {\n              // File has been written, now load it.\n              self._loadMedia(self.filepath, self, loadedCb);\n            };\n            writer.write(blob, 'application/octet-stream');\n          });\n        });\n      }\n    };\n    xhr.send();\n  }\n\n\n  /**\n   * Start or continue playback of audio.\n   *\n   * @param {?number} position - When position is given, start playing from this position (seconds).\n   */\n  play(position) {\n    this._isPlaying = true;\n    this.sound.play();\n    return position;\n  }\n\n  /**\n   * Unload previously loaded audio.\n   */\n  reset() {\n    this._canPlay = false;\n    this.sound = null;\n  }\n\n  /**\n   * Stop playback of audio.\n   */\n  stop() {\n    this._isPlaying = false;\n    this.sound.stop();\n  }\n\n  /**\n   * Pause playback of audio.\n   */\n  pause() {\n    this._isPlaying = false;\n    this.sound.pause();\n  }\n\n  /**\n   * Start preloading audio.\n   *\n   * @private\n   */\n  preload() {\n    // This is a noop.\n  }\n\n  getPlaybackRate() {\n    // This is a noop.\n  }\n\n  setPlaybackRate(rate) {\n    // XXX: Not implemented yet.\n    return rate;\n  }\n\n\n  /**\n   * Start playing audio at the given offset.\n   *\n   * @param {number} percentage - Start at this percentage (0..100) of the audio stream.\n   * @private\n   */\n  scrub(percentage) {\n    // XXX: Not implemented yet.\n    return percentage;\n  }\n\n  /**\n   * Returns the percentage of which the buffer is filled.\n   *\n   * @returns {number} Percentage of buffer fill.\n   * @private\n   */\n  getBufferFill() {\n    // XXX: Not implemented yet.\n    return 100;\n  }\n\n  /**\n   * Returns the current playing time as offset in seconds from the start.\n   *\n   * @returns {number} Time in seconds as offset from the start.\n   * @private\n   */\n  getCurrentTime() {\n    // XXX: Not implemented yet.\n    return 0;\n  }\n\n  /**\n   * Returns the total duration in seconds.\n   *\n   * @returns {number} Time in seconds of fragment duration.\n   */\n  getDuration() {\n    if (!this.sound) {\n      return 0;\n    }\n    const duration = this.sound.getDuration();\n    // duration may be -1 when undefined.\n    if (duration === -1) {\n      return 0;\n    }\n    return duration;\n  }\n\n  /**\n   * Returns ready state of the player.\n   *\n   * @returns {boolean} True when player is ready to start loading data or play. False when no audio is loaded\n   * or preparing.\n   */\n  canPlay() {\n    return this._canPlay;\n  }\n\n  /**\n   * Returns state of the player.\n   *\n   * @returns {boolean} True when player is currently playing. False when paused or stopped.\n   */\n  isPlaying() {\n    return this._isPlaying;\n  }\n\n  setAudioVolume(volume) {\n    this.sound.setVolume(volume);\n  }\n\n  getAudioVolume() {\n  }\n}\n"
  },
  {
    "__docId__": 383,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CordovaMediaPlayer",
    "memberof": "src/audio/cordova-media-player.js",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/cordova-media-player.js",
    "importStyle": "CordovaMediaPlayer",
    "description": "",
    "lineNumber": 17,
    "interface": false
  },
  {
    "__docId__": 384,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#constructor",
    "access": null,
    "description": "ITSLanguage CordovaMediaPlayer non-graphical component.\n\nIt uses the Cordova Media component to provide playback capability\nthrough native Android or iOS code.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Override any of the default settings."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 385,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_settings",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_settings",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 386,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isPlaying",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_isPlaying",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_canPlay",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_canPlay",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#filename",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mimetype",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#mimetype",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 390,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filepath",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#filepath",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 391,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#filename",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 392,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mimetype",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#mimetype",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filepath",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#filepath",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_writeFile",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_writeFile",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 395,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_loadMedia",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_loadMedia",
    "access": null,
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "params": [
      {
        "name": "filepath",
        "types": [
          "*"
        ]
      },
      {
        "name": "closure",
        "types": [
          "*"
        ]
      },
      {
        "name": "loadedCb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 396,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sound",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#sound",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 397,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_canPlay",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_canPlay",
    "access": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 398,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#load",
    "access": null,
    "description": "Preload audio from an URL.",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The URL that contains the audio."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "preload",
        "description": "Try preloading metadata and possible some audio (default).\nSet to false to not download anything until playing."
      },
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "loadedCb",
        "description": "The callback that is invoked when the duration of\nthe audio file is first known."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 399,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#play",
    "access": null,
    "description": "Start or continue playback of audio.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "When position is given, start playing from this position (seconds)."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 400,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isPlaying",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_isPlaying",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 401,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#reset",
    "access": null,
    "description": "Unload previously loaded audio.",
    "lineNumber": 186,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 402,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_canPlay",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_canPlay",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 403,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sound",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#sound",
    "access": null,
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#stop",
    "access": null,
    "description": "Stop playback of audio.",
    "lineNumber": 194,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 405,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isPlaying",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_isPlaying",
    "access": null,
    "description": null,
    "lineNumber": 195,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#pause",
    "access": null,
    "description": "Pause playback of audio.",
    "lineNumber": 202,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 407,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isPlaying",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#_isPlaying",
    "access": null,
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 408,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preload",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#preload",
    "access": "private",
    "description": "Start preloading audio.",
    "lineNumber": 212,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 409,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPlaybackRate",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#getPlaybackRate",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 410,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPlaybackRate",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#setPlaybackRate",
    "access": null,
    "description": null,
    "lineNumber": 220,
    "undocument": true,
    "params": [
      {
        "name": "rate",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 411,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scrub",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#scrub",
    "access": "private",
    "description": "Start playing audio at the given offset.",
    "lineNumber": 232,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "percentage",
        "description": "Start at this percentage (0..100) of the audio stream."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 412,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBufferFill",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#getBufferFill",
    "access": "private",
    "description": "Returns the percentage of which the buffer is filled.",
    "lineNumber": 243,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Percentage of buffer fill."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Percentage of buffer fill."
    },
    "generator": false
  },
  {
    "__docId__": 413,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentTime",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#getCurrentTime",
    "access": "private",
    "description": "Returns the current playing time as offset in seconds from the start.",
    "lineNumber": 254,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds as offset from the start."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds as offset from the start."
    },
    "generator": false
  },
  {
    "__docId__": 414,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDuration",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#getDuration",
    "access": null,
    "description": "Returns the total duration in seconds.",
    "lineNumber": 264,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds of fragment duration."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds of fragment duration."
    },
    "generator": false
  },
  {
    "__docId__": 415,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "canPlay",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#canPlay",
    "access": null,
    "description": "Returns ready state of the player.",
    "lineNumber": 282,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when player is ready to start loading data or play. False when no audio is loaded\nor preparing."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when player is ready to start loading data or play. False when no audio is loaded\nor preparing."
    },
    "generator": false
  },
  {
    "__docId__": 416,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isPlaying",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#isPlaying",
    "access": null,
    "description": "Returns state of the player.",
    "lineNumber": 291,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when player is currently playing. False when paused or stopped."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when player is currently playing. False when paused or stopped."
    },
    "generator": false
  },
  {
    "__docId__": 417,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAudioVolume",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#setAudioVolume",
    "access": null,
    "description": null,
    "lineNumber": 295,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 418,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAudioVolume",
    "memberof": "src/audio/cordova-media-player.js~CordovaMediaPlayer",
    "longname": "src/audio/cordova-media-player.js~CordovaMediaPlayer#getAudioVolume",
    "access": null,
    "description": null,
    "lineNumber": 299,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 419,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/cordova-media-recorder.js",
    "memberof": null,
    "longname": "src/audio/cordova-media-recorder.js",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "content": "/*\nglobal\ndevice,\nMedia\n */\n\n/**\n * Use the Cordova Media recorder for recording and encoding audio\n * on a WebView, wrapped in a native App.\n * Supports 3GPP recording on Android, WAV recording on iOS.\n *\n * More information on:\n * https://github.com/apache/cordova-plugin-media/blob/master/doc/index.md\n * @private\n */\nexport default class CordovaMediaRecorder {\n  /**\n   * MediaRecorder.\n   */\n  constructor() {\n    this._isRecording = false;\n\n    const platform = device.platform;\n    let filepath = null;\n    if (platform === 'Android') {\n      // See the 'cordova-plugin-media' documentation for more Android quirks:\n      // Android devices record audio in Adaptive Multi-Rate format.\n      // The specified file should end with a .3gp extension.\n      this.filename = 'recording.3gp';\n      this.mimetype = 'audio/3gpp';\n      // Attempts to save the file on some specific location failed.\n      // Therefore, the path is no longer specified, just the filename.\n      // On iOS the behaviour is documented under quirks:\n      // If a full path is not provided, it's saved in\n      // LocalFileSystem.TEMPORARY\n      // On Android, a temporary recording is always saved to:\n      // /storage/emulated/0/tmprecording.3gp\n      // Then moved to its final destination:\n      // /storage/emulated/0/<filename>\n      filepath = this.filename;\n    } else if (platform === 'iOS') {\n      // iOS only records to files of type .wav and returns an error if the\n      // file name extension is not correct.\n      this.filename = 'recording.wav';\n      this.mimetype = 'audio/wav';\n      // On iOS, the path fed to Media() should be prepended with\n      // 'documents://'. This behaviour is documented as quirk.\n      filepath = 'documents://' + this.filename;\n    } else {\n      throw new Error('Unable to detect Android or iOS platform for ' +\n        'determining audio format.');\n    }\n\n    this.mediaRecorder = new Media(filepath,\n      // success callback\n      () => {\n        console.log('Final recording written to: ' + filepath);\n      },\n\n      // error callback\n      err => {\n        console.debug('recordAudio(): Audio Error: ' + err.code);\n      }\n    );\n  }\n\n  /**\n   * Start recording audio.\n   */\n  record() {\n    this.mediaRecorder.startRecord();\n    this._isRecording = true;\n  }\n\n  /**\n   * Is audio recording in progress.\n   *\n   * @returns {boolean} True when recording. False otherwise.\n   */\n  isRecording() {\n    return this._isRecording;\n  }\n\n  /**\n   * Stop recording audio.\n   */\n  stop() {\n    if (this.isRecording()) {\n      this.mediaRecorder.stopRecord();\n      this._isRecording = false;\n    }\n  }\n\n  _requestFilepath(\n    filename, callback) {\n    // org.apache.cordova.file provides the HTML5 Filesystem API.\n\n    // var fs = window.TEMPORARY;\n    const fs = window.PERSISTENT;\n\n    window.requestFileSystem(\n      fs, 0, fileSystemCallback, fileSystemErrorCallback);\n\n    function fileSystemCallback(fileSystem) {\n      // www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-FileSystem\n      console.debug('Got filesystem name: ' + fileSystem.name);\n\n      // getFile Creates or looks up a file.\n      // By setting options to create:false, only a lookup will be performed.\n      console.debug('Calling getFile in read mode: ' + filename);\n      fileSystem.root.getFile(filename, {\n        create: false\n      },\n        entryCallback, entryErrorCallback);\n    }\n\n    function fileSystemErrorCallback(domError) {\n      console.debug('Error calling requestFileSystem: ' + domError.name);\n    }\n\n    function entryCallback(entry) {\n      // http://www.w3.org/TR/2012/WD-file-system-api-20120417/#idl-def-Entry\n      console.debug('Got file entry: ' + entry.name);\n      entry.file(callback);\n    }\n\n    function entryErrorCallback(fileError) {\n      console.debug('Error calling getFile: ' + fileError.code);\n    }\n  }\n\n  /**\n   * Request encoded audio to be returned through callback.\n   *\n   * @param {Function} callback - The callback to use when returning the audio as a blob.\n   */\n  getEncodedAudio(callback) {\n    this._requestFilepath(this.filename, readDataUrl);\n\n    function readDataUrl(file) {\n      const reader = new FileReader();\n      reader.onloadend = function(evt) {\n        const arraybuffer = evt.target.result;\n        const b = new Blob([arraybuffer], {\n          type: this.mimetype\n        });\n        callback(b);\n      };\n\n      reader.readAsArrayBuffer(file);\n    }\n  }\n}\n"
  },
  {
    "__docId__": 420,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CordovaMediaRecorder",
    "memberof": "src/audio/cordova-media-recorder.js",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/cordova-media-recorder.js",
    "importStyle": "CordovaMediaRecorder",
    "description": "Use the Cordova Media recorder for recording and encoding audio\non a WebView, wrapped in a native App.\nSupports 3GPP recording on Android, WAV recording on iOS.\n\nMore information on:\nhttps://github.com/apache/cordova-plugin-media/blob/master/doc/index.md",
    "lineNumber": 16,
    "interface": false
  },
  {
    "__docId__": 421,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#constructor",
    "access": null,
    "description": "MediaRecorder.",
    "lineNumber": 20,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 422,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isRecording",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#_isRecording",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 423,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#filename",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 424,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mimetype",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#mimetype",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 425,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "filename",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#filename",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mimetype",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#mimetype",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 427,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mediaRecorder",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#mediaRecorder",
    "access": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 428,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "record",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#record",
    "access": null,
    "description": "Start recording audio.",
    "lineNumber": 70,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 429,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isRecording",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#_isRecording",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 430,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isRecording",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#isRecording",
    "access": null,
    "description": "Is audio recording in progress.",
    "lineNumber": 80,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when recording. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when recording. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 431,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#stop",
    "access": null,
    "description": "Stop recording audio.",
    "lineNumber": 87,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 432,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_isRecording",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#_isRecording",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 433,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_requestFilepath",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#_requestFilepath",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "filename",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 434,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getEncodedAudio",
    "memberof": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder",
    "longname": "src/audio/cordova-media-recorder.js~CordovaMediaRecorder#getEncodedAudio",
    "access": null,
    "description": "Request encoded audio to be returned through callback.",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to use when returning the audio as a blob."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 435,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/media-recorder.js",
    "memberof": null,
    "longname": "src/audio/media-recorder.js",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "content": "/*\n * Use the Media Stream Recording API for recording and encoding. Ogg Opus\n * (audio/ogg) is the prefered output format.\n *\n * The Media Stream Recording API is W3C standard in the making:\n * https://dvcs.w3.org/hg/dap/raw-file/tip/media-stream-capture/RecordingProposal.html\n *\n * Currently only supported in Firefox. There's a standards author working for\n * Microsoft which hints wide adoption in the future.\n *\n * Encoder only supports 48k/16k mono audio channel.\n * http://dxr.mozilla.org/mozilla-central/source/content/media/MediaRecorder.cpp\n * https://wiki.mozilla.org/Gecko:MediaRecorder\n *\n */\n/**\n * @private\n */\nexport default class MediaRecorder {\n  /**\n   * MediaRecorder.\n   *\n   * @param {MediaStream} mediaStream - The MediaStream to analyze.\n   */\n  constructor(mediaStream) {\n    const self = this;\n    this.mediaRecorder = new window.MediaRecorder(mediaStream);\n    this.mediaRecorder.ondataavailable = function(e) {\n      self.recordedBlob = new Blob([e.data], {\n        type: 'audio/ogg'\n      });\n      console.log('Recorded audio/ogg Blob size: ' + self.recordedBlob.size);\n      if (self.callback) {\n        self.callback(self.recordedBlob);\n        self.callback = null;\n      }\n    };\n  }\n\n  /**\n   * Start recording audio.\n   */\n  record() {\n    this.recordedBlob = null;\n    this.callback = null;\n    this.mediaRecorder.start();\n  }\n\n  /**\n   * Is audio recording in progress.\n   *\n   * @returns {boolean} True when recording. False otherwise.\n   */\n  isRecording() {\n    return this.mediaRecorder.state === 'recording';\n  }\n\n  /**\n   * Stop recording audio.\n   */\n  stop() {\n    if (this.isRecording()) {\n      // Calling `stop()` throws a dataavailable event.\n      this.mediaRecorder.stop();\n    }\n  }\n\n  /**\n   * Request encoded audio to be returned through callback.\n   *\n   * @param {Function} callback - The callback to use when returning the audio as a blob in Ogg Opus format.\n   */\n  getEncodedAudio(callback) {\n    if (this.recordedBlob) {\n      // Data already available, return right away.\n      callback(this.recordedBlob);\n      return;\n    }\n    // Callback will trigger later when audio is ready.\n    this.callback = callback;\n  }\n}\n"
  },
  {
    "__docId__": 436,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "MediaRecorder",
    "memberof": "src/audio/media-recorder.js",
    "longname": "src/audio/media-recorder.js~MediaRecorder",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/media-recorder.js",
    "importStyle": "MediaRecorder",
    "description": "",
    "lineNumber": 19,
    "interface": false
  },
  {
    "__docId__": 437,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#constructor",
    "access": null,
    "description": "MediaRecorder.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "MediaStream"
        ],
        "spread": false,
        "optional": false,
        "name": "mediaStream",
        "description": "The MediaStream to analyze."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 438,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mediaRecorder",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#mediaRecorder",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "record",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#record",
    "access": null,
    "description": "Start recording audio.",
    "lineNumber": 43,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 440,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recordedBlob",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#recordedBlob",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "callback",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#callback",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 442,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isRecording",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#isRecording",
    "access": null,
    "description": "Is audio recording in progress.",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when recording. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when recording. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 443,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#stop",
    "access": null,
    "description": "Stop recording audio.",
    "lineNumber": 61,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 444,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getEncodedAudio",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#getEncodedAudio",
    "access": null,
    "description": "Request encoded audio to be returned through callback.",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to use when returning the audio as a blob in Ogg Opus format."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 445,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "callback",
    "memberof": "src/audio/media-recorder.js~MediaRecorder",
    "longname": "src/audio/media-recorder.js~MediaRecorder#callback",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 446,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/tools.js",
    "memberof": null,
    "longname": "src/audio/tools.js",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "content": "/**\n * @title ITSLanguage Javascript\n * @overview This is part of the ITSLanguage Javascript SDK to perform helper functions.\n * @copyright (c) 2014 ITSLanguage\n * @license MIT\n * @author d-centralize\n */\n\nconst ee = require('event-emitter');\n\n/**\n@module Tools\nITSLanguage helper tools.\n*/\n\n/**\n * A simple stopwatch that ticks every 100 ms. It can be bound to an {@link AudioPlayer} or {@link AudioRecorder}\n * which binds the stop and playing functionality to the stopping and starting of the Watch.\n * It can also be listened to by other entities.\n * @experimental When binding to an Audio Recorder, the stopwatch is not always synced properly.\n * A difference of 0.1s or 0.2s too high may occur when counting. When binding to an Audio Player however, the timer\n * will sync properly and show the correct duration of the loaded audio file.\n */\nexport default class Stopwatch {\n  /**\n   * @param {Function} tickCb - The callback that is invoked on every tick (every 100ms).\n   * @throws {Error} If tickCb is missing.\n   */\n  constructor(tickCb) {\n    if (!tickCb) {\n      throw new Error('tickCb parameter required');\n    }\n    this._interval = null;\n    this._value = 0;\n    this._tickCb = tickCb;\n    this._emitter = ee({});\n  }\n\n  /**\n   * Start counting and tick every 100 ms.\n   */\n  start() {\n    console.debug('Start counting');\n    // Tick every 100ms (0.1s)\n    const self = this;\n    this._interval = setInterval(() => {\n      self.update();\n    }, 100);\n  }\n\n  /**\n   * Stop counting.\n   */\n  stop() {\n    console.debug('Stop counting');\n    clearInterval(this._interval);\n    this.tick();\n    this._interval = null;\n  }\n\n  /**\n   * Reset count to 0.\n   */\n  reset() {\n    console.debug('Reset count');\n    this._value = 0;\n    this.tick();\n  }\n\n  /**\n   * Tick once and increment the value by 1.\n   */\n  update() {\n    this.tick();\n    this._value++;\n  }\n\n  /**\n   * Invoke the tick callback with the current value.\n   */\n  tick() {\n    this._tickCb(this._value);\n    this._emitter.emit('tick', this._value);\n  }\n\n  registerListener(tickCb) {\n    this._emitter.on('tick', tickCb);\n  }\n\n  stopListening(tickCb) {\n    this._emitter.off('tick', tickCb);\n  }\n\n}\n"
  },
  {
    "__docId__": 447,
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "ee",
    "memberof": "src/audio/tools.js",
    "longname": "src/audio/tools.js~ee",
    "access": null,
    "export": false,
    "importPath": "itslanguage/src/audio/tools.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 9,
    "unknown": [
      {
        "tagName": "@title",
        "tagValue": "ITSLanguage Javascript"
      },
      {
        "tagName": "@overview",
        "tagValue": "This is part of the ITSLanguage Javascript SDK to perform helper functions."
      },
      {
        "tagName": "@copyright",
        "tagValue": "(c) 2014 ITSLanguage"
      },
      {
        "tagName": "@license",
        "tagValue": "MIT"
      },
      {
        "tagName": "@author",
        "tagValue": "d-centralize"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 448,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Stopwatch",
    "memberof": "src/audio/tools.js",
    "longname": "src/audio/tools.js~Stopwatch",
    "access": null,
    "export": true,
    "importPath": "itslanguage/src/audio/tools.js",
    "importStyle": "Stopwatch",
    "description": "A simple stopwatch that ticks every 100 ms. It can be bound to an {@link AudioPlayer} or {@link AudioRecorder}\nwhich binds the stop and playing functionality to the stopping and starting of the Watch.\nIt can also be listened to by other entities.",
    "lineNumber": 24,
    "experimental": "When binding to an Audio Recorder, the stopwatch is not always synced properly.\nA difference of 0.1s or 0.2s too high may occur when counting. When binding to an Audio Player however, the timer\nwill sync properly and show the correct duration of the loaded audio file.",
    "interface": false
  },
  {
    "__docId__": 449,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#constructor",
    "access": null,
    "description": "",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "tickCb",
        "description": "The callback that is invoked on every tick (every 100ms)."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "If tickCb is missing."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 450,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_interval",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_interval",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_value",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_value",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 452,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_tickCb",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_tickCb",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_emitter",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_emitter",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#start",
    "access": null,
    "description": "Start counting and tick every 100 ms.",
    "lineNumber": 42,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 455,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_interval",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_interval",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 456,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#stop",
    "access": null,
    "description": "Stop counting.",
    "lineNumber": 54,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 457,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_interval",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_interval",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 458,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#reset",
    "access": null,
    "description": "Reset count to 0.",
    "lineNumber": 64,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 459,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_value",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#_value",
    "access": null,
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#update",
    "access": null,
    "description": "Tick once and increment the value by 1.",
    "lineNumber": 73,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 461,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "tick",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#tick",
    "access": null,
    "description": "Invoke the tick callback with the current value.",
    "lineNumber": 81,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 462,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "registerListener",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#registerListener",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "params": [
      {
        "name": "tickCb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 463,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopListening",
    "memberof": "src/audio/tools.js~Stopwatch",
    "longname": "src/audio/tools.js~Stopwatch#stopListening",
    "access": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "params": [
      {
        "name": "tickCb",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 464,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/wave-packer.js",
    "memberof": null,
    "longname": "src/audio/wave-packer.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\n * Packer class for audio packing\n *\n * @private\n */\nexport default class WavePacker {\n  /**\n   * Stop recording audio.\n   *\n   * @param {number} recordingSampleRate - Sample rate of recording. Must be either 48000 or 44100.\n   * @param {number} sampleRate - Sample rate. Must be half or a quarter of the recording sample rate.\n   * @param {number} channels - Amount of audio channels. 1 or 2.\n   */\n  init(recordingSampleRate, sampleRate, channels) {\n    this.recordingSampleRate = recordingSampleRate;\n    if ([48000, 44100].indexOf(this.recordingSampleRate) === -1) {\n      throw new Error(\n        '48000 or 44100 are the only supported recordingSampleRates');\n    }\n\n    this.sampleRate = sampleRate;\n    if ([\n      this.recordingSampleRate,\n      this.recordingSampleRate / 2,\n      this.recordingSampleRate / 4\n    ].indexOf(this.sampleRate) === -1) {\n      throw new Error(\n        'sampleRate must be equal, half or a quarter of the ' +\n        'recording sample rate');\n    }\n\n    this.channels = channels;\n    this.recording = false;\n  }\n\n  clear() {\n    this.recLength = 0;\n    this.recBuffersL = [];\n    this.recBuffersR = [];\n  }\n\n  record(left, right) {\n    console.debug('Recording bytes: ' + left.length);\n    this.recBuffersL.push(left);\n    this.recBuffersR.push(right);\n    this.recLength += left.length;\n  }\n\n  recordStreaming(left, right, callback) {\n    function convertFloat32ToInt16(buffer) {\n      let l = buffer.length;\n      const buf = new Int16Array(l);\n      while (l--) {\n        buf[l] = Math.min(1, buffer[l]) * 0x7FFF;\n      }\n      return buf.buffer;\n    }\n    // Both the left and right channel's data is a view (Float32Array)\n    // on top of the buffer (ArrayBuffer). Each buffer's element should\n    // have _value between -1 and 1.\n    // The audio to export are 16 bit PCM samples that are wrapped in\n    // a WAVE file at the server. Therefore convert from float here.\n    const converted = convertFloat32ToInt16(left);\n    console.debug('Streaming bytes: ' + converted.byteLength);\n    callback(converted);\n  }\n\n  exportWAV(callback) {\n    const bufferL = WavePacker.mergeBuffers(this.recBuffersL, this.recLength);\n    const bufferR = WavePacker.mergeBuffers(this.recBuffersR, this.recLength);\n    const interleaved = this.interleave(bufferL, bufferR);\n    const dataview = this.encodeWAV(interleaved);\n    const audioBlob = new Blob([dataview], {\n      type: 'audio/wav'\n    });\n    callback(audioBlob);\n  }\n\n\n  exportMonoWAV(callback) {\n    const bufferL = WavePacker.mergeBuffers(this.recBuffersL, this.recLength);\n    const dataview = this.encodeWAV(bufferL, true);\n    const audioBlob = new Blob([dataview], {\n      type: 'audio/wav'\n    });\n    callback(audioBlob);\n  }\n\n  /**\n   * Wrap the raw audio in a header to make it a WAVE format.\n   *\n   * Specs: {@link https://ccrma.stanford.edu/courses/422/projects/WaveFormat/}.\n   *\n   * @param {[]} interleaved - Array of interleaved audio.\n   */\n  encodeWAV(interleaved) {\n    const buffer = new ArrayBuffer(44 + interleaved.length * 2);\n    const view = new DataView(buffer);\n\n    // RIFF chunk descriptor\n    WavePacker.writeUTFBytes(view, 0, 'RIFF');\n    // file length\n    view.setUint32(4, 44 + interleaved.length * 2, true);\n    // RIFF type\n    WavePacker.writeUTFBytes(view, 8, 'WAVE');\n    // FMT sub-chunk\n    WavePacker.writeUTFBytes(view, 12, 'fmt ');\n    // format chunk length\n    view.setUint32(16, 16, true);\n    // sample format (raw)\n    view.setUint16(20, 1, true);\n    // channel count. mono=1, stereo=2\n    view.setUint16(22, this.channels, true);\n    // sample rate\n    view.setUint32(24, this.sampleRate, true);\n    // byte rate (sample rate * block align)\n    view.setUint32(28, this.sampleRate * 2 * this.channels, true);\n    // block align (channel count * bytes per sample)\n    view.setUint16(32, this.channels * 2, true);\n    // bits per sample\n    view.setUint16(34, 16, true);\n    // data sub-chunk\n    WavePacker.writeUTFBytes(view, 36, 'data');\n    view.setUint32(40, interleaved.length * 2, true);\n\n    // write the PCM samples\n    const lng = interleaved.length;\n    let index = 44;\n    const volume = 1;\n    for (let i = 0; i < lng; i++) {\n      view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\n      index += 2;\n    }\n\n    // Wrap in HTML5 Blob for transport\n    const blob = new Blob([view], {\n      type: 'audio/wav'\n    });\n    console.log('Recorded audio/wav Blob size: ' + blob.size);\n    return blob;\n  }\n\n  interleave(leftChannel, rightChannel) {\n    let result = null;\n    let length = null;\n    let i = null;\n    let inputIndex = null;\n    if (this.channels === 1) {\n      // Keep both right and left input channels, but \"pan\" them both\n      // in the center (to the single mono channel)\n      length = leftChannel.length;\n      result = new Float32Array(length);\n      for (i = 0; i < leftChannel.length; ++i) {\n        result[i] = 0.5 * (leftChannel[i] + rightChannel[i]);\n      }\n    } else {\n      length = leftChannel.length + rightChannel.length;\n      result = new Float32Array(length);\n\n      inputIndex = 0;\n      for (i = 0; i < length;) {\n        result[i++] = leftChannel[inputIndex];\n        result[i++] = rightChannel[inputIndex];\n        inputIndex++;\n      }\n    }\n\n    // Also downsample if needed.\n    if (this.recordingSampleRate !== this.sampleRate) {\n      // E.g. 44100/11025 = 4\n      const reduceBy = this.recordingSampleRate / this.sampleRate;\n      const resampledResult = new Float32Array(length / reduceBy);\n\n      inputIndex = 0;\n      for (i = 0; i < length;) {\n        let value = 0;\n        for (let j = 0; j < reduceBy; j++) {\n          value += result[inputIndex++];\n        }\n        resampledResult[i++] = 1 / reduceBy * value;\n      }\n      return resampledResult;\n    }\n    return result;\n  }\n\n  static mergeBuffers(channelBuffer, recordingLength) {\n    const result = new Float32Array(recordingLength);\n    let offset = 0;\n    const lng = channelBuffer.length;\n    for (let i = 0; i < lng; i++) {\n      const buffer = channelBuffer[i];\n      result.set(buffer, offset);\n      offset += buffer.length;\n    }\n    return result;\n  }\n\n  static writeUTFBytes(view, offset, string) {\n    const lng = string.length;\n    for (let i = 0; i < lng; i++) {\n      view.setUint8(offset + i, string.charCodeAt(i));\n    }\n  }\n}\n"
  },
  {
    "__docId__": 465,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WavePacker",
    "memberof": "src/audio/wave-packer.js",
    "longname": "src/audio/wave-packer.js~WavePacker",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/wave-packer.js",
    "importStyle": "WavePacker",
    "description": "Packer class for audio packing",
    "lineNumber": 6,
    "interface": false
  },
  {
    "__docId__": 466,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "init",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#init",
    "access": null,
    "description": "Stop recording audio.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "recordingSampleRate",
        "description": "Sample rate of recording. Must be either 48000 or 44100."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sampleRate",
        "description": "Sample rate. Must be half or a quarter of the recording sample rate."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "channels",
        "description": "Amount of audio channels. 1 or 2."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 467,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recordingSampleRate",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recordingSampleRate",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sampleRate",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#sampleRate",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "channels",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#channels",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recording",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recording",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clear",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#clear",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 472,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recLength",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recLength",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recBuffersL",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recBuffersL",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recBuffersR",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recBuffersR",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "record",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#record",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 476,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recLength",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recLength",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 477,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "recordStreaming",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#recordStreaming",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "left",
        "types": [
          "*"
        ]
      },
      {
        "name": "right",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 478,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exportWAV",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#exportWAV",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 479,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "exportMonoWAV",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#exportMonoWAV",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 480,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "encodeWAV",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#encodeWAV",
    "access": null,
    "description": "Wrap the raw audio in a header to make it a WAVE format.\n\nSpecs: {@link https://ccrma.stanford.edu/courses/422/projects/WaveFormat/}.",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "[]"
        ],
        "spread": false,
        "optional": false,
        "name": "interleaved",
        "description": "Array of interleaved audio."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 481,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "interleave",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker#interleave",
    "access": null,
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [
      {
        "name": "leftChannel",
        "types": [
          "*"
        ]
      },
      {
        "name": "rightChannel",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 482,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "mergeBuffers",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker.mergeBuffers",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "params": [
      {
        "name": "channelBuffer",
        "types": [
          "*"
        ]
      },
      {
        "name": "recordingLength",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 483,
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "writeUTFBytes",
    "memberof": "src/audio/wave-packer.js~WavePacker",
    "longname": "src/audio/wave-packer.js~WavePacker.writeUTFBytes",
    "access": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "view",
        "types": [
          "*"
        ]
      },
      {
        "name": "offset",
        "types": [
          "*"
        ]
      },
      {
        "name": "string",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 484,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/web-audio-player.js",
    "memberof": null,
    "longname": "src/audio/web-audio-player.js",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "content": "/**\n * @title ITSLanguage Javascript Audio\n * @overview This is part of the ITSLanguage Javascript SDK to perform audio related functions.\n * @copyright (c) 2014 ITSLanguage\n * @license MIT\n * @author d-centralize\n *\n * This class fires the same events as the HTML5 Audio does. {@link http://www.w3schools.com/tags/ref_av_dom.asp}\n * @private\n */\n\nexport default class WebAudioPlayer {\n  /**\n   * ITSLanguage WebAudioPlayer non-graphical component.\n   *\n   * This player uses the HTML5 Audio component for playback.\n   *\n   * @param {?Object} options - Override any of the default settings.\n   */\n  constructor(options) {\n    this._settings = Object.assign({}, options);\n\n    this._initPlayer();\n  }\n\n  _initPlayer() {\n    this.sound = new window.Audio();\n    this._pauseIsStop = false;\n\n    // The its.AudioPlayer API is based upon the same API calls as the\n    // HTML5 Audio element itself, therefore, just bubble up all events.\n    const self = this;\n\n    this.sound.addEventListener('playing', () => {\n      if (self._settings.playingCb) {\n        self._settings.playingCb();\n      }\n    });\n\n    this.sound.addEventListener('timeupdate', () => {\n      if (self._settings.timeupdateCb) {\n        self._settings.timeupdateCb();\n      }\n    });\n\n    this.sound.addEventListener('durationchange', () => {\n      if (self._settings.durationchangeCb) {\n        self._settings.durationchangeCb();\n      }\n    });\n\n    this.sound.addEventListener('canplay', () => {\n      if (self._settings.canplayCb) {\n        self._settings.canplayCb();\n      }\n    });\n\n    this.sound.addEventListener('ended', () => {\n      if (self._settings.endedCb) {\n        self._settings.endedCb();\n      }\n    });\n\n    this.sound.addEventListener('pause', () => {\n      // The HTML5 audio player only has a pause(), no stop().\n      // To differentiate between the two, a flag is set in case the user\n      // explicitly stopped (not paused) the audio.\n      if (self._pauseIsStop === true) {\n        self._pauseIsStop = false;\n        if (self._settings.pauseCb) {\n          self._settings.pauseCb();\n        }\n      } else if (self._settings.stoppedCb) {\n        self._settings.stoppedCb();\n      }\n      if (self._settings.playbackStoppedCb) {\n        self._settings.playbackStoppedCb();\n      }\n    });\n\n    this.sound.addEventListener('progress', () => {\n      if (self._settings.progressCb) {\n        self._settings.progressCb();\n      }\n    });\n\n    this.sound.addEventListener('error', e => {\n      switch (e.target.error.code) {\n        case e.target.error.MEDIA_ERR_ABORTED:\n          console.error('You aborted the playback.');\n          break;\n        case e.target.error.MEDIA_ERR_NETWORK:\n          console.error(\n          'A network error caused the audio download to fail.');\n          break;\n        case e.target.error.MEDIA_ERR_DECODE:\n          console.error(\n          'The audio playback was aborted due to a corruption ' +\n          'problem or because the media used features your ' +\n          'browser did not support.');\n          break;\n        case e.target.error.MEDIA_ERR_SRC_NOT_SUPPORTED:\n          console.error(\n          'The audio could not be loaded, either because the ' +\n          'server or network failed or because the format is ' +\n          'not supported.');\n          break;\n        default:\n          console.error('An unknown error occurred.');\n          break;\n      }\n      if (self._settings.errorCb) {\n        self._settings.errorCb();\n      }\n    });\n  }\n\n\n  /**\n   * Preload audio from an URL.\n   *\n   * @param {string} url - The URL that contains the audio.\n   * @param {boolean} [preload=true] - Try preloading metadata and possible some audio (default).\n   * Set to false to not download anything until playing.\n   * @param {?Function} loadedCb - The callback that is invoked when the duration of the audio file\n   * is first known.\n   */\n  load(url, preload, loadedCb) {\n    preload = preload === undefined ? true : preload;\n\n    // Automatically begin buffering the file, even if autoplay is off.\n    this.sound.autobuffer = Boolean(preload);\n\n    // Preloading options:\n    // none - Do not preload any media.\n    // Wait for a play event before downloading anything.\n    // metadata - Preload just the metadata. Grab the start and the end of\n    // the file via range-request and determine the duration.\n    // auto - Preload the whole file. Grab the start and the end of the\n    // file to determine duration, then seek back to the start\n    // again for the preload proper.\n    this.sound.preload = preload ? 'auto' : 'none';\n\n    const self = this;\n    if (loadedCb) {\n      this.sound.addEventListener('durationchange', () => {\n        console.log('Duration change for ' + url + ' to : ' +\n          self.sound.duration);\n        loadedCb(self.sound);\n      });\n    }\n\n    this.sound.src = url;\n  }\n\n\n  /**\n   * Start or continue playback of audio.\n   *\n   * @param {?number} position - When position is given, start playing from this position (seconds).\n   */\n  play(position) {\n    if (position !== undefined) {\n      if (this.sound.readyState < this.sound.HAVE_METADATA) {\n        // In case the audio wasn't already preloaded, do it now.\n        this.sound.preload = 'auto';\n        console.warn('Playing from a given position is not possible. ' +\n          'Audio was not yet loaded. Try again.');\n      } else {\n        console.debug('Scrub position to: ' + position);\n        this.sound.currentTime = position;\n      }\n    }\n    console.debug('Start playing from position: ' + this.sound.currentTime);\n    this.sound.play();\n  }\n\n  /**\n   * Unload previously loaded audio.\n   */\n  reset() {\n    this._initPlayer();\n  }\n\n  /**\n   * Stop playback of audio.\n   */\n  stop() {\n    // The HTML5 audio player only has a pause(), no stop().\n    // To differentiate between the two, set a flag.\n    this.sound.pause();\n    this.sound.currentTime = 0;\n  }\n\n  /**\n   * Pause playback of audio.\n   */\n  pause() {\n    this._pauseIsStop = true;\n    this.sound.pause();\n  }\n\n  /**\n   * Start preloading audio.\n   */\n  preload() {\n    // In case the audio wasn't already preloaded, do it now.\n    if (this.sound.preload !== 'auto') {\n      console.info('Start preloading audio.');\n      this.sound.preload = 'auto';\n    }\n  }\n\n\n  /**\n   * Start playing audio at the given offset.\n   *\n   * @param {number} percentage - Start at this percentage (0..100) of the audio stream.\n   */\n  scrub(percentage) {\n    // In case the audio wasn't already preloaded, do it now.\n    if (this.sound.readyState < this.sound.HAVE_METADATA) {\n      this.preload();\n      console.warn('Scrubbing not possible. Audio was not yet loaded. ' +\n        'Try again.');\n      return;\n    }\n\n    const newTime = this.sound.duration / 100 * percentage;\n    console.log('Moving audio position to: ' + percentage + '%: ' +\n      newTime + 's of total playing time: ' + this.sound.duration);\n    this.sound.currentTime = newTime;\n  }\n\n  /**\n   * Returns the percentage of which the buffer is filled.\n   *\n   * @returns {number} Percentage of buffer fill.\n   */\n  getBufferFill() {\n    if (this.sound.buffered === undefined ||\n      this.sound.buffered.length === 0) {\n      // Nothing buffered yet.\n      return 0;\n    }\n\n    // The fact that there's not one buffer segment is ignored here.\n    // Truely representing the buffered state requires multiple\n    // loading bars.\n    // Usually, when user didn't seek yet, there are two segments:\n    // Got segment from: 0 to: 187.63999938964844\n    // Got segment from: 222.44700622558594 to: 228.1140899658203\n    // The latter is gained when the HTML5 audio component tries to find\n    // the total audio duration.\n    // More info:\n    // http://html5doctor.com/html5-audio-the-state-of-play/#time-ranges\n    let probableEnd = 0;\n    for (let i = 0; i < this.sound.buffered.length; i++) {\n      const start = this.sound.buffered.start(i);\n      const end = this.sound.buffered.end(i);\n      // console.log('Got segment from: ' + start + ' to: ' + end);\n      // Often, the segment that starts from 0 keeps growing and\n      // indicates -most likely- the biggest buffer.\n      if (start === 0) {\n        probableEnd = end;\n      }\n    }\n\n    // Round up,so the buffer won't get stuck on 99% when\n    // duration and buffer are equal, except for some far decimal.\n    const loaded = Math.round(probableEnd * 100 / this.sound.duration);\n    console.log('Buffer filled to ' + loaded + '%');\n    return loaded;\n  }\n\n  /**\n   * Returns the current playing time as offset in seconds from the start.\n   *\n   * @returns {number} Time in seconds as offset from the start.\n   */\n  getCurrentTime() {\n    return this.sound.currentTime;\n  }\n\n  /**\n   * Returns the total duration in seconds.\n   *\n   * @returns {number} Time in seconds of fragment duration. 0 if no audio is loaded.\n   */\n  getDuration() {\n    let duration = this.sound.duration;\n    // When no audio is loaded, the duration may be NaN\n    if (!duration) {\n      duration = 0;\n    }\n    return duration;\n  }\n\n  /**\n   * Returns state of the player.\n   *\n   * @returns {boolean} True when player is currently playing. False when paused or stopped.\n   */\n  isPlaying() {\n    return !this.sound.paused;\n  }\n\n  setPlaybackRate(rate) {\n    this.sound.playbackRate = rate;\n  }\n\n  getPlaybackRate() {\n    return this.sound.playbackRate;\n  }\n\n  /**\n   * Returns ready state of the player.\n   *\n   * @returns {boolean} True when player is ready to start loading data or play. False when no audio is loaded\n   * or preparing.\n   */\n  canPlay() {\n    // Either the player is in a valid readyState (preloaded), or\n    // the player has a source attached and doesn't show any loading error (non-preloaded).\n    return this.sound.readyState >= this.sound.HAVE_METADATA ||\n      this.sound.src && !this.sound.error;\n  }\n\n  setAudioVolume(volume) {\n    this.sound.volume = volume;\n  }\n\n  getAudioVolume() {\n    return this.sound.volume;\n  }\n}\n"
  },
  {
    "__docId__": 485,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WebAudioPlayer",
    "memberof": "src/audio/web-audio-player.js",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/web-audio-player.js",
    "importStyle": "WebAudioPlayer",
    "description": "",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@title",
        "tagValue": "ITSLanguage Javascript Audio"
      },
      {
        "tagName": "@overview",
        "tagValue": "This is part of the ITSLanguage Javascript SDK to perform audio related functions."
      },
      {
        "tagName": "@copyright",
        "tagValue": "(c) 2014 ITSLanguage"
      },
      {
        "tagName": "@license",
        "tagValue": "MIT"
      },
      {
        "tagName": "@author",
        "tagValue": "d-centralize\n\nThis class fires the same events as the HTML5 Audio does. {@link http://www.w3schools.com/tags/ref_av_dom.asp}"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 486,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#constructor",
    "access": null,
    "description": "ITSLanguage WebAudioPlayer non-graphical component.\n\nThis player uses the HTML5 Audio component for playback.",
    "lineNumber": 20,
    "params": [
      {
        "nullable": true,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Override any of the default settings."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 487,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_settings",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#_settings",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 488,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_initPlayer",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#_initPlayer",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 489,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sound",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#sound",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 490,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pauseIsStop",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#_pauseIsStop",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 491,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "load",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#load",
    "access": null,
    "description": "Preload audio from an URL.",
    "lineNumber": 128,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The URL that contains the audio."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "preload",
        "description": "Try preloading metadata and possible some audio (default).\nSet to false to not download anything until playing."
      },
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "loadedCb",
        "description": "The callback that is invoked when the duration of the audio file\nis first known."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 492,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "play",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#play",
    "access": null,
    "description": "Start or continue playback of audio.",
    "lineNumber": 162,
    "params": [
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "When position is given, start playing from this position (seconds)."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 493,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#reset",
    "access": null,
    "description": "Unload previously loaded audio.",
    "lineNumber": 181,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 494,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#stop",
    "access": null,
    "description": "Stop playback of audio.",
    "lineNumber": 188,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 495,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "pause",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#pause",
    "access": null,
    "description": "Pause playback of audio.",
    "lineNumber": 198,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 496,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_pauseIsStop",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#_pauseIsStop",
    "access": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 497,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "preload",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#preload",
    "access": null,
    "description": "Start preloading audio.",
    "lineNumber": 206,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 498,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "scrub",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#scrub",
    "access": null,
    "description": "Start playing audio at the given offset.",
    "lineNumber": 220,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "percentage",
        "description": "Start at this percentage (0..100) of the audio stream."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 499,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getBufferFill",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#getBufferFill",
    "access": null,
    "description": "Returns the percentage of which the buffer is filled.",
    "lineNumber": 240,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Percentage of buffer fill."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Percentage of buffer fill."
    },
    "generator": false
  },
  {
    "__docId__": 500,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getCurrentTime",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#getCurrentTime",
    "access": null,
    "description": "Returns the current playing time as offset in seconds from the start.",
    "lineNumber": 281,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds as offset from the start."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds as offset from the start."
    },
    "generator": false
  },
  {
    "__docId__": 501,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getDuration",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#getDuration",
    "access": null,
    "description": "Returns the total duration in seconds.",
    "lineNumber": 290,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number} Time in seconds of fragment duration. 0 if no audio is loaded."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Time in seconds of fragment duration. 0 if no audio is loaded."
    },
    "generator": false
  },
  {
    "__docId__": 502,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isPlaying",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#isPlaying",
    "access": null,
    "description": "Returns state of the player.",
    "lineNumber": 304,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when player is currently playing. False when paused or stopped."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when player is currently playing. False when paused or stopped."
    },
    "generator": false
  },
  {
    "__docId__": 503,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setPlaybackRate",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#setPlaybackRate",
    "access": null,
    "description": null,
    "lineNumber": 308,
    "undocument": true,
    "params": [
      {
        "name": "rate",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 504,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPlaybackRate",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#getPlaybackRate",
    "access": null,
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 505,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "canPlay",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#canPlay",
    "access": null,
    "description": "Returns ready state of the player.",
    "lineNumber": 322,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when player is ready to start loading data or play. False when no audio is loaded\nor preparing."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when player is ready to start loading data or play. False when no audio is loaded\nor preparing."
    },
    "generator": false
  },
  {
    "__docId__": 506,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "setAudioVolume",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#setAudioVolume",
    "access": null,
    "description": null,
    "lineNumber": 329,
    "undocument": true,
    "params": [
      {
        "name": "volume",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "__docId__": 507,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAudioVolume",
    "memberof": "src/audio/web-audio-player.js~WebAudioPlayer",
    "longname": "src/audio/web-audio-player.js~WebAudioPlayer#getAudioVolume",
    "access": null,
    "description": null,
    "lineNumber": 333,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "__docId__": 508,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/audio/web-audio-recorder.js",
    "memberof": null,
    "longname": "src/audio/web-audio-recorder.js",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "content": "/**\n * WebAudioRecorder.\n * @private\n */\nexport default class WebAudioRecorder {\n  /**\n   * Use 'low level' processing tooling to record audio and get a Wave\n   * (audio/wav) encoded recording.\n   *\n   * Currently supported in all modern HTML5/WebAudio browsers.\n   *\n   * @param {GainNode} source - The source to record.\n   * @param {?Function} streamingCallback - The callback to deliver audio chunks to.\n   * @param {WavePacker} packer - Packer to use.\n   */\n  constructor(source, streamingCallback, packer) {\n    this.recording = false;\n\n    const context = source.context;\n    // For the best quality, use the samplerate in which audio is recorded.\n    this.recordedSampleRate = context.sampleRate;\n    // var sampleRate = recordedSampleRate;\n    // 48000hz -> 24000hz recording, 44100hz -> 22050hz recording.\n    // Sheffield determined the minimum to be 16000hz, so /4 is too low.\n    this.sampleRate = this.recordedSampleRate / 2;\n    // Streaming doesn't yet downsample: #1302.\n    this.sampleRate = streamingCallback ? this.recordedSampleRate :\n                        this.sampleRate;\n\n    // Always record audio in mono.\n    this.channels = 1;\n    console.log('Recording at: ' +\n                  this.getAudioSpecs().audioParameters.sampleRate);\n\n    this.packer = packer;\n    this.packer.init(this.recordedSampleRate, this.sampleRate, this.channels);\n\n    // From the spec: This value controls how frequently the audioprocess\n    // event is dispatched and how many sample-frames need to be processed\n    // each call. Lower values for buffer size will result in a lower\n    // (better) latency. Higher values will be necessary to avoid audio\n    // breakup and glitches.\n    // Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\n    const bufferSize = 8192;\n    const recorder = context.createScriptProcessor(bufferSize, 2, 2);\n    // Keep a reference to the scriptProcessor.\n    // This is a workaround for a bug in Chrome that would otherwise lead to\n    // the recorder being garbage collected before it even recorded anything.\n    // https://bugs.webkit.org/show_bug.cgi?id=112521\n    this._recorder = recorder;\n\n    const self = this;\n    recorder.onaudioprocess = function(e) {\n      if (!self.recording) {\n        return;\n      }\n      const left = e.inputBuffer.getChannelData(0);\n      const right = e.inputBuffer.getChannelData(1);\n      // These returned channel buffers are pointers to the current samples\n      // coming in. Make a snapshot (clone). The webworkers can't serialize\n      // the pointers. Well, Chrome and FF could, but Edge can't.\n      const leftClone = new Float32Array(left);\n      const rightClone = new Float32Array(right);\n      self.packer.record(leftClone, rightClone);\n      if (streamingCallback) {\n        self.packer.recordStreaming(leftClone, rightClone, streamingCallback);\n      }\n    };\n\n    source.connect(recorder);\n    // If the script node is not connected to an output the \"onaudioprocess\"\n    // event is not triggered in chrome.\n    recorder.connect(context.destination);\n  }\n\n  /**\n   * Get the recorded audio specifications.\n   *\n   * @returns {Object} Containing metadata on the audio format.\n   */\n  getAudioSpecs() {\n    return {\n      audioFormat: 'audio/wave',\n      audioParameters: {\n        channels: this.channels,\n        sampleWidth: 16,\n        frameRate: this.sampleRate,\n        sampleRate: this.sampleRate\n      }\n    };\n  }\n\n  /**\n   * Start recording audio.\n   *\n   */\n  record() {\n    this.packer.clear();\n    this.recording = true;\n  }\n\n  /**\n   * Request encoded audio to be returned through callback.\n   *\n   * @param {Function} callback - The callback to use when returning the audio as a blob in Wave format.\n   */\n  getEncodedAudio(callback) {\n    this.packer.exportWAV(callback);\n  }\n\n  /**\n   * Is audio recording in progress.\n   *\n   * @returns {boolean} True when recording. False otherwise.\n   */\n  isRecording() {\n    return this.recording;\n  }\n\n  /**\n   * Stop recording audio.\n   */\n  stop() {\n    this.recording = false;\n  }\n}\n"
  },
  {
    "__docId__": 509,
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "WebAudioRecorder",
    "memberof": "src/audio/web-audio-recorder.js",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "access": "private",
    "export": true,
    "importPath": "itslanguage/src/audio/web-audio-recorder.js",
    "importStyle": "WebAudioRecorder",
    "description": "WebAudioRecorder.",
    "lineNumber": 5,
    "interface": false
  },
  {
    "__docId__": 510,
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#constructor",
    "access": null,
    "description": "Use 'low level' processing tooling to record audio and get a Wave\n(audio/wav) encoded recording.\n\nCurrently supported in all modern HTML5/WebAudio browsers.",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "GainNode"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": "The source to record."
      },
      {
        "nullable": true,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "streamingCallback",
        "description": "The callback to deliver audio chunks to."
      },
      {
        "nullable": null,
        "types": [
          "WavePacker"
        ],
        "spread": false,
        "optional": false,
        "name": "packer",
        "description": "Packer to use."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 511,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recording",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#recording",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 512,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recordedSampleRate",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#recordedSampleRate",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 513,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sampleRate",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#sampleRate",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 514,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "sampleRate",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#sampleRate",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "channels",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#channels",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 516,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "packer",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#packer",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 517,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_recorder",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#_recorder",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 518,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAudioSpecs",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#getAudioSpecs",
    "access": null,
    "description": "Get the recorded audio specifications.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Containing metadata on the audio format."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Containing metadata on the audio format."
    },
    "generator": false
  },
  {
    "__docId__": 519,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "record",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#record",
    "access": null,
    "description": "Start recording audio.",
    "lineNumber": 97,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 520,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recording",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#recording",
    "access": null,
    "description": null,
    "lineNumber": 99,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 521,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getEncodedAudio",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#getEncodedAudio",
    "access": null,
    "description": "Request encoded audio to be returned through callback.",
    "lineNumber": 107,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback to use when returning the audio as a blob in Wave format."
      }
    ],
    "generator": false
  },
  {
    "__docId__": 522,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "isRecording",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#isRecording",
    "access": null,
    "description": "Is audio recording in progress.",
    "lineNumber": 116,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean} True when recording. False otherwise."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True when recording. False otherwise."
    },
    "generator": false
  },
  {
    "__docId__": 523,
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#stop",
    "access": null,
    "description": "Stop recording audio.",
    "lineNumber": 123,
    "params": [],
    "generator": false
  },
  {
    "__docId__": 524,
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "recording",
    "memberof": "src/audio/web-audio-recorder.js~WebAudioRecorder",
    "longname": "src/audio/web-audio-recorder.js~WebAudioRecorder#recording",
    "access": null,
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 525,
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "src/index.js",
    "memberof": null,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import {default as VolumeMeter, generateWaveSample} from './audio/audio-tools';\nimport AdministrativeSDK from './administrative-sdk/administrative-sdk';\nimport AudioPlayer from './audio/audio-player';\nimport AudioRecorder from './audio/audio-recorder';\nimport BasicAuth from './administrative-sdk/basic-auth/basic-auth';\nimport Category from './administrative-sdk/category/category';\nimport ChoiceChallenge from './administrative-sdk/choice-challenge/choice-challenge';\nimport Connection from './administrative-sdk/connection/connection-controller';\nimport EmailCredentials from './administrative-sdk/email-credentials/email-credentials';\nimport Group from './administrative-sdk/group/group';\nimport Organisation from './administrative-sdk/organisation/organisation';\nimport Profile from './administrative-sdk/profile/profile';\nimport PronunciationChallenge from './administrative-sdk/pronunciation-challenge/pronunciation-challenge';\nimport Role from './administrative-sdk/role/role';\nimport SpeechChallenge from './administrative-sdk/speech-challenge/speech-challenge';\nimport Stopwatch from './audio/tools';\nimport User from './administrative-sdk/user/user';\n\nexport {\n  AdministrativeSDK,\n  BasicAuth,\n  Category,\n  ChoiceChallenge,\n  Connection,\n  EmailCredentials,\n  Group,\n  Organisation,\n  Profile,\n  PronunciationChallenge,\n  Role,\n  SpeechChallenge,\n  User,\n\n  AudioPlayer,\n  AudioRecorder,\n\n  generateWaveSample,\n\n  Stopwatch,\n\n  VolumeMeter\n};\n"
  },
  {
    "__docId__": 527,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 528,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 529,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 530,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 531,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 532,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 533,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 534,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 535,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 536,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 537,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 538,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 539,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 540,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 541,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 542,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 543,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 544,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 545,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 546,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 547,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 548,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 549,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 550,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 551,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 552,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 553,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 554,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 555,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 556,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 557,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 558,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 559,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 560,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 561,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 562,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 563,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 564,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 565,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 566,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 567,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 568,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 569,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 570,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 571,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 572,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 573,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 575,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 576,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 577,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 578,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 579,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 580,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 581,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 582,
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "builtinExternal": true
  }
]